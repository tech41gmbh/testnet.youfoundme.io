{"version":3,"sources":["model/static.js","io/api.js","model/global.js","model/helper.js","App.js","routes/show.jsx","io/abis.js","io/web3_api.js","routes/editor.jsx","routes/search.jsx","routes/home.jsx","routes/register.jsx","routes/avatar.jsx","routes/connect.jsx","routes/message.jsx","routes/auth.jsx","routes/sign.jsx","index.js"],"names":["VERSION","VERSION_YEAR","ENABLE_WALLETCONNECT","CHAINNAME","CHAINNAME_TEST","RPCURL","RPCURL_TEST","CONTRACT_ADDRESS","AVALANCHE_FUJI_CHAIN_ID","CHAIN_ID","amount","Math","round","FLA_STUDENT","FLA_MINTED","FLA_INVESTOR","APIURL","getAvaxPrice","a","axios","get","res","data","result","AVAXUSD","c","searchPerson","term","startkey","url","token","GLOBAL","headers","Authorization","getPermissions","me","you","permissions","status","sendEmail","email","code","getPerson","pubkey","getPersonByUserName","username","SignVoucher","voucher","SIGNERURL","post","postPerson","person","POSTPERSONURL","then","response","console","log","JSON","stringify","catch","error","sendSMS","mobile","from","to","usernameFrom","msg","encodeURIComponent","refreshMe","refreshSearch","fireMe","fireSearch","Person","types","model","did","contract","jobtitle","teaser","img","avatar","tags","ref0","ref1","ref2","metaverse","location","gname","sname","metafile","flags","created","pin","magic","actions","self","set","p","length","AppState","searchfield","isLoaded","searchResult","chainId","chainTitle","routeky","connected","position","scannedCount","firstSearch","didfound","pagestate","messageDid","key","val","alert","create","appState","store","map","getMe","getSnapshot","getYou","getAppState","loadYouByPubKey","API","loadMeByPubKey","setAppstate","updateMePerson","onSnapshot","snapshot","dir","CreateMetafile","tokenid","image","attr","meta","switchChain","ethereum","hexString","activeChain","STATIC","toString","chainname","rpcUrls","request","method","params","chainName","TokenIdFromPubkey","hash","Web3","utils","soliditySha3","t","v","toLowerCase","hexToNumberString","PubkeyFromDid","substr","DidFromPubkey","MapChainId","chaindId","kmpSearch","text","pattern","lsp","i","j","charAt","push","App","isDesktop","useMediaQuery","query","useState","setChainId","setChainTitle","addr","setAddr","useClipboard","hasCopied","onCopy","setWeb3","navigate","useNavigate","search","useLocation","newTerm","URLSearchParams","isConnected","setIsConnected","setIsDone","pageState","setPageState","goSearch","searchlink","viewSelected","linkShowLInk","goEdit","useMoralis","Moralis","isAuthenticating","isAuthenticated","logout","authError","authenticate","login","user","getSigningData","onConnect","accounts","runLogin","onDisconnect","onAccountsChanged","HELPER","onChainChanged","chain","window","parseInt","useEffect","currentUser","User","current","address","enableWeb3","_web3","sessionStorage","setItem","session","Cloud","run","LogonMetaMask","signingMessage","logoutAll","blokexplorerAccount","linkSelected","bugurl","style","padding","margin","width","top","left","fontSize","color","size","variant","borderSpacing","m","height","src","borderBottom","paddingBottom","onClick","align","isLoading","href","isExternal","marginBottom","marginLeft","colSpan","l","paddingLeft","paddingRight","Show","lastDid","setLastDid","setTokenid","showConnect","setShowConnect","showUnlink","setShowUnlink","enableConnect","setEnableShowConnect","useParams","pkey","myPubkey","permission","isConnectedLocal","showConnectButton","e","downloadVcf","element","document","createElement","content","Date","toISOString","file","Blob","type","URL","createObjectURL","download","body","appendChild","click","connect","link","showlink","startsWith","substring","avatarlink","maxW","boxSize","objectFit","alt","disabled","marginTop","wdith","level","title","fgColor","bgColor","value","ABI_YOUFOUNDME","require","redeem","moralis","redeemer","price","web3","eth","Contract","f","methods","send","isValidSignature","r","s","call","setTokenURI","tokenId","uri","Units","ETH","ownerOf","Editor","setDid","setPubkey","setContract","setUsername","setJobtitle","setTeaser","setImg","setAvatar","setTags","setRef0","setRef1","setRef2","setLocation","setMetaverse","setStatus","setEmail","setMobile","setGname","setSname","setMetafile","setFlags","setCreated","setMagic","setPin","setCode","codeExpected","setCodeExpected","codeEmail","setCodeEmail","codeEmailExpected","setCodeEmailExpected","statusMessage","setStatusMessage","errorMessage","setErrorMessage","changeImage","setChangeImage","changeAvatar","setChangeAvatar","React","isOpen","setIsOpen","mobilevalerror","setMobilevalerror","mobilevalidate","setMobilevalidate","emailvalidate","setEmailvalidate","mobileok","setMobileok","emailok","setEmailok","emailvalerror","setEmailvalerror","showValidateboxEmail","setShowValidateboxEmail","showValidatebox","setShowValidatebox","dollar","setDollar","useSearchParams","setPerson","getPrice","priceAvax","priceUs","Intl","NumberFormat","maximumSignificantDigits","format","onClose","cancelRef","useRef","validateEmail","old","newFlage","validateMobile","codeexpected","setCheckbox","checked","perm","saveNFT","File","base64","btoa","saveIPFS","linkMeta","ipfs","WEB3","owner","rep","handleSave","minPrice","signedVoucher","now","personNew","personOld","toLocaleLowerCase","name","onChange","event","target","files","placeholder","isChecked","colorScheme","leastDestructiveRef","fontWeight","ref","ml","Search","setSearchResult","setSearchfield","setScannedCount","searchParams","showNext","setShowNext","useKeypress","startSearch","handleChange","next","pos","showPeople","prev","people","all","parse","showArray","max","h","leftmargin","border","w","Object","keys","k","d","fl","Home","Register","isUnique","setIsUnique","isReserved","setIsReserved","nameError","setNameError","nameOk","setNameOk","regex","regex2","check","className","cellPadding","trim","match","fChar","toUpperCase","setUsernamePre","isDisabled","Avatar","avataruri","setAvataruri","script","async","saveAvatar","getElementById","assign","Global","hidden","id","class","allow","Connect","message","setMessage","setImage","errormsg","setErrormsg","okmsg","setOkmsg","isSendDiabled","setIsSendDisabled","Message","connectionUser","setConnectionUser","connectionDid","setConnectionDid","Auth","referrer","getSessionToken","Sign","signature","setSignature","messageText","setMessageText","setAddress","signerDid","setSignerDid","isValid","setIsValid","haveUser","setHaveUser","isValidating","setIsValidating","currentAsync","validate","signMessage","msgParams2","domain","verifyingContract","version","primaryType","EIP712Domain","currentProvider","sendAsync","err","theme","extendTheme","fonts","heading","config","initialColorMode","rootElement","render","basename","appId","serverUrl","path","index"],"mappings":"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","file":"static/js/main.3ed9baf0.chunk.js","sourcesContent":["/** @format */\n\nexport const ENV = 'DEV'; // DEV - PROD\nexport const VERSION = '0.0.3' + ' ' + ENV;\nexport const VERSION_YEAR = '2022';\n\nexport const ENABLE_WALLETCONNECT = false;\nexport const DISABLE_MINTING = false;\n\nexport const CHAINNAME = 'Avalanche Mainnet';\nexport const CHAINNAME_TEST = 'Avalanche Fuji Testnet';\n\nexport const RPCURL = 'https://api.avax.network/ext/bc/C/rpc';\nexport const RPCURL_TEST = 'https://api.avax-test.network/ext/bc/C/rpc';\n\nexport const METAMASK_LINK = 'https://metamask.io';\n\n// Contract Adresses\n//  '0xe83cA455C78fdc4Eac78444Da84cFb835A10ccA4';\nexport const CONTRACT_ADDRESS_FUJI =\n  '0x5C7A8476FF24A164cfEbb19290969C5B86FACFEE';\n\n// '0x1A014C43a4A67e74449337bCC53220F9de9f7A13';\nexport const CONTRACT_ADDRESS_MAIN =\n  '0xbdF14F15ca0EeDA7eAa2BCE4af15567263c34291';\nexport const CONTRACT_ADDRESS =\n  ENV == 'DEV' ? CONTRACT_ADDRESS_FUJI : CONTRACT_ADDRESS_MAIN;\n\n// Expolorer\nexport const AVALANCHE_EXPLORER_FUJI = 'https://testnet.snowtrace.io/';\nexport const AVALANCHE_EXPLORER_MAIN = 'https://snowtrace.io/';\nexport const AVALANCHE_EXPLORER =\n  ENV == 'DEV' ? AVALANCHE_EXPLORER_FUJI : AVALANCHE_EXPLORER_MAIN;\n\n// Chain ID\nexport const AVALANCHE_FUJI_CHAIN_ID = 43113;\nexport const AVALANCHE_MAIN_CHAIN_ID = 43114;\nexport const CHAIN_ID =\n  ENV == 'DEV' ? AVALANCHE_FUJI_CHAIN_ID : AVALANCHE_MAIN_CHAIN_ID;\n\nconst serverUrl_test = 'https://xhuajeqb4esg.usemoralis.com:2053/server';\nconst serverUrl_main = 'https://k2dnmd29p6q0.usemoralis.com:2053/server';\nexport const MORALIS_SERVER = ENV == 'DEV' ? serverUrl_test : serverUrl_main;\n\nconst appId_test = 'EKKcMCLp0U2o6l5xCNbuvZmmjCKkyRThrBqzEj9Z';\nconst appId_main = '0vuLj9rAMGGW5G4cARAiB70K8dB8uvIaiDMuRkDq';\nexport const MORALIS_APPID = ENV == 'DEV' ? appId_test : appId_main;\n\nexport const MORALIS_IPFS = 'https://ipfs.moralis.io:2053/';\nexport const PINATA_IPFS = 'https://gateway.pinata.cloud/ipfs/';\nexport const WEBROOT = 'https://youfoundme.io';\n\nconst NanoAvax = 1;\nconst MicroAvax = 1000 * NanoAvax;\nconst Schmeckle = 49 * MicroAvax + 463 * NanoAvax;\nconst MilliAvax = 1000 * MicroAvax;\nconst Avax = 1000 * MilliAvax;\nconst KiloAvax = 1000 * Avax;\nconst MegaAvax = 1000 * KiloAvax;\n\nfunction convertAvax(amount) {\n  return Math.round(amount * 10 ** 18);\n}\n\nexport const DID_PRICE_AVAX_MULTI = 0.05; //Float\nexport const DID_PRICE_AVAX_DISPLAY = '0.05'; //String\nexport const DID_PRICE_AVAX = convertAvax(0.05);\n\nconst SIGNKEY_DEV = 'KEY_PRIV_DEV0';\nconst SIGNKEY_PROD = 'KEY_PRIV_PROD0';\nexport const SIGNKEY = ENV == 'DEV' ? SIGNKEY_DEV : SIGNKEY_PROD;\n\n/*NanoAvax uint64 = 1\nMicroAvax uint64 = 1000 * NanoAvax\nSchmeckle uint64 = 49*MicroAvax + 463*NanoAvax\nMilliAvax uint64 = 1000 * MicroAvax\nAvax uint64 = 1000 * MilliAvax\nKiloAvax uint64 = 1000 * Avax\nMegaAvax uint64 = 1000 * KiloAvax\n\n*/\n\nexport const FLA_EMAILCONFIRMED = 1; // not NFT Meta\nexport const FLA_SMSCONFIRMED = 2; // not NFT Meta\nexport const FLA_FULLTIME = 4; // not NFT Meta\nexport const FLA_PARTTIME = 8; // not NFT Meta\nexport const FLA_CONTRACTS = 16; // not NFT Meta\nexport const FLA_PROJECTS = 32; // not NFT Meta\nexport const FLA_SCHOOL = 64; // Not NFT\nexport const FLA_STUDENT = 128; // Not NFT\nexport const FLA_LOCATION = 256; // Not NFT\nexport const FLA_REFERENCES = 512; // Hide References (Not NFT Meta)\nexport const FLA_CONTACT = 1024; // Disallow request of contact details (Not NFT)\nexport const FLA_ANONYMOUS = 2048; // Anonymous\nexport const FLA_MINTED = 4096; // User has an NFT\nexport const FLA_INVESTOR = 8192; // Investor\n\nexport const FLA_SPARE0 = 16384;\nexport const FLA_SPARE1 = 32768;\nexport const FLA_SPARE2 = 65536;\nexport const FLA_SPARE3 = 131072;\nexport const FLA_SPARE4 = 262144;\n","/** @format */\n\nimport axios from 'axios';\nimport * as GLOBAL from '../model/global';\nimport * as STATIC from '../model/static';\n\nvar APIURL = 'https://api.youfoundme.io/v0/';\nif (STATIC.ENV == 'DEV') {\n  APIURL = 'https://api-dev.youfoundme.io/v0/';\n}\n\n/*\n========================================================================================================================\n= Search\n========================================================================================================================\n*/\nexport async function getAvaxPrice() {\n  try {\n    let res = await axios.get(\n      'https://api.kraken.com/0/public/Ticker?pair=AVAXUSD'\n    );\n    return res.data.result.AVAXUSD.c[0];\n  } catch (e) {\n    return '~5.00';\n  }\n}\n\n// https://api-dev.youfoundme.io/v0/search/latest/none\nexport async function searchPerson(term, startkey) {\n  const url = APIURL + 'search/' + term + '/' + startkey;\n\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data;\n}\n\nexport async function getPermissions(me, you) {\n  const token = GLOBAL.getAppState().token;\n  const url = APIURL + 'perm2/get/' + me + '/' + you;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n\n  return res.data.permissions;\n}\n\nexport async function deletePermissions(me, you) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'perm2/del/' + me + '/' + you, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.status;\n}\n\nexport async function setPermissions(me, you) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'perm2/set/' + me + '/' + you, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.status;\n}\n\nexport async function sendEmail(email) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'email/verifyemail/' + email, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n\n  return res.data.code;\n}\n\nexport async function getPerson(pubkey) {\n  const GETPERSONURL = APIURL + 'person/get/';\n  const url = GETPERSONURL + pubkey;\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data;\n}\n\nexport async function getPersonByUserName(username) {\n  const GETPERSONURL = APIURL + 'person/getuser/';\n  const url = GETPERSONURL + username;\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data;\n}\n\nexport async function SignVoucher(voucher) {\n  const SIGNERURL = APIURL + 'signer';\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.post(\n    SIGNERURL,\n    {\n      voucher: voucher,\n    },\n    {\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n    }\n  );\n  return res.data;\n}\n\nexport async function postPerson(person) {\n  const POSTPERSONURL = APIURL + 'person/post/';\n  const token = GLOBAL.getAppState().token;\n  axios\n    .post(\n      POSTPERSONURL,\n      {\n        person: person,\n      },\n      {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      }\n    )\n    .then(function (response) {\n      console.log(JSON.stringify(response));\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport async function sendSMS(mobile) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'sms/sendsms/' + mobile, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.code;\n}\n\n// Not securees by JWT\nexport async function getJWT(username, did, session) {\n  let res = await axios.get(\n    APIURL + 'token/get/' + username + '/' + did + '/' + session\n  );\n  return res.data.token;\n}\n\nexport async function verifyJWT(token) {\n  let res = await axios.get(APIURL + 'token/validate/' + token);\n  return res.data.verified;\n}\n\nexport async function connect(from, to, usernameFrom, msg) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(\n    APIURL +\n      'connect/' +\n      from +\n      '/' +\n      to +\n      '/' +\n      usernameFrom +\n      '/' +\n      encodeURIComponent(msg),\n    {\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n    }\n  );\n  return res.data;\n}\n","/** @format */\n\nimport { types, getSnapshot, onSnapshot } from 'mobx-state-tree';\nimport * as API from '../io/api.js';\n\nexport var refreshMe = 0;\nexport var refreshYou = 0;\nexport var refreshSearch = 0;\nexport var refreshApp = 0;\n\nexport function fireMe() {\n  refreshMe = refreshMe + 1;\n}\nexport function fireYou() {\n  refreshYou = refreshYou + 1;\n}\nexport function fireSearch() {\n  refreshSearch = refreshSearch + 1;\n}\nexport function fireapp() {\n  refreshSearch = refreshSearch + 1;\n}\n\nconst Person = types\n  .model({\n    did: '',\n    pubkey: '',\n    contract: '',\n    username: '',\n    jobtitle: '',\n    teaser: '',\n    img: '',\n    avatar: '',\n    tags: '',\n    ref0: '',\n    ref1: '',\n    ref2: '',\n    metaverse: '',\n    location: '',\n    status: '',\n    email: '',\n    mobile: '',\n    gname: '',\n    sname: '',\n    metafile: '',\n    flags: '',\n    created: '',\n    pin: '',\n    magic: '',\n  })\n  .actions((self) => ({\n    set(p) {\n      if (p == null || p.length < 10) {\n        return;\n      }\n      self.did = p.did;\n      self.pubkey = p.pubkey;\n      self.contract = p.contract;\n      self.username = p.username;\n      self.jobtitle = p.jobtitle;\n      self.avatar = p.avatar;\n      self.teaser = p.teaser;\n      self.img = p.img;\n      self.tags = p.tags;\n      self.ref0 = p.ref0;\n      self.ref1 = p.ref1;\n      self.ref2 = p.ref2;\n      self.metaverse = p.metaverse;\n      self.location = p.location;\n      self.status = p.status;\n      self.email = p.email;\n      self.mobile = p.mobile;\n      self.gname = p.gname;\n      self.sname = p.sname;\n      self.metafile = p.metafile;\n      self.flags = p.flags;\n      self.created = p.created;\n      self.magic = p.magic;\n      self.pin = p.pin;\n    },\n  }));\n\nconst AppState = types\n  .model({\n    searchfield: '',\n    did: '',\n    isLoaded: false,\n    searchResult: '',\n    chainId: 0,\n    chainTitle: 'unknown',\n    routeky: 0,\n    token: '',\n    connected: false,\n    position: 0,\n    scannedCount: 0,\n    firstSearch: true,\n    didfound: false,\n    pagestate: 'FIND',\n    messageDid: '',\n  })\n  .actions((self) => ({\n    set(key, val) {\n      if (val == null) {\n        return;\n      }\n      switch (key) {\n        case 'messageDid':\n          self.messageDid = val;\n          return;\n        case 'pagestate':\n          self.pagestate = val;\n          return;\n        case 'didfound':\n          self.didfound = val;\n          return;\n        case 'firstSearch':\n          self.firstSearch = val;\n          return;\n\n        case 'position':\n          self.position = val;\n          return;\n\n        case 'scannedCount':\n          self.scannedCount = val;\n          return;\n\n        case 'routeky':\n          self.routeky = val;\n          return;\n\n        case 'did':\n          self.did = val;\n          return;\n\n        case 'searchfield':\n          self.searchfield = val;\n          return;\n\n        case 'isLoaded':\n          self.isLoaded = val;\n          return;\n\n        case 'searchResult':\n          self.searchResult = val;\n          return;\n\n        case 'chainId':\n          self.chainId = val;\n          return;\n\n        case 'chainTitle':\n          self.chainTitle = val;\n          return;\n\n        case 'token':\n          self.token = val;\n          return;\n\n        case 'connected':\n          self.connected = val;\n          return;\n\n        default:\n          alert(\n            'unknown key in appstate action key: ' + key + ' value: ' + val\n          );\n          return;\n      }\n    },\n  }));\n\nconst me = Person.create();\nconst you = Person.create();\nconst appState = AppState.create();\n\nconst RootStore = types.model({\n  me: types.map(Person),\n  you: types.map(Person),\n  appState: types.map(AppState),\n});\n\n// create an instance from a snapshot\nconst store = RootStore.create({});\n\n// listen to new snapshots\nonSnapshot(store, (snapshot) => {\n  console.dir(snapshot);\n});\n\nexport function getMe() {\n  return getSnapshot(me);\n}\n\nexport function getYou() {\n  return getSnapshot(you);\n}\n\nexport function getAppState() {\n  return getSnapshot(appState);\n}\n\nexport async function loadYouByPubKey(pubkey) {\n  try {\n    var p = await API.getPerson(pubkey);\n    you.set(p.person);\n    return p.person;\n  } catch (err) {\n    console.log(err);\n  }\n  return null;\n}\n\nexport async function setYou(person) {\n  you.set(person);\n}\n\nexport async function loadMeByPubKey(pubkey) {\n  var p = await API.getPerson(pubkey);\n  me.set(p.person);\n  return p.person;\n}\n\nexport async function setAppstate(key, val) {\n  appState.set(key, val);\n  return appState;\n}\n\nexport async function updateMePerson(person) {\n  me.set(person);\n  API.postPerson(person);\n  return me;\n}\n\nexport async function UpdateMePersonNoDbSave(person) {\n  me.set(person);\n  return me;\n}\n","/** @format */\nimport Web3 from 'web3';\nimport { getHasher, OutputType, HashType } from 'bigint-hash';\nimport Web3EthAbi from 'web3-eth-abi';\nimport * as STATIC from '../model/static';\n//10196219370672644541601216188660491276260478785220810163497529090616   SHA3_224\n//96932911298637702523298034616076952241110591865517956290731622492456824546905\n// 82751696802861446618287329271326379553441206173434891033707984521910594309783\n// export function TokenIdFromDid(did) {\n//   return (\n//     '' +\n//     getHasher(HashType.SHA3_256)\n//       .update(Buffer.from(did.substr(8)))\n//       .digest(OutputType.BigInt)\n//   );\n// }\n\nexport function CreateMetafile(\n  did,\n  tokenid,\n  image,\n  avatar,\n  username,\n  jobtitle,\n  teaser\n) {\n  var attr = {};\n  attr['did'] = did;\n  attr['tokenid'] = tokenid;\n  attr['username'] = username;\n  attr['avatar'] = avatar;\n  attr['jobtitle'] = jobtitle;\n  attr['teaser'] = teaser;\n\n  var meta = {};\n  meta['name'] = did;\n  meta['description'] = 'Youfoundme DID, see https://youfoundme.io';\n  meta['image'] = image;\n  meta['external_url'] = 'https://youfoundme.io';\n  meta['attributes'] = attr;\n  return JSON.stringify(meta);\n}\n\nexport async function switchChain(ethereum) {\n  var activeChain = STATIC.CHAIN_ID;\n  var hexString = '0x' + activeChain.toString(16);\n  var chainname = STATIC.CHAINNAME;\n  var rpcUrls = STATIC.RPCURL;\n  if (activeChain == STATIC.AVALANCHE_FUJI_CHAIN_ID) {\n    chainname = STATIC.CHAINNAME_TEST;\n    rpcUrls = STATIC.RPCURL_TEST;\n  }\n\n  try {\n    await ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: hexString }],\n    });\n    return true;\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    if (switchError.code === 4902) {\n      try {\n        var added = await ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [\n            {\n              chainId: hexString,\n              chainName: chainname,\n              rpcUrls: [rpcUrls],\n            },\n          ],\n        });\n        return true;\n      } catch (addError) {\n        // handle \"add\" error\n        return false;\n      }\n    }\n    // handle other \"switch\" errors\n  }\n}\n\nexport function createTextFileDownload(meta, name) {\n  const TextFile = (meta) => {\n    const element = document.createElement('a');\n    const file = new Blob([meta], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = name;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n}\n\nexport function TokenIdFromPubkey(pubkey) {\n  //return uint256(Web3.utils.soliditySha3(pubkey));\n  const hash = Web3.utils.soliditySha3({\n    t: 'string',\n    v: pubkey.toLowerCase(),\n  });\n  return Web3.utils.hexToNumberString(hash);\n}\n\nexport function PubkeyFromDid(did) {\n  return did.substr(8).toLowerCase();\n}\n\nexport function DidFromPubkey(pubkey) {\n  return 'did:yfm:' + pubkey.toLowerCase();\n}\n\nexport function MapChainId(chaindId) {\n  switch (chaindId) {\n    case 1:\n      return 'Ethereum Mainnet';\n\n    case 43113:\n      return 'Avalanche Fuji';\n\n    case 43114:\n      return 'Avalanche Main';\n\n    default:\n      return '';\n  }\n}\n\nexport function kmpSearch(text, pattern) {\n  if (pattern.length == 0) return 0; // Immediate match\n\n  // Compute longest suffix-prefix table\n  var lsp = [0]; // Base case\n  for (var i = 1; i < pattern.length; i++) {\n    var j = lsp[i - 1]; // Start by assuming we're extending the previous LSP\n    while (j > 0 && pattern.charAt(i) != pattern.charAt(j)) j = lsp[j - 1];\n    if (pattern.charAt(i) == pattern.charAt(j)) j++;\n    lsp.push(j);\n  }\n\n  // Walk through text string\n  var j = 0; // Number of chars matched in pattern\n  for (var i = 0; i < text.length; i++) {\n    while (j > 0 && text.charAt(i) != pattern.charAt(j)) j = lsp[j - 1]; // Fall back in the pattern\n    if (text.charAt(i) == pattern.charAt(j)) {\n      j++; // Next char matched, increment position\n      if (j == pattern.length) return i - (j - 1);\n    }\n  }\n  return -1; // Not found\n}\n","/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useMoralis } from 'react-moralis';\nimport {\n  Link as LINKCH,\n  HStack,\n  VStack,\n  Button,\n  Text,\n  Heading,\n  useClipboard,\n  Table,\n  Tr,\n  Td,\n  Image,\n  Box,\n  Center,\n} from '@chakra-ui/react';\nimport { useMediaQuery } from 'react-responsive';\nimport { CopyIcon, ExternalLinkIcon } from '@chakra-ui/icons';\nimport { Offline, Online } from 'react-detect-offline';\nimport * as GLOBAL from './model/global';\nimport * as HELPER from './model/helper';\nimport * as STATIC from './model/static';\nimport * as API from './io/api';\n//==========================================================================================\nexport default function App() {\n  const isDesktop = useMediaQuery({ query: '(min-width: 1537px)' });\n  const [chainId, setChainId] = useState(0);\n  const [chainTitle, setChainTitle] = useState('');\n  const [addr, setAddr] = useState('');\n  const [did, setDid] = useState('');\n  const { hasCopied, onCopy } = useClipboard(addr);\n  const [web3, setWeb3] = useState({});\n  const navigate = useNavigate();\n  const search = useLocation().search;\n  const newTerm = new URLSearchParams(search).get('term');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [pageState, setPageState] = useState('FIND');\n\n  const goSearch = async () => {\n    GLOBAL.setAppstate('pagestate', 'FIND');\n    setPageState('FIND');\n    if (newTerm != null && newTerm.length > 0) {\n      GLOBAL.setAppstate('searchfield', newTerm);\n    }\n    var searchlink = '/search?term=' + GLOBAL.getAppState().searchfield;\n    navigate(searchlink);\n  };\n\n  const viewSelected = () => {\n    setPageState('VIEW');\n    GLOBAL.setAppstate('pagestate', 'VIEW');\n    if (GLOBAL.getAppState().did) {\n      var linkShowLInk = '/show/' + GLOBAL.getAppState().did;\n      GLOBAL.setAppstate('pagestate', 'VIEW');\n      navigate(linkShowLInk);\n      return;\n    }\n    GLOBAL.setAppstate('pagestate', 'FIND');\n    navigate('/search?term=' + GLOBAL.getAppState().searchfield);\n  };\n\n  const goEdit = async () => {\n    setPageState('EDIT');\n    GLOBAL.setAppstate('pagestate', 'EDIT');\n    navigate('/editor');\n  };\n\n  const location = useLocation();\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n  Moralis.getSigningData = () => 'Signin to ƴoufoundme';\n\n  // Moralis Events =================================================================\n  Moralis.onConnect(async (accounts) => {\n    runLogin();\n  });\n\n  Moralis.onDisconnect(async (accounts) => {\n    GLOBAL.setAppstate('connected', false);\n    setIsConnected(false);\n  });\n\n  Moralis.onAccountsChanged(async (accounts) => {\n    if (accounts[0] == null) {\n      return;\n    }\n    GLOBAL.loadMeByPubKey(accounts[0]);\n    GLOBAL.setAppstate('did', HELPER.DidFromPubkey(accounts[0]));\n  });\n\n  Moralis.onChainChanged(async (chain) => {\n    if (window.ethereum) {\n      var chainId = parseInt(window.ethereum.chainId, 16);\n      // TODO check allowd chains...\n      setChainTitle(HELPER.MapChainId(chainId));\n      GLOBAL.setAppstate('chainId', chainId);\n    }\n  });\n  // End Moralis Events =================================================================\n\n  useEffect(() => {\n    setPageState(GLOBAL.getAppState().pagestate);\n  }, GLOBAL.refreshApp);\n\n  const runLogin = async () => {\n    const currentUser = Moralis.User.current();\n    if (!currentUser) {\n      return;\n    }\n    var address = currentUser.get('ethAddress');\n    setAddr(address);\n    var did = HELPER.DidFromPubkey(address);\n    Moralis.enableWeb3().then((_web3) => {\n      setWeb3(_web3);\n      if (window.ethereum) {\n        var chainId = parseInt(window.ethereum.chainId, 16);\n        if (chainId != STATIC.CHAIN_ID) {\n          const hasSwitched = HELPER.switchChain(window.ethereum);\n          if (!hasSwitched) {\n            return;\n          }\n        }\n        setChainId(chainId);\n        setChainTitle(HELPER.MapChainId(chainId));\n        GLOBAL.setAppstate('routeky', GLOBAL.getAppState().routeky + 1);\n        window.sessionStorage.setItem('sessionKey', address);\n        const params = {\n          username: currentUser.get('username'),\n          did: did,\n          session: currentUser.get('sessionToken'),\n        };\n\n        // TODO check if JWT exists and is valid for the time being - replace if expired\n        Moralis.Cloud.run('createToken', params).then((token) => {\n          GLOBAL.setAppstate('token', token);\n          GLOBAL.loadMeByPubKey(address).then(() => {\n            setIsConnected(true);\n            GLOBAL.setAppstate('connected', true);\n            setIsDone(false);\n            GLOBAL.fireMe();\n            var pagestate = GLOBAL.getAppState().pagestate;\n\n            if (pagestate == 'EDIT') {\n              if (GLOBAL.getMe().username == '') {\n                navigate('/register');\n                return;\n              }\n              GLOBAL.fireMe();\n              navigate('/editor');\n              return;\n            }\n            if (pagestate == 'AUTH') {\n              navigate('/auth');\n              return;\n            }\n            if (pagestate == 'REGISTER') {\n              navigate('/register');\n              return;\n            }\n            if (pagestate == 'SIGN') {\n              navigate('/sign');\n              return;\n            }\n            if (pagestate == 'FIND') {\n              navigate('/search?term=latest');\n              return;\n            }\n            if (pagestate == 'MESSAGE') {\n              navigate('/message/1/?did=' + GLOBAL.getAppState().messageDid);\n              return;\n            }\n            navigate('/search');\n          });\n        });\n      }\n    });\n  };\n\n  const LogonMetaMask = async () => {\n    Moralis.authenticate({ signingMessage: 'Sign in ƴoufoundme' }).then(\n      function (user) {\n        runLogin();\n      }\n    );\n  };\n\n  const logonWalletConnect = async () => {\n    try {\n      await authenticate({\n        signingMessage: 'Sign in ƴoufoundme',\n        provider: 'walletconnect',\n        mobileLinks: [\n          'rainbow',\n          'metamask',\n          'argent',\n          'trust',\n          'imtoken',\n          'pillar',\n        ],\n        chainId: STATIC.CHAIN_ID,\n      }).then(function (user) {\n        runLogin();\n      });\n    } catch (err) {\n      debugger;\n      console.log(err);\n    }\n  };\n\n  const logoutAll = async () => {\n    GLOBAL.setAppstate('token', '');\n    window.sessionStorage.setItem('sessionKey', '');\n    setIsConnected(false);\n    GLOBAL.setAppstate('connected', false);\n    logout();\n  };\n\n  var blokexplorerAccount = 'https://testnet.snowtrace.io/address/' + addr;\n\n  const linkSelected = () => {\n    var addr = user.get('ethAddress');\n    var did = HELPER.DidFromPubkey(addr);\n    var viewlink = '/show/' + did;\n    navigate(viewlink);\n  };\n\n  const bugurl =\n    'mailto:bug@youfoundme.i?subject=youfoundme-bug-' + STATIC.VERSION;\n\n  // Mobile\n  if (!isDesktop) {\n    return (\n      <div\n        style={{\n          padding: '0',\n          margin: '0',\n          width: '100%',\n          top: '0px',\n          position: 'absolute',\n        }}>\n        <nav>\n          <center>\n            <Table\n              size=\"lg\"\n              variant=\"simple\"\n              style={{\n                borderSpacing: '0px',\n                p: '0',\n                m: '0',\n                width: '100%',\n              }}>\n              <Tr>\n                <Td width=\"100%\">\n                  <center>\n                    <LINKCH href={STATIC.WEBROOT}>\n                      <Image\n                        width=\"37\"\n                        height=\"37\"\n                        src=\"/android-chrome-192x192.png\"></Image>\n                      <Heading fontSize=\"5xl\">ƴoufoundme</Heading>\n                    </LINKCH>\n                    <Online>\n                      <Text fontSize=\"xs\" color=\"green.500\">\n                        online\n                      </Text>\n                    </Online>\n                    <Offline color=\"red.500\">\n                      <Text fontSize=\"xs\" color=\"red.500\">\n                        offline\n                      </Text>\n                    </Offline>\n                  </center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td width=\"100%\">\n                  <center>\n                    {!isConnected && (\n                      <VStack>\n                        <HStack>\n                          {STATIC.ENABLE_WALLETCONNECT && (\n                            <Button\n                              size=\"lg\"\n                              isLoading={isAuthenticating}\n                              onClick={() => logonWalletConnect()}>\n                              Wallet Connect\n                            </Button>\n                          )}\n                          &nbsp;&nbsp;\n                          <Button\n                            size=\"lg\"\n                            isLoading={isAuthenticating}\n                            onClick={() => LogonMetaMask()}>\n                            Metamask\n                          </Button>\n                        </HStack>\n                      </VStack>\n                    )}\n\n                    {isConnected && (\n                      <VStack>\n                        <HStack>\n                          <Button size=\"lg\" onClick={() => logoutAll()}>\n                            disconnet\n                          </Button>\n                          <LINKCH\n                            color=\"blue.500\"\n                            href=\"https://testnet.snowtrace.io/block/0x3b9197c2e27818ab344d1c567917e8c569850b5901926f1e777c0e505547a84e\"\n                            isExternal>\n                            <HStack align=\"flex-end\">\n                              <Text fontSize=\"xs\">\n                                {chainTitle} {chainId}\n                              </Text>\n                            </HStack>\n                          </LINKCH>\n                        </HStack>\n\n                        <HStack>\n                          <LINKCH onClick={() => linkSelected()}>\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              me\n                            </Text>\n                          </LINKCH>\n                          <LINKCH href={blokexplorerAccount} isExternal>\n                            <HStack>\n                              <Text fontSize=\"xs\">{addr}</Text>\n                              <ExternalLinkIcon\n                                fontSize=\"xs\"\n                                style={{\n                                  marginBottom: '4px',\n                                  marginLeft: '2px',\n                                }}\n                              />\n                            </HStack>\n                          </LINKCH>\n                        </HStack>\n                      </VStack>\n                    )}\n                  </center>\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td width=\"100%\">\n                  <Center>\n                    <HStack>\n                      {pageState == 'FIND' && (\n                        <Button\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          color=\"blue.300\"\n                          onClick={goSearch}>\n                          Find\n                        </Button>\n                      )}\n                      {pageState != 'FIND' && (\n                        <Button\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          onClick={goSearch}>\n                          Find\n                        </Button>\n                      )}\n\n                      {pageState == 'VIEW' && (\n                        <Button\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          color=\"blue.300\"\n                          onClick={() => viewSelected()}>\n                          View\n                        </Button>\n                      )}\n                      {pageState != 'VIEW' && (\n                        <Button\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          onClick={() => viewSelected()}>\n                          View\n                        </Button>\n                      )}\n                      {pageState == 'EDIT' && (\n                        <Button\n                          onClick={() => goEdit()}\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          color=\"blue.300\">\n                          {' '}\n                          Me\n                        </Button>\n                      )}\n                      {pageState != 'EDIT' && (\n                        <Button\n                          onClick={() => goEdit()}\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\">\n                          Me\n                        </Button>\n                      )}\n                    </HStack>\n                  </Center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Outlet />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td colSpan=\"3\">\n                  <center>\n                    <Text color=\"yellow.500\">\n                      Found a bug? Please let us know at:{' '}\n                      <LINKCH color=\"blue.500\" href={bugurl} l>\n                        bug@youfoundme.io\n                      </LINKCH>\n                    </Text>\n                  </center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <center>\n                    <Text color=\"green.500\" fontSize=\"xs\">\n                      ©{STATIC.VERSION_YEAR} TECH41 GmbH Berlin - Privacy Policy\n                      - Terms of Service\n                    </Text>\n                    <Text color=\"green.500\" fontSize=\"xs\">\n                      V: {STATIC.VERSION}\n                    </Text>\n                  </center>\n                </Td>\n              </Tr>\n            </Table>\n          </center>\n        </nav>\n      </div>\n    );\n  }\n\n  // Desktop\n  return (\n    <div\n      style={{\n        padding: '0',\n        margin: '0',\n        width: '100%',\n        top: '0px',\n        position: 'absolute',\n      }}>\n      <div style={{ position: 'absolute', left: 29, top: 80 }}>\n        <Online>\n          <Text fontSize=\"xs\" color=\"green.500\">\n            online\n          </Text>\n        </Online>\n        <Offline color=\"red.500\">\n          <Text fontSize=\"xs\" color=\"red.500\">\n            offline\n          </Text>\n        </Offline>\n      </div>\n      <nav>\n        <center>\n          <Table\n            size=\"lg\"\n            variant=\"simple\"\n            style={{\n              borderSpacing: '0px',\n              p: '0',\n              m: '0',\n              width: '100%',\n            }}>\n            <Tr>\n              <Td\n                style={{\n                  width: '20px',\n                }}>\n                <HStack>\n                  <Image\n                    width=\"37\"\n                    height=\"37\"\n                    src=\"/android-chrome-192x192.png\"></Image>\n                  <Box width=\"10px\"></Box>\n                  <Heading fontSize=\"5xl\">ƴoufoundme</Heading>\n                </HStack>\n              </Td>\n              <Td width=\"100%\">\n                <center>\n                  <nav\n                    style={{\n                      width: '100%',\n                      borderBottom: 'solid 0px',\n                      paddingBottom: '1rem',\n                    }}>\n                    {pageState == 'FIND' && (\n                      <Button color=\"blue.300\" size=\"lg\" onClick={goSearch}>\n                        Find\n                      </Button>\n                    )}\n                    {pageState != 'FIND' && (\n                      <Button size=\"lg\" onClick={goSearch}>\n                        Find\n                      </Button>\n                    )}\n                    &nbsp;&nbsp; &nbsp;\n                    {pageState == 'VIEW' && (\n                      <Button\n                        color=\"blue.300\"\n                        size=\"lg\"\n                        onClick={() => viewSelected()}>\n                        View\n                      </Button>\n                    )}\n                    {pageState != 'VIEW' && (\n                      <Button size=\"lg\" onClick={() => viewSelected()}>\n                        View\n                      </Button>\n                    )}\n                    &nbsp;&nbsp; &nbsp;\n                    {pageState == 'EDIT' && (\n                      <Button\n                        color=\"blue.300\"\n                        onClick={() => goEdit()}\n                        size=\"lg\">\n                        Me\n                      </Button>\n                    )}\n                    {pageState != 'EDIT' && (\n                      <Button size=\"lg\" onClick={() => goEdit()}>\n                        Me\n                      </Button>\n                    )}\n                  </nav>\n                </center>\n              </Td>\n              <Td width=\"20px\" align=\"right\">\n                <VStack align=\"flex-end\">\n                  {!isConnected && (\n                    <HStack align=\"flex-end\">\n                      {STATIC.ENABLE_WALLETCONNECT && (\n                        <Button\n                          size=\"lg\"\n                          isLoading={isAuthenticating}\n                          onClick={() => logonWalletConnect()}>\n                          Wallet Connect\n                        </Button>\n                      )}\n                      <Button\n                        size=\"lg\"\n                        isLoading={isAuthenticating}\n                        onClick={() => LogonMetaMask()}>\n                        Metamask\n                      </Button>\n                    </HStack>\n                  )}\n                  {isConnected && (\n                    <VStack align=\"flex-end\">\n                      <HStack align=\"flex-end\">\n                        <LINKCH\n                          color=\"blue.500\"\n                          href=\"https://testnet.snowtrace.io/block/0x3b9197c2e27818ab344d1c567917e8c569850b5901926f1e777c0e505547a84e\"\n                          isExternal>\n                          <HStack align=\"flex-end\">\n                            <Text fontSize=\"xs\">\n                              {chainTitle} {chainId}\n                            </Text>\n                          </HStack>\n                        </LINKCH>\n                        <Button onClick={() => logoutAll()}>disconnet</Button>\n                      </HStack>\n\n                      <HStack align=\"flex-end\">\n                        <LINKCH onClick={() => linkSelected()}>\n                          <Text color=\"blue.500\" fontSize=\"xs\">\n                            me\n                          </Text>\n                        </LINKCH>\n                        <LINKCH href={blokexplorerAccount} isExternal>\n                          <HStack align=\"flex-end\">\n                            <Text fontSize=\"xs\">{addr}</Text>\n                            <ExternalLinkIcon\n                              fontSize=\"xs\"\n                              style={{ marginBottom: '4px', marginLeft: '2px' }}\n                            />\n                          </HStack>\n                        </LINKCH>\n                      </HStack>\n                    </VStack>\n                  )}\n                  ,\n                </VStack>\n              </Td>\n            </Tr>\n            <Tr>\n              <Td colSpan=\"3\">\n                <Outlet />\n              </Td>\n            </Tr>\n\n            <Tr>\n              <Td colSpan=\"3\">\n                <center>\n                  <Text color=\"yellow.500\">\n                    Found a bug? Please let us know at:{' '}\n                    <LINKCH color=\"blue.500\" href={bugurl} l>\n                      bug@youfoundme.io\n                    </LINKCH>\n                  </Text>\n                </center>\n              </Td>\n            </Tr>\n\n            <Tr>\n              <Td colSpan=\"3\">\n                <center>\n                  <Text color=\"green.500\" fontSize=\"xs\">\n                    ©{STATIC.VERSION_YEAR} TECH41 GmbH Berlin - Privacy Policy -\n                    Terms of Service - V: {STATIC.VERSION}\n                  </Text>\n                </center>\n              </Td>\n            </Tr>\n          </Table>\n        </center>\n      </nav>\n    </div>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState, updateState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport QRCode from 'react-qr-code';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n  SunIcon,\n  InfoIcon,\n} from '@chakra-ui/icons';\nimport {\n  HStack,\n  useClipboard,\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Text,\n  Image,\n  Heading,\n  Container,\n  Link,\n  Button,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  useLatestRef,\n  VStack,\n  Avatar,\n} from '@chakra-ui/react';\n\nimport { useMoralis } from 'react-moralis';\n\nimport * as GLOBAL from '../model/global';\nimport * as HELPER from '../model/helper';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\n\n//******************************************************** */\nexport default function Show() {\n  const [lastDid, setLastDid] = useState('');\n  const [tokenid, setTokenid] = useState('');\n  const [showConnect, setShowConnect] = useState(false);\n  const [showUnlink, setShowUnlink] = useState(false);\n  const [enableConnect, setEnableShowConnect] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  var { did } = useParams();\n  const { hasCopied, onCopy } = useClipboard(did);\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n  //0x345879b60bf5ccddd06bc91e49a6ebc4e93cfdaa   Matd\n  //0x58d22f24cd7fda155f9f7eefe9b32add46388ab9   Turtle\n  //0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc   Cryptophine\n\n  const navigate = useNavigate();\n  const appState = GLOBAL.getAppState();\n\n  // TODO multiple requests\n  useEffect(() => {\n    GLOBAL.setAppstate('pagestate', 'VIEW');\n    if (did != GLOBAL.getYou().did) {\n      GLOBAL.setAppstate('didfound', false);\n      getPerson();\n    }\n  }, GLOBAL.refreshSearch);\n\n  const getPerson = async () => {\n    if (lastDid == '' || did !== lastDid) {\n      var pkey = HELPER.PubkeyFromDid(did);\n\n      const person = await GLOBAL.loadYouByPubKey(pkey);\n      if (person == null || JSON.stringify(person) == '{}') {\n        GLOBAL.setAppstate('didfound', false);\n        return;\n      }\n      setLastDid(did);\n      var t = HELPER.TokenIdFromPubkey(person.pubkey);\n      setTokenid(t);\n      GLOBAL.setAppstate('didfound', true);\n\n      if (user == null) {\n        // we are not authenticated\n        GLOBAL.setAppstate('pagestate', 'VIEW');\n        navigate('/show/' + did);\n        return;\n      }\n      var myPubkey = Moralis.User.current().get('ethAddress');\n\n      try {\n        API.getPermissions(myPubkey, person.pubkey).then((permission) => {\n          var isConnectedLocal = permission == 'CONTACT';\n          setIsConnected(isConnectedLocal);\n          // enable the connect button\n          setEnableShowConnect(isAuthenticated);\n          // show the connect button\n          var showConnectButton = isAuthenticated;\n          if (GLOBAL.getYou().pubkey == myPubkey || isConnectedLocal) {\n            showConnectButton = false;\n            setShowUnlink(true);\n          }\n          setShowConnect(showConnectButton);\n          GLOBAL.setAppstate('pagestate', 'VIEW');\n          navigate('/show/' + did);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const downloadVcf = () => {\n    const element = document.createElement('a');\n\n    // https://en.wikipedia.org/wiki/VCard\n    var content = 'BEGIN:VCARD' + '\\r\\n';\n    content += 'VERSION:2.1' + '\\r\\n';\n    content += 'N:' + person.sname + ';' + person.gname + '\\r\\n';\n    content += 'TITLE:' + person.username + '\\r\\n';\n    content += 'PHOTO;PNG:' + person.img + '\\r\\n';\n    content += 'TEL;WORK;VOICE:' + person.mobile + '\\r\\n';\n    content += 'EMAIL:' + person.email + '\\r\\n';\n    content += 'ROLE:' + person.jobtitle + '\\r\\n';\n    content +=\n      'Note:' +\n      'https://app.youfoundme.io/#/show/' +\n      HELPER.DidFromPubkey(person.pubkey) +\n      '\\r\\n';\n    content += 'GEO:' + person.location + '\\r\\n';\n    content += 'UID:' + HELPER.DidFromPubkey(person.pubkey) + '\\r\\n';\n    content +=\n      'URI:' +\n      'https://app.youfoundme.io/#/show/' +\n      HELPER.DidFromPubkey(person.pubkey) +\n      '\\r\\n';\n    content +=\n      'SOURCE:' +\n      'https://app.youfoundme.io/#/show/' +\n      HELPER.DidFromPubkey(person.pubkey) +\n      '\\r\\n';\n    content += 'REV:' + new Date().toISOString() + '\\r\\n';\n    content += 'END:VCARD' + '\\r\\n';\n\n    const file = new Blob([content], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = person.username + '.vcf';\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  const connect = (link) => {\n    navigate('/connect/' + did);\n  };\n\n  const unlink = (link) => {\n    API.deletePermissions(GLOBAL.getMe().pubkey, GLOBAL.getYou().pubkey);\n    setShowUnlink(false);\n    setIsConnected(false);\n    setShowConnect(true);\n  };\n\n  const showlink = (link) => {\n    if (link.startsWith('https')) {\n      link = link.substring(8);\n    }\n    if (link.startsWith('http')) {\n      link = link.substring(7);\n    }\n    if (link.length > 50) {\n      link = link.substring(0, 50) + '...';\n    }\n    return link;\n  };\n\n  const person = GLOBAL.getYou();\n  const avatarlink = '/avatar.html?url=' + person.avatar;\n\n  if (!GLOBAL.getAppState().didfound) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container width=\"100%\"></Container>\n          <h1>Did not found</h1>\n        </center>\n      </main>\n    );\n  }\n\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container maxW=\"container.lg\">\n        <Link onClick={onCopy}>\n          <HStack>\n            <Text color=\"gray.500\" fontSize=\"sm\">\n              {person.did}\n            </Text>\n            <CopyIcon color=\"gray.500\" />\n          </HStack>\n        </Link>\n        <HStack>\n          {person.metafile.length > 0 && (\n            <Link href={person.metafile} isExternal>\n              <Text color=\"gray.500\" fontSize=\"sm\">\n                Metafile: {showlink(person.metafile)}\n              </Text>\n            </Link>\n          )}\n          {person.metafile.length === 0 && (\n            <Text color=\"gray.500\" fontSize=\"sm\">\n              Metafile: NFT not minted\n            </Text>\n          )}\n        </HStack>\n        <br />\n        <Heading fontSize=\"6xl\">{person.username}</Heading>\n        <br />\n        <HStack>\n          {person.img.length > 0 && (\n            <Avatar\n              boxSize=\"200px\"\n              src={person.img}\n              objectFit=\"cover\"\n              alt={person.username}\n            />\n          )}\n\n          {showConnect && (\n            <VStack>\n              <Box boxSize=\"150px\"></Box>\n              <Button onClick={connect} disabled={!enableConnect}>\n                Connect\n              </Button>\n            </VStack>\n          )}\n        </HStack>\n\n        {person.avatar.length > 0 && (\n          <HStack style={{ marginTop: '5px' }}>\n            <Link color=\"teal.500\" href={avatarlink} isExternal>\n              Show Avatar\n            </Link>\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />{' '}\n          </HStack>\n        )}\n        <br />\n        <Heading>{person.jobtitle}</Heading>\n        <Text fontSize=\"1xl\">{person.teaser}</Text>\n        <br />\n        <Table variant=\"simple\" width=\"100%\">\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b> References</b>\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.ref0.length > 0 && (\n                <Link href={person.ref0} isExternal>\n                  <ExternalLinkIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.ref0.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td wdith=\"100%\">\n              {person.ref0.length > 0 && (\n                <Link href={person.ref0} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.ref0)}\n                  </Text>\n                </Link>\n              )}\n              {person.ref0.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  1. Reference not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.ref1.length > 0 && (\n                <Link href={person.ref1} isExternal>\n                  <ExternalLinkIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.ref1.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td>\n              {person.ref1.length > 0 && (\n                <Link href={person.ref1} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.ref1)}\n                  </Text>\n                </Link>\n              )}\n              {person.ref1.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  2. Reference not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.ref2.length > 0 && (\n                <Link href={person.ref2} isExternal>\n                  <ExternalLinkIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.ref2.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td>\n              {person.ref2.length > 0 && (\n                <Link href={person.ref2} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.ref2)}\n                  </Text>\n                </Link>\n              )}\n              {person.ref2.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  3. Reference not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b> Locations</b>\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.location.length > 0 && (\n                <Link href={person.location} isExternal>\n                  <SunIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.location.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td>\n              {person.location.length > 0 && (\n                <Link href={person.location} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.location)}\n                  </Text>\n                </Link>\n              )}\n              {person.location.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Location not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              {person.metaverse.length > 0 && (\n                <Link href={person.metaverse} isExternal>\n                  <ViewIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.metaverse.length === 0 && <ViewIcon color=\"blue.500\" />}\n            </Td>\n            <Td>\n              {person.metaverse.length > 0 && (\n                <Link href={person.metaverse} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.metaverse)}\n                  </Text>\n                </Link>\n              )}\n              {person.metaverse.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Metaverse not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b> Contact</b>\n\n                {person.gname.length === 0 &&\n                  person.sname.length === 0 &&\n                  person.email.length === 0 &&\n                  person.mobile.length === 0 && (\n                    <Text fontSize=\"xs\" color=\"gray.500\">\n                      only visible to linked contacts,{' '}\n                      <Link onClick={connect} disabled={!isAuthenticated}>\n                        please connect\n                      </Link>\n                    </Text>\n                  )}\n              </Text>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <InfoOutlineIcon color=\"green.500\" />\n            </Td>\n            <Td>\n              {(person.gname.length > 0 || person.sname.length > 0) && (\n                <Text fontSize=\"1xl\" color=\"teal.500\">\n                  {person.gname} {person.sname}\n                </Text>\n              )}\n              {person.gname.length === 0 && person.sname.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Name not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <EmailIcon color=\"green.500\" />\n            </Td>\n            <Td>\n              {person.email.length > 0 && (\n                <Text fontSize=\"1xl\" color=\"teal.500\">\n                  {person.email}\n                </Text>\n              )}\n              {person.email.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Email not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <PhoneIcon color=\"green.500\" />\n            </Td>\n            <Td>\n              {person.mobile.length > 0 && (\n                <Text fontSize=\"1xl\" color=\"teal.500\">\n                  {person.mobile}\n                </Text>\n              )}\n              {person.mobile.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Mobile not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {(person.gname.length > 0 ||\n                person.sname.length > 0 ||\n                person.email.length > 0 ||\n                person.mobile.length > 0) && (\n                <Link onClick={downloadVcf}>\n                  <DownloadIcon color=\"green.500\" />\n                </Link>\n              )}\n              {person.gname.length === 0 &&\n                person.sname.length === 0 &&\n                person.email.length === 0 &&\n                person.mobile.length === 0 && (\n                  <DownloadIcon color=\"green.500\" />\n                )}\n            </Td>\n            <Td color=\"white.500\">\n              {(person.gname.length > 0 ||\n                person.sname.length > 0 ||\n                person.email.length > 0 ||\n                person.mobile.length > 0) && (\n                <Link onClick={downloadVcf}>VCF card</Link>\n              )}\n              {person.gname.length === 0 &&\n                person.sname.length === 0 &&\n                person.email.length === 0 &&\n                person.mobile.length === 0 && (\n                  <Text fontSize=\"1xl\" color=\"gray.600\">\n                    VCF card hidden\n                  </Text>\n                )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b>Tags</b>\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <StarIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text color=\"white.500\" fontSize=\"1xl\">\n                {person.tags}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <InfoIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <HStack>\n                {person.flags & STATIC.FLA_FULLTIME && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    full time |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_PARTTIME && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    part time |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_CONTRACTS && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    contract |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_PROJECTS && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    projects |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_INVESTOR && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    investor |\n                  </Text>\n                )}\n                {person.flags & STATIC.FLA_STUDENT && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    student |\n                  </Text>\n                )}\n                {person.flags & STATIC.FLA_SCHOOL && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    school |\n                  </Text>\n                )}\n              </HStack>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text color=\"blue.500\" fontSize=\"sm\">\n                <b> QR Link</b>\n              </Text>\n            </Td>\n            <Td>\n              <QRCode\n                level=\"H\"\n                size=\"165\"\n                title=\"Youfoundme DID\"\n                fgColor=\"#FFFFFF\"\n                bgColor=\"#000000\"\n                value={'https://app.youfoundme.io/#/show/' + did}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              {showUnlink && (\n                <Button onClick={unlink} disabled={!enableConnect}>\n                  Unlink\n                </Button>\n              )}\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\nexport const ABI_YOUFOUNDME = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address payable\",\n\t\t\t\t\"name\": \"minter\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ApprovalForAll\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"role\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"previousAdminRole\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"newAdminRole\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"RoleAdminChanged\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"role\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"sender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"RoleGranted\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"role\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"sender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"RoleRevoked\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"DEFAULT_ADMIN_ROLE\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"MINTER_ROLE\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"availableToWithdraw\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getApproved\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getChainID\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"username\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getDidByUsername\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"role\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getRoleAdmin\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"did\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getTokenByDid\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"username\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getTokenByUsername\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getUsername\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"did\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getUsernameByDid\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"role\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"grantRole\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"role\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"hasRole\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isApprovedForAll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"signer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"text\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct YFMI_DID_V0.set\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"tuple\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isValidSignature\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ownerOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"redeemer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"minPrice\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"username\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\t\t\"name\": \"signature\",\n\t\t\t\t\t\t\"type\": \"bytes\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct YFMI_DID_V0.NFTVoucher\",\n\t\t\t\t\"name\": \"voucher\",\n\t\t\t\t\"type\": \"tuple\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"redeem\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"role\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"renounceRole\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"role\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"revokeRole\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"_data\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setApprovalForAll\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setTokenURI\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes4\",\n\t\t\t\t\"name\": \"interfaceId\",\n\t\t\t\t\"type\": \"bytes4\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"supportsInterface\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenURI\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n];","/** @format */\n\nimport { useMoralis } from 'react-moralis';\n\nimport { ABI_YOUFOUNDME } from './abis';\nimport * as STATIC from '../model/static';\n\nconst ethers = require('ethers');\n\n// '0xdE9C2EBbb5d42F094271e21A9F911A9A2F9E0a67'\nexport async function redeem(moralis, redeemer, voucher, price) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS\n  );\n  const f = contract.methods.redeem(redeemer, voucher);\n  return f.send({ from: redeemer, value: price });\n}\n\n// https://medium.com/coinmonks/eip712-a-full-stack-example-e12185b03d54\nexport async function isValidSignature(moralis, address, set, v, r, s) {\n  try {\n    const web3 = await moralis.enableWeb3();\n    const contract = new web3.eth.Contract(\n      ABI_YOUFOUNDME,\n      STATIC.CONTRACT_ADDRESS\n    );\n    const f = contract.methods.isValidSignature(address, set, v, r, s);\n    var result = await f.call();\n    return result;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport async function setTokenURI(moralis, redeemer, tokenId, uri) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS\n  );\n  const f = contract.methods.setTokenURI(tokenId, uri);\n  return f.send({ from: redeemer, value: moralis.Units.ETH('0.0') });\n}\n\nexport async function tokenURI(moralis, tokenId) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS\n  );\n  const f = contract.methods.tokenURI(tokenId);\n  return f.call();\n}\n\nexport async function ownerOf(moralis, tokenId) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS\n  );\n  const f = contract.methods.ownerOf(tokenId);\n  return f.call();\n}\n\nexport async function getTokenByUsername(moralis, username) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS\n  );\n  const f = contract.methods.getTokenByUsername(username);\n  return f.call();\n}\n","/** @format */\n\n// https://www.npmjs.com/package/react-autosave\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Autosave, useAutosave } from 'react-autosave';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Text,\n  Button,\n  HStack,\n  Input,\n  Heading,\n  Container,\n  AlertIcon,\n  Box,\n  Link as CHAKRALINK,\n  Image,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  CloseButton,\n  useAriaHidden,\n  Checkbox,\n  Td,\n  Tr,\n  Table,\n  Textarea,\n  Flex,\n  VStack,\n} from '@chakra-ui/react';\nimport { createSerializableStateInvariantMiddleware } from '@reduxjs/toolkit';\n\nimport * as GLOBAL from '../model/global';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\n\nexport default function Editor() {\n  // Authentication =============================\n\n  const [userLoaded, setUserLoaded] = useState(false);\n  const [did, setDid] = useState('');\n  const [pubkey, setPubkey] = useState('');\n  const [contract, setContract] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [teaser, setTeaser] = useState('');\n  const [img, setImg] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [tags, setTags] = useState('');\n  const [ref0, setRef0] = useState('');\n  const [ref1, setRef1] = useState('');\n  const [ref2, setRef2] = useState('');\n  const [location, setLocation] = useState('');\n  const [metaverse, setMetaverse] = useState('');\n  const [status, setStatus] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [gname, setGname] = useState('');\n  const [sname, setSname] = useState('');\n  const [tokenURI, setTokenURI] = useState('');\n  const [metafile, setMetafile] = useState('');\n  const [flags, setFlags] = useState(0);\n  const [created, setCreated] = useState('');\n  const [magic, setMagic] = useState('');\n  const [pin, setPin] = useState('');\n  const [code, setCode] = useState('');\n  const [codeExpected, setCodeExpected] = useState('');\n  const [codeEmail, setCodeEmail] = useState('');\n  const [codeEmailExpected, setCodeEmailExpected] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [changeImage, setChangeImage] = useState(false);\n  const [changeAvatar, setChangeAvatar] = useState(false);\n  const [tokenid, setTokenid] = useState('');\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [mobilevalerror, setMobilevalerror] = React.useState('');\n  const [mobilevalidate, setMobilevalidate] = React.useState('Please validate');\n  const [emailvalidate, setEmailvalidate] = React.useState('Please validate');\n  const [mobileok, setMobileok] = React.useState('');\n  const [emailok, setEmailok] = React.useState('');\n  const [emailvalerror, setEmailvalerror] = React.useState('');\n  const [showValidateboxEmail, setShowValidateboxEmail] = useState(false);\n  const [showValidatebox, setShowValidatebox] = useState(false);\n  const [dollar, setDollar] = useState('');\n  // Search\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [didRun, setDidRun] = React.useState(false);\n\n  // http://localhost:3000/editor?did=did:yfm:0x345879b60bf5ccddd06bc91e49a6ebc4e93cfdaa&url=https://d1a370nemizbjq.cloudfront.net/9a03fcc1-e9e3-435e-9b91-daca8f135597.glb\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  useEffect(() => {\n    GLOBAL.setAppstate('pagestate', 'EDIT');\n    setPerson(GLOBAL.getMe());\n    setTokenid(HELPER.TokenIdFromPubkey(GLOBAL.getMe().pubkey));\n\n    // set the current Avax/Dollar based price for display\n    if (dollar == '') {\n      getPrice();\n    }\n\n    // safety net for page reloads\n    if (did == '') {\n      navigate('/editor');\n    }\n  }, [GLOBAL.refreshMe]);\n\n  const getPrice = async () => {\n    const priceAvax = await API.getAvaxPrice();\n    const priceUs = priceAvax * STATIC.DID_PRICE_AVAX_MULTI;\n    setDollar(\n      new Intl.NumberFormat('en-EN', { maximumSignificantDigits: 3 }).format(\n        priceUs\n      )\n    );\n  };\n\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n\n  const onDelete = () => {\n    setIsOpen(false);\n    alert('not implemented');\n  };\n\n  const navigate = useNavigate();\n\n  const validateEmail = async () => {\n    if (codeEmail != codeEmailExpected) {\n      setEmailvalerror('code not valid');\n      setEmailok('');\n      return;\n    }\n\n    setEmailok('');\n    setEmailvalerror('');\n    setShowValidateboxEmail(false);\n\n    var old = parseInt(flags);\n    var newFlage = old | STATIC.FLA_EMAILCONFIRMED;\n    var person = getPerson();\n    person.flags = newFlage.toString();\n\n    // Write to Db\n    GLOBAL.updateMePerson(person); // TODO Why can't we use handle, wehat resets flag?\n    setFlags(newFlage);\n  };\n\n  const validateMobile = async () => {\n    if (code != codeExpected) {\n      setMobilevalerror('code not valid');\n      setMobileok('');\n      return;\n    }\n\n    setMobileok('');\n\n    setMobilevalerror('');\n    setShowValidatebox(false);\n\n    var old = parseInt(flags);\n    var newFlage = old | STATIC.FLA_SMSCONFIRMED;\n    var person = getPerson();\n    person.flags = newFlage.toString();\n\n    // Write to Db\n    GLOBAL.updateMePerson(person); // TODO Why can't we use handle, wehat resets flag?\n    setFlags(newFlage);\n  };\n\n  const sendSMS = async () => {\n    setShowValidatebox(true);\n    API.sendSMS(mobile).then((codeexpected) => {\n      setCodeExpected(codeexpected);\n      setMobileok('Please check your mobile');\n      setMobilevalidate('');\n    });\n  };\n\n  const sendEmail = async () => {\n    setShowValidateboxEmail(true);\n\n    API.sendEmail(email).then((codeexpected) => {\n      setCodeEmailExpected(codeexpected);\n      setEmailok('Please check your email');\n      setEmailvalidate('');\n    });\n  };\n\n  const setCheckbox = (checked, perm) => {\n    if (checked) {\n      setFlags(flags | perm);\n    } else {\n      setFlags(flags ^ perm);\n    }\n  };\n\n  const flip = () => {\n    setChangeImage(!changeImage);\n  };\n\n  const flip2 = () => {\n    setChangeAvatar(!changeAvatar);\n  };\n\n  const createAvatar = () => {\n    handleSave();\n    navigate('/avatar');\n  };\n\n  const getPerson = () => {\n    var person = {};\n    person.did = did;\n    person.pubkey = pubkey.toLowerCase();\n    person.contract = contract.toLowerCase();\n    person.username = username;\n    person.jobtitle = jobtitle;\n    person.teaser = teaser;\n    person.img = img;\n    person.avatar = avatar;\n    person.tags = tags;\n    person.ref0 = ref0;\n    person.ref1 = ref1;\n    person.ref2 = ref2;\n    person.metaverse = metaverse;\n    person.location = location;\n    person.status = status;\n    person.email = email;\n    person.mobile = mobile;\n    person.gname = gname;\n    person.sname = sname;\n    person.metafile = metafile;\n    person.flags = flags.toString();\n    person.created = created;\n    person.magic = magic;\n    person.pin = pin;\n    return person;\n  };\n\n  const setPerson = (person) => {\n    setDid(person.did);\n    setPubkey(person.pubkey);\n    setContract(person.contract);\n    setUsername(person.username);\n    setJobtitle(person.jobtitle);\n    setTeaser(person.teaser);\n    setImg(person.img);\n    setAvatar(person.avatar);\n    setTags(person.tags);\n    setRef0(person.ref0);\n    setRef1(person.ref1);\n    setRef2(person.ref2);\n    setMetaverse(person.metaverse);\n    setLocation(person.location);\n    setStatus(person.status);\n    setEmail(person.email);\n    setMobile(person.mobile);\n    setGname(person.gname);\n    setSname(person.sname);\n    setMetafile(person.metafile);\n    setFlags(parseInt(person.flags));\n    setCreated(person.created);\n    setMagic(person.magic);\n    setPin(person.pin);\n  };\n\n  const saveNFT = async () => {\n    var tokenId = HELPER.TokenIdFromPubkey(pubkey);\n\n    // Create new Metada\n    const meta = HELPER.CreateMetafile(\n      did,\n      tokenId,\n      img,\n      avatar,\n      username,\n      jobtitle,\n      teaser\n    );\n    var file = new Moralis.File('meta.json', { base64: btoa(meta) });\n    await file.saveIPFS();\n    var hash = file.hash();\n\n    //var linkMeta = STATIC.PINATA_IPFS + hash;\n    var linkMeta = file.ipfs();\n    setMetafile(linkMeta);\n\n    // the meta file has not changed, no need to update\n    if (tokenURI == linkMeta) {\n      //return; // TODO back in !!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    }\n    setTokenURI(linkMeta);\n\n    // Does the NFT exist\n    var tokenId = HELPER.TokenIdFromPubkey(pubkey);\n\n    setStatusMessage('metafile saved ' + tokenId);\n    setErrorMessage('');\n    WEB3.ownerOf(Moralis, tokenId)\n      .then((owner) => {\n        if (owner.toLowerCase() == pubkey.toLowerCase()) {\n          //  update NFT ==============================================\n          setStatusMessage('Updating NFT Metadata, be patient...');\n          setErrorMessage('');\n          WEB3.setTokenURI(Moralis, pubkey, tokenId, linkMeta)\n            .then((rep) => {\n              handleSave();\n\n              // Report\n              setStatusMessage('NFT updated');\n              setErrorMessage('');\n            })\n            .catch((e) => {\n              console.log(e);\n              setStatusMessage('');\n              setErrorMessage('NFT update failed');\n              // TODO inform user of failure\n            });\n        } else {\n          setStatusMessage('');\n          setErrorMessage('NFT belongs to a different user');\n          return;\n        }\n      })\n      .catch((e) => {\n        if (HELPER.kmpSearch('' + e, 'nonexistent') > 0) {\n          // NFT does nont exist\n\n          var voucher = {\n            tokenId: tokenId,\n            minPrice: Moralis.Units.ETH('0.05'),\n            uri: linkMeta,\n            username: username,\n            key: STATIC.SIGNKEY,\n            contract: STATIC.CONTRACT_ADDRESS,\n          };\n          setStatusMessage('Signing voucher...');\n          setErrorMessage('');\n          API.SignVoucher(voucher)\n            .then((signedVoucher) => {\n              setStatusMessage('Minting NFT, be patient...');\n              setErrorMessage('');\n              // create new NFT =======================================\n              WEB3.redeem(\n                Moralis,\n                user.get('ethAddress'),\n                signedVoucher,\n                Moralis.Units.ETH('0.05')\n              )\n                .then((rep) => {\n                  // TODO inform user of success\n                  // Update Db\n                  setCreated(Date.now().toString());\n                  setFlags(flags | STATIC.FLA_MINTED);\n                  handleSave();\n                  setStatusMessage('NFT minted');\n                  setErrorMessage('');\n                })\n                .catch((e) => {\n                  console.log(e);\n                  // TODO inform user of failure\n                  setStatusMessage('');\n                  setErrorMessage('NFT minting failed');\n                });\n            })\n            .catch((e) => {\n              console.log(e);\n              setStatusMessage('');\n              setErrorMessage('NFT minting failed, voucher not signed');\n            });\n        }\n      });\n  };\n\n  const handleSave = async (e) => {\n    // check if email or SMS changed\n\n    var personNew = getPerson();\n    var personOld = GLOBAL.getMe();\n    if (personNew.mobile != personOld.mobile) {\n      personNew.flags = (\n        parseInt(personNew.old) ^ STATIC.FLA_SMSCONFIRMED\n      ).toString();\n      setFlags(flags ^ STATIC.FLA_SMSCONFIRMED);\n    }\n    if (personNew.email != personOld.email) {\n      personNew.flags = (\n        parseInt(personNew.old) ^ STATIC.FLA_EMAILCONFIRMED\n      ).toString();\n      setFlags(flags ^ STATIC.FLA_EMAILCONFIRMED);\n    }\n    GLOBAL.updateMePerson(personNew);\n  };\n\n  const onImageDrop = (event) => {\n    var data = event.target.files[0];\n    var file = new Moralis.File(data.name, data);\n    file\n      .saveIPFS()\n      .then(() => {\n        var linkMeta = file.ipfs();\n        setImg(linkMeta);\n        setChangeImage(false);\n        setStatusMessage('Image Uploaded');\n        setErrorMessage('');\n      })\n      .catch((e) => {\n        setStatusMessage('');\n        setErrorMessage('Image upload failed');\n      });\n  };\n\n  const onAvatarDrop = (event) => {\n    var data = event.target.files[0];\n    var file = new Moralis.File(data.name, data);\n    file\n      .saveIPFS()\n      .then(() => {\n        var linkMeta = file.ipfs();\n        setAvatar(linkMeta);\n        setChangeAvatar(false);\n        setStatusMessage('Avatar Uploaded');\n        setErrorMessage('');\n      })\n      .catch((e) => {\n        setStatusMessage('');\n        setErrorMessage('Avatar upload failed');\n      });\n  };\n\n  // not sogned in =======================================================================================\n  if (!GLOBAL.getAppState().connected) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Me Editor</Heading>\n            <br />\n            <Text>\n              Please connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <VStack>\n                <a href=\"https://metamask.io\" target=\"_blank\">\n                  MetaMask&nbsp;\n                  <ExternalLinkIcon\n                    fontSize=\"xs\"\n                    color=\"teal.500\"\n                    style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                  />\n                </a>\n                <br />\n                {STATIC.ENABLE_WALLETCONNECT && (\n                  <Flex>\n                    or&nbsp;\n                    <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                      Wallet Connect&nbsp;\n                      <ExternalLinkIcon\n                        fontSize=\"xs\"\n                        color=\"teal.500\"\n                        style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                      />\n                    </a>\n                  </Flex>\n                )}\n              </VStack>\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  // Check user exists\n\n  // signed in =======================================================================================\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container>\n        <Heading>Edit Profile</Heading>\n        <br />\n        <HStack>\n          <Text fontSize=\"xs\">DID: </Text>\n          <Text fontSize=\"xs\">{did.toLocaleLowerCase()}</Text>\n        </HStack>\n        <HStack>\n          <Text fontSize=\"xs\">Public key: </Text>\n          <Text fontSize=\"xs\">{pubkey} </Text>\n        </HStack>\n        <HStack>\n          <Text fontSize=\"xs\">Contract: </Text>\n          <Text fontSize=\"xs\">{contract} - Avalanche FUJI</Text>\n        </HStack>\n        <CHAKRALINK href={metafile} isExternal>\n          <HStack>\n            <Text fontSize=\"xs\">Metafile:</Text>\n            <Text fontSize=\"xs\">{metafile}</Text>\n            <ExternalLinkIcon fontSize=\"xs\" color=\"blue.500\" />\n          </HStack>\n        </CHAKRALINK>\n        <HStack>\n          <HStack>\n            <Text fontSize=\"xs\">Token:</Text>\n            <Text fontSize=\"xs\">{tokenid}</Text>\n          </HStack>\n        </HStack>\n        <br />\n        {STATIC.DISABLE_MINTING && (\n          <HStack>\n            <Button size=\"lg\" disabled>\n              Create NFT\n            </Button>\n            <Text color=\"teal\">\n              Minting will be available in March 2022. Your username is\n              reserved.\n            </Text>\n          </HStack>\n        )}\n        {!STATIC.DISABLE_MINTING && (\n          <HStack>\n            {!(flags & STATIC.FLA_MINTED) && (\n              <Button size=\"lg\" onClick={saveNFT}>\n                Create NFT\n              </Button>\n            )}\n            {flags & STATIC.FLA_MINTED && (\n              <Button size=\"lg\" onClick={saveNFT}>\n                Update NFT\n              </Button>\n            )}\n            <Text color=\"teal.500\" fontSize=\"xs\">\n              Costs: NFT minting: {STATIC.DID_PRICE_AVAX_DISPLAY} AVAX (~$\n              {dollar}\n              ) <br />\n              One time only fee, updating metadata is free.\n              <br />+ Gas calculated by your wallet.\n            </Text>\n          </HStack>\n        )}\n        <br />\n        <HStack>\n          <Button size=\"lg\" onClick={handleSave}>\n            Save\n          </Button>\n          <Text color=\"teal.500\" fontSize=\"xs\">\n            Saving to youfoundme Db is free, but does not update On-Chain data.\n            Mint your NFT to guarantee your username.\n          </Text>\n        </HStack>\n        <HStack>\n          <Text color=\"green.500\" fontSize=\"xs\">\n            {statusMessage}\n          </Text>\n        </HStack>\n        <HStack>\n          <Text color=\"red.500\" fontSize=\"xs\">\n            {errorMessage}\n          </Text>\n        </HStack>\n        <br />\n        <Heading>{username}</Heading>\n        {img.length > 0 && (\n          <Image boxSize=\"140\" src={img} objectFit=\"cover\" alt={username} />\n        )}\n        <HStack>\n          {' '}\n          <CHAKRALINK color=\"blue.500\" onClick={flip}>\n            Upload Image\n          </CHAKRALINK>\n          <Text color=\"gray.500\" fontSize=\"sm\">\n            (recommended 400 x 400)\n          </Text>\n        </HStack>\n        {changeImage && (\n          <Input type=\"file\" name=\"file\" onChange={onImageDrop} />\n        )}\n        <HStack>\n          <CHAKRALINK href={img} isExternal>\n            <HStack>\n              <Text color=\"blue.500\" fontSize=\"xs\">\n                {img}\n              </Text>\n              <ExternalLinkIcon color=\"blue.500\" />\n            </HStack>\n          </CHAKRALINK>\n        </HStack>\n        <br />\n        {/* <CHAKRALINK color=\"blue.500\" onClick={flip2}>\n          Upload 3D Avatar Model (.glb)\n        </CHAKRALINK>\n        &nbsp;or <br /> */}\n        <CHAKRALINK color=\"blue.500\" onClick={() => createAvatar()}>\n          Create new Avatar with: Ready Player Me\n        </CHAKRALINK>\n        {changeAvatar && (\n          <Input type=\"file\" name=\"file\" onChange={onAvatarDrop} />\n        )}\n        {avatar.length > 0 && (\n          <HStack>\n            <CHAKRALINK href={avatar} isExternal>\n              <HStack>\n                <Text color=\"blue.500\" fontSize=\"xs\">\n                  {avatar}\n                </Text>\n                <ExternalLinkIcon color=\"blue.500\" />\n              </HStack>\n            </CHAKRALINK>\n          </HStack>\n        )}\n        <br /> <br />\n        <Heading>Professional Section</Heading>\n        <Table style={{ paddingLeft: '0px', paddingRight: '0px' }}>\n          <Tr>\n            <Td width=\"20px\">\n              <Text>Job Title: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"Job Title\"\n                fontSize=\"1xl\"\n                value={jobtitle}\n                onChange={(e) => setJobtitle(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Teaser: </Text>\n            </Td>\n            <Td>\n              <Textarea\n                placeholder=\"Teaser\"\n                fontSize=\"1xl\"\n                value={teaser}\n                onChange={(e) => setTeaser(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Tags: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Tags\"\n                fontSize=\"1xl\"\n                value={tags}\n                onChange={(e) => setTags(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Ref0: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Your Company\"\n                fontSize=\"1xl\"\n                value={ref0}\n                onChange={(e) => setRef0(e.target.value)}\n              />\n              <CHAKRALINK color=\"blue.500\" href={ref0} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Ref1: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Linkedin\"\n                fontSize=\"1xl\"\n                value={ref1}\n                onChange={(e) => setRef1(e.target.value)}\n              />\n              <CHAKRALINK color=\"blue.500\" href={ref1} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Ref2: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Github\"\n                fontSize=\"1xl\"\n                value={ref2}\n                onChange={(e) => setRef2(e.target.value)}\n              />\n              <CHAKRALINK color=\"blue.500\" href={ref2} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n\n          {/* Location Section */}\n          <Tr>\n            <Td colSpan=\"2\">\n              <Heading>Location Status</Heading>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text>Location: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"Location\"\n                fontSize=\"1xl\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n              <CHAKRALINK\n                color=\"blue.500\"\n                href={location}\n                fontSize=\"xs\"\n                isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Metaverse: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Metaverse\"\n                fontSize=\"1xl\"\n                value={metaverse}\n                onChange={(e) => setMetaverse(e.target.value)}\n              />\n              <CHAKRALINK\n                color=\"blue.500\"\n                href={metaverse}\n                fontSize=\"xs\"\n                isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td colSpan=\"2\">\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_LOCATION) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_LOCATION)\n                  }\n                />\n                <Text>Hide my location</Text>\n              </HStack>\n            </Td>\n          </Tr>\n\n          {/* Contact Section */}\n          <Tr>\n            <Td colSpan=\"2\">\n              <Heading>Contact</Heading>\n              <Text fontSize=\"xs\" color=\"teal.500\">\n                Contact details are not shown in search results. We will contact\n                you by email, if a user likes to connect with you. You decide if\n                you like to share your contact details.\n              </Text>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text>Email: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"Email\"\n                fontSize=\"1xl\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {!(flags & STATIC.FLA_EMAILCONFIRMED) && (\n                <CHAKRALINK\n                  color=\"red.500\"\n                  onClick={sendEmail}\n                  fontSize=\"xs\"\n                  isExternal>\n                  {emailvalidate}\n                </CHAKRALINK>\n              )}\n              <Text fontSize=\"xs\" color=\"green.500\">\n                {emailok}\n              </Text>\n              {showValidateboxEmail && (\n                <HStack>\n                  <Input\n                    placeholder=\"6 digit code\"\n                    fontSize=\"1xl\"\n                    value={codeEmail}\n                    onChange={(e) => setCodeEmail(e.target.value)}\n                  />\n                  <Button onClick={validateEmail}>validate</Button>\n                </HStack>\n              )}\n              <Text fontSize=\"xs\" color=\"red.500\">\n                {emailvalerror}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Mobile: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"+  Mobile\"\n                fontSize=\"1xl\"\n                value={mobile}\n                onChange={(e) => setMobile(e.target.value)}\n              />\n              {!(flags & STATIC.FLA_SMSCONFIRMED) && (\n                <HStack>\n                  <CHAKRALINK\n                    color=\"red.500\"\n                    onClick={sendSMS}\n                    fontSize=\"xs\"\n                    isExternal>\n                    {mobilevalidate}\n                  </CHAKRALINK>\n                  <Text fontSize=\"xs\" color=\"green.500\">\n                    {mobileok}\n                  </Text>\n                </HStack>\n              )}\n              {showValidatebox && (\n                <HStack>\n                  <Input\n                    placeholder=\"6 digit code\"\n                    fontSize=\"1xl\"\n                    value={code}\n                    onChange={(e) => setCode(e.target.value)}\n                  />\n                  <Button onClick={validateMobile}>validate</Button>\n                </HStack>\n              )}\n              <Text fontSize=\"xs\" color=\"red.500\">\n                {mobilevalerror}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Name: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"First Name\"\n                fontSize=\"1xl\"\n                value={gname}\n                onChange={(e) => setGname(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Surname: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Last Name\"\n                fontSize=\"1xl\"\n                value={sname}\n                onChange={(e) => setSname(e.target.value)}\n              />\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td colSpan=\"2\">\n              {/* Privacy Flags ===================================================================================*/}\n              <Heading>Privacy</Heading>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_FULLTIME) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_FULLTIME)\n                  }\n                />\n                <Text>I am looking for full time employment</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_PARTTIME) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_PARTTIME)\n                  }\n                />\n                <Text>I am looking for part time jobs</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_CONTRACTS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_CONTRACTS)\n                  }\n                />\n                <Text>I am available for contract work</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_PROJECTS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_PROJECTS)\n                  }\n                />\n                <Text>I am open to projects and collaborations</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_INVESTOR) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_INVESTOR)\n                  }\n                />\n                <Text>I am an investor or recruiter</Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_SCHOOL) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_SCHOOL)\n                  }\n                />\n                <Text>I am going to school</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_STUDENT) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_STUDENT)\n                  }\n                />\n                <Text>I am a student</Text>\n              </HStack>\n              <br />\n\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_REFERENCES) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_REFERENCES)\n                  }\n                />\n                <Text>Do not show my references</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_CONTACT) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_CONTACT)\n                  }\n                />\n                <Text>Do not request my contact details</Text>\n              </HStack>\n              {/* <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_ANONYMOUS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_ANONYMOUS)\n                  }\n                />\n                <Text>\n                  Do not show my profile at all, i prefer to be anonymous\n                </Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Button size=\"lg\" onClick={handleSave}>\n                  Save\n                </Button>\n                <Text fontSize=\"xs\"></Text>\n              </HStack> */}\n              <br />\n              <HStack>\n                <Button\n                  size=\"lg\"\n                  colorScheme=\"red\"\n                  onClick={() => setIsOpen(true)}>\n                  Delete Account\n                </Button>\n\n                <AlertDialog\n                  isOpen={isOpen}\n                  leastDestructiveRef={cancelRef}\n                  onClose={onClose}>\n                  <AlertDialogOverlay>\n                    <AlertDialogContent>\n                      <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                        Delete my NFT\n                      </AlertDialogHeader>\n\n                      <AlertDialogBody>\n                        Are you sure? You can't undo this action afterwards.\n                      </AlertDialogBody>\n\n                      <AlertDialogFooter>\n                        <Button size=\"lg\" ref={cancelRef} onClick={onClose}>\n                          Cancel\n                        </Button>\n                        <Button\n                          size=\"lg\"\n                          colorScheme=\"red\"\n                          onClick={onDelete}\n                          ml={3}>\n                          Delete\n                        </Button>\n                      </AlertDialogFooter>\n                    </AlertDialogContent>\n                  </AlertDialogOverlay>\n                </AlertDialog>\n                <Text color=\"gray.600\" fontSize=\"xs\">\n                  This cannot be undone, <br /> NFT will become inaccessible.\n                  <br />\n                  Use a different wallet account\n                  <br /> if you like to re-register.\n                </Text>\n              </HStack>\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\n\nimport React, { useState, useEffect, forwardRef } from 'react';\nimport {\n  useNavigate,\n  useParams,\n  useSearchParams,\n  useLocation,\n} from 'react-router-dom';\n\nimport {\n  Center,\n  Heading,\n  Image,\n  Input,\n  Container,\n  Text,\n  Button,\n  HStack,\n  Link,\n  Table,\n  Tr,\n  Td,\n  Img,\n  Header,\n  VStack,\n  Avatar,\n  AvatarBadge,\n  AvatarGroup,\n  Box,\n  Spacer,\n  Flex,\n} from '@chakra-ui/react';\n\nimport { getAppState, loadPersonByPubKey, setAppstate } from '../model/global';\nimport useKeypress from 'react-use-keypress';\nimport { searchPerson, getPerson } from '../io/api';\nimport * as GLOBAL from '../model/global';\nimport * as HELPER from '../model/helper';\nimport * as STATIC from '../model/static';\n\nconst Search = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchfield, setSearchfield] = useState('latest');\n  const search = useLocation().search;\n  const newTerm = new URLSearchParams(search).get('term');\n  const [scannedCount, setScannedCount] = useState(0);\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [showNext, setShowNext] = useState(false);\n\n  useKeypress('Enter', () => {\n    goSearch();\n  });\n\n  useEffect(() => {\n    const term = searchParams.get('term'); //query string\n    GLOBAL.setAppstate('pagestate', 'FIND');\n    if (GLOBAL.getAppState().firstSearch) {\n      if (term == null || term == '') {\n        GLOBAL.setAppstate('firstSearch', false);\n        GLOBAL.setAppstate('searchfield', '');\n        GLOBAL.fireSearch();\n        navigate('/search?term=latest');\n        return;\n      }\n    }\n\n    if (term != GLOBAL.getAppState().searchfield) {\n      GLOBAL.setAppstate('searchfield', term);\n      GLOBAL.setAppstate('position', 0);\n      setScannedCount(0);\n      setSearchfield(term);\n      startSearch();\n    }\n  });\n\n  const goSearch = (e) => {\n    GLOBAL.setAppstate('pagestate', 'FIND');\n    GLOBAL.fireSearch();\n    navigate('/search?term=' + searchfield);\n  };\n\n  const handleChange = (e) => {\n    setSearchfield(e.target.value);\n  };\n\n  //=============================================\n\n  const next = async () => {\n    var pos = GLOBAL.getAppState().position;\n    pos = pos + 10;\n    if (pos > GLOBAL.getAppState().scannedCount) {\n      pos = pos - 10;\n    }\n    GLOBAL.setAppstate('position', pos);\n    showPeople();\n  };\n\n  const prev = async () => {\n    var pos = GLOBAL.getAppState().position;\n    pos = pos - 10;\n    if (pos < 0) {\n      pos = 0;\n    }\n    GLOBAL.setAppstate('position', pos);\n    showPeople();\n  };\n\n  const startSearch = async () => {\n    var term = searchParams.get('term');\n    if (term == null || term == '') {\n      term = 'latest';\n    }\n\n    // return single person from DID\n    if (term.startsWith('did:yfm:')) {\n      navigate('/show/' + term);\n      return;\n    }\n\n    setSearchfield(term);\n\n    // search returned many\n    var data = await searchPerson(term, 'none');\n    if (data.people == null) {\n      GLOBAL.setAppstate('searchResult', JSON.stringify([]));\n      GLOBAL.setAppstate('scannedCount', 0);\n      showPeople();\n      return;\n    }\n\n    GLOBAL.setAppstate('searchResult', JSON.stringify(data.people));\n    GLOBAL.setAppstate('scannedCount', data.people.length);\n    showPeople();\n  };\n\n  const showPeople = () => {\n    var all = JSON.parse(GLOBAL.getAppState().searchResult);\n    var showArray = [];\n    var max = all.length - GLOBAL.getAppState().position;\n    if (max > 10) {\n      max = 10;\n      setShowNext(true);\n    } else {\n      setShowNext(false);\n    }\n    for (\n      var i = GLOBAL.getAppState().position;\n      i < GLOBAL.getAppState().position + max;\n      i = i + 1\n    ) {\n      showArray.push(all[i]);\n    }\n    setSearchResult(showArray);\n    GLOBAL.fireSearch();\n  };\n\n  const linkSelected = (did) => {\n    var linkShowLInk = '/show/' + did;\n    GLOBAL.setAppstate('did', did);\n    navigate(linkShowLInk);\n  };\n\n  if (GLOBAL.getAppState().scannedCount == 0) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <Container>\n          <VStack>\n            <Input\n              placeholder=\"Keywords, Username, DID or Tags\"\n              onChange={handleChange}\n              value={searchfield}\n            />\n            <Button onClick={goSearch}>Search</Button>\n          </VStack>\n          <br />\n          <Text color=\"teal.500\" fontSize=\"xs\">\n            No records found\n          </Text>\n        </Container>\n      </main>\n    );\n  }\n\n  if (searchResult.length == 0) {\n    // repopulate local state if we return\n    showPeople();\n  }\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container maxW=\"container.xl\">\n        <Center>\n          <VStack>\n            <Heading fontSize=\"4xl\">Search</Heading>\n\n            <Input\n              width=\"500px\"\n              size=\"lg\"\n              placeholder=\"Keywords, Username, DID or Tags, blank shows new members\"\n              onChange={handleChange}\n              value={searchfield}\n            />\n            <Box h=\"10px\" />\n            <Button leftmargin=\"50px\" size=\"lg\" onClick={goSearch}>\n              Search\n            </Button>\n          </VStack>\n        </Center>\n        <Box h=\"10px\" />\n        <Text color=\"teal.500\" fontSize=\"xs\">\n          pos: {GLOBAL.getAppState().position + 1}. - entries found:{'  '}\n          {GLOBAL.getAppState().scannedCount}\n        </Text>\n        <Table variant=\"simple\" width=\"100%\" border=\"0\" padding=\"0\" margin=\"0\">\n          <Tr>\n            <Td colSpan=\"2\">\n              <Flex>\n                {GLOBAL.getAppState().position > 0 && (\n                  <Box w=\"50px\">\n                    <Link color=\"blue.300\" onClick={() => prev()}>\n                      <Text>prev</Text>\n                    </Link>\n                  </Box>\n                )}\n                <Spacer />\n                {showNext && (\n                  <Box w=\"50px\">\n                    <Link color=\"blue.300\" onClick={() => next()}>\n                      {' '}\n                      <Text fontSize=\"1xl\">next</Text>\n                    </Link>\n                  </Box>\n                )}\n              </Flex>\n            </Td>\n          </Tr>\n          {Object.keys(searchResult).map((k, i) => {\n            let d = searchResult[k];\n            let fl = parseInt(d.flags);\n            return (\n              <Tr key={i}>\n                <Td wdith=\"150px\">\n                  <Link onClick={() => linkSelected(d.did)}>\n                    <Avatar\n                      name={d.username}\n                      boxSize=\"120px\"\n                      objectFit=\"cover\"\n                      src={d.img}\n                      alt={d.username}\n                    />\n                  </Link>\n                </Td>\n                <Td>\n                  <Table border=\"0\" padding=\"0\" margin=\"0\">\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          <Heading fontSize=\"6xl\">{d.username}</Heading>\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          <Text color=\"gray.300\" fontSize=\"3xl\">\n                            {d.jobtitle}\n                          </Text>\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          <Text color=\"gray.400\">{d.teaser}</Text>\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td colSpan=\"2\">\n                        <HStack>\n                          {fl & STATIC.FLA_FULLTIME && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              full time |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_PARTTIME && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              part time |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_CONTRACTS && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              contract |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_PROJECTS && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              projects |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_INVESTOR && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              investor |\n                            </Text>\n                          )}\n                          {fl & STATIC.FLA_STUDENT && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              student |\n                            </Text>\n                          )}\n                          {fl & STATIC.FLA_SCHOOL && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              school |\n                            </Text>\n                          )}\n                        </HStack>\n                      </Td>\n                    </Tr>\n                  </Table>\n                </Td>\n              </Tr>\n            );\n          })}\n          <Tr>\n            <Td colSpan=\"2\">\n              <Flex>\n                {GLOBAL.getAppState().position > 0 && (\n                  <Box w=\"50px\">\n                    <Link color=\"blue.300\" onClick={() => prev()}>\n                      prev\n                    </Link>\n                  </Box>\n                )}\n                <Spacer />\n                {showNext && (\n                  <Box w=\"50px\">\n                    <Link color=\"blue.300\" onClick={() => next()}>\n                      {' '}\n                      next\n                    </Link>\n                  </Box>\n                )}\n              </Flex>\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Home() {\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  navigate('/search?term=latest');\n\n  return (\n    <center>\n      <Container>\n        <Text>\n          Please connect your Wallet to sign in.\n          <br />\n          <br />\n          Please use&nbsp;\n          <a href=\"https://metamask.io\" target=\"_blank\">\n            MetaMask&nbsp;\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />\n          </a>{' '}\n          or&nbsp;\n          <a href=\"https://walletconnect.com/\" target=\"_blank\">\n            Wallet Connect&nbsp;\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />\n          </a>\n          .\n        </Text>\n      </Container>\n    </center>\n  );\n}\n","/** @format */\nimport React, { useEffect, useState } from 'react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Heading,\n  Text,\n  Button,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Input,\n  Table,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport { getPersonByUserName } from '../io/api';\nimport { _toEscapedUtf8String } from 'ethers/lib/utils';\n\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\nimport * as GLOBAL from '../model/global';\n\nexport default function Register() {\n  const [username, setUsername] = useState('');\n\n  const [isUnique, setIsUnique] = useState(false);\n  const [isReserved, setIsReserved] = useState(false);\n\n  const [verified, SetVerified] = useState(false);\n  const navigate = useNavigate();\n\n  const [creation, setCreation] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [nameOk, setNameOk] = useState('');\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  // const isEmailValid = (val) => {\n  //   let regEmail =\n  //     /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  //   if (!regEmail.test(val)) {\n  //     return false;\n  //   }\n  //   return true;\n  // };\n\n  useEffect(() => {\n    GLOBAL.setAppstate('pagestate', 'REGISTER');\n  });\n\n  var regex = /^[A-Za-z]/;\n  var regex2 = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  const setUsernamePre = (val) => {\n    if (val.length == 0) {\n      setUsername('');\n      return;\n    }\n    if (val.length > 20) {\n      return;\n    }\n    val = val.trim();\n    if (val.length == 1) {\n      var matches = val.match(regex);\n      if (matches == null) {\n        return;\n      }\n    }\n    var matches = val.match(regex2);\n    if (matches != null) {\n      return;\n    }\n    var fChar = val.charAt(0).toUpperCase();\n    if (val.length > 1) {\n      fChar = fChar + val.substring(1);\n    }\n    setUsername(fChar);\n  };\n\n  const check = async () => {\n    if (username.length < 2) {\n      setNameError('username minimum 2 letters');\n      setNameOk('');\n      return;\n    } else {\n      setNameError('');\n      setNameOk('checking...');\n      var person = await getPersonByUserName(username);\n      if (person.length > 0) {\n        setNameError('Username taken');\n        setNameOk('');\n        setIsUnique(false);\n        return;\n      }\n      setNameError('');\n      setNameOk('username available');\n      setIsUnique(true);\n    }\n  };\n\n  const reserve = () => {\n    if (username.length < 2) {\n      setNameError('username minimum 2 letters');\n      setNameOk('');\n      return;\n    } else {\n      setNameError('');\n\n      if (isUnique) {\n        if (Moralis.User.current() == null) {\n          alert('Please connect Metamask');\n          return;\n        }\n\n        setIsReserved(true);\n        setNameOk('reserved');\n\n        var pubkey = Moralis.User.current().get('ethAddress');\n        var did = HELPER.DidFromPubkey(pubkey);\n\n        // Insert into Db\n        var person = {};\n        person.did = did;\n        person.pubkey = pubkey.toLowerCase();\n        person.contract = STATIC.CONTRACT_ADDRESS;\n        person.username = username;\n        person.jobtitle = '';\n        person.teaser = '';\n        person.img =\n          'https://youfoundme.s3.eu-central-1.amazonaws.com/user/default.png';\n        person.avatar = '';\n        person.tags = '';\n        person.ref0 = '';\n        person.ref1 = '';\n        person.ref2 = '';\n        person.metaverse = '';\n        person.location = '';\n        person.status = '';\n        person.email = '';\n        person.mobile = '';\n        person.gname = '';\n        person.sname = '';\n        person.metafile = '';\n        person.flags = '0';\n        person.created = new Date().toString();\n        person.pin = '';\n        person.magic = '';\n        person.chain = STATIC.CHAIN_ID;\n        GLOBAL.updateMePerson(person);\n        navigate('/editor');\n      }\n    }\n  };\n\n  if (Moralis.User.current == null) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Me Editor</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamask.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  return (\n    <Container>\n      <Heading>Register</Heading>\n      <Table\n        variant=\"unstyled\"\n        style={{ padding: '0px', margin: '0px' }}\n        className=\"table-tiny\"\n        size=\"sm\"\n        width=\"100%\"\n        cellPadding=\"0\">\n        <Tr>\n          <Td>Username</Td>\n          <Td width=\"400px\">\n            <Input\n              width=\"250px\"\n              placeholder=\"Username (no spaces!)\"\n              value={username}\n              onChange={(e) => setUsernamePre(e.target.value)}\n              isDisabled={isReserved}\n            />\n          </Td>\n          <Td width=\"100px\">\n            <HStack>\n              <Button isDisabled={isReserved} onClick={check}>\n                Check availability\n              </Button>\n              <Button isDisabled={!isUnique || isReserved} onClick={reserve}>\n                Reserve\n              </Button>\n            </HStack>\n          </Td>\n        </Tr>\n        <Tr>\n          <Td></Td>\n          <Td>\n            <Text color=\"red.500\">{nameError}</Text>\n            <Text color=\"green.500\">{nameOk}</Text>\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colSpan=\"3\">\n            <Text color=\"white.500\">Reserve your username today!</Text>\n            <br />\n            <Text color=\"gray.500\" t>\n              Your username will become permanent, when you create your NFT on\n              the next screen. It is not possible to change the username without\n              creating another NFT with a different wallet address, so choose\n              wisely. We reserve for max 5 days, so mint your NFT today.\n              <br />\n              <br />\n              Usernames are case sensitive, minimum 2 characters, start with a\n              capital letter.\n            </Text>\n          </Td>\n        </Tr>\n      </Table>\n    </Container>\n  );\n}\n","/** @format */\nimport Frame, { FrameContextConsumer } from 'react-frame-component';\nimport axios from 'axios';\nimport useMessage from '@rottitime/react-hook-message-event';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Text,\n  Button,\n  HStack,\n  Input,\n  Heading,\n  Container,\n  AlertIcon,\n  Box,\n  Link as CHAKRALINK,\n  Image,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  CloseButton,\n  useAriaHidden,\n  Checkbox,\n  Td,\n  Tr,\n  Table,\n  Textarea,\n} from '@chakra-ui/react';\n\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport * as Global from '../model/global';\nimport * as IPFS from '../io/ipfs_api';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\n\n// Avatar https://youfoundme.s3.eu-central-1.amazonaws.com/matd.glb\nexport default function Avatar() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [pageLink, setPageLink] = useState('');\n  const [avataruri, setAvataruri] = useState('');\n\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const script = document.createElement('script');\n\n  script.src = 'https://use.typekit.net/foobar.js';\n  script.async = true;\n\n  document.body.appendChild(script);\n\n  useEffect(() => {});\n\n  const saveAvatar = async () => {\n    var privKey = await user.get('ethAddress');\n    var uri = document.getElementById('avatarUrl').value;\n    var person = Object.assign({}, Global.getMe());\n    person.avatar = uri;\n    Global.updateMePerson(person);\n    navigate('/editor');\n  };\n\n  return (\n    <center>\n      <Container>\n        <HStack>\n          <Input\n            hidden\n            id=\"avatarUrl\"\n            value={avataruri}\n            onChange={(e) => setAvataruri(e.target.value)}></Input>\n          <Button hidden id=\"btnuse\" onClick={saveAvatar}>\n            Use avatar\n          </Button>\n        </HStack>\n      </Container>\n      <iframe\n        id=\"iframe\"\n        height=\"800\"\n        width=\"1200\"\n        class=\"content\"\n        allow=\"camera *; microphone *\"\n        src=\"https://youfoundme.readyplayer.me/\"></iframe>\n    </center>\n  );\n}\n","/** @format */\nimport React, { useEffect, useState } from 'react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Heading,\n  Textarea,\n  Text,\n  Button,\n  Container,\n  Image,\n  Link,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Input,\n  Table,\n  HStack,\n  VStack,\n  Tr,\n  Td,\n  Avatar,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getPersonByUserName } from '../io/api';\nimport { _toEscapedUtf8String } from 'ethers/lib/utils';\n\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\nimport * as GLOBAL from '../model/global';\n\nexport default function Connect() {\n  const [message, setMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [img, setImage] = useState('');\n  const [email, setEmail] = useState('');\n  const [errormsg, setErrormsg] = useState('');\n  const [okmsg, setOkmsg] = useState('');\n\n  const [isSendDiabled, setIsSendDisabled] = useState(false);\n\n  var { did } = useParams();\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const send = () => {\n    if (message.length < 2) {\n      setErrormsg('Please add a message');\n      setOkmsg('');\n      return;\n    }\n\n    API.connect(\n      GLOBAL.getMe().pubkey,\n      HELPER.PubkeyFromDid(did),\n      GLOBAL.getMe().username,\n      message\n    );\n    setErrormsg('');\n    setOkmsg('Your message has been sent');\n    setIsSendDisabled(true);\n  };\n\n  useEffect(() => {\n    var pubkey = HELPER.PubkeyFromDid(did);\n    var person = GLOBAL.getYou();\n    setUsername(person.username);\n    setImage(person.img);\n    setEmail(person.email);\n    setJobtitle(person.jobtitle);\n  });\n\n  if (user == null) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Conntact</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamask.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  var placeholder = 'Hi ' + username + ',\\n\\nwould you be interested in.... ';\n  return (\n    <Container>\n      <Heading>{username}</Heading>\n      <Box h=\"10px\" />\n      <Avatar boxSize=\"150\" objectFit=\"cover\" alt={username} src={img}></Avatar>\n      <Box h=\"10px\" />\n      <Text>{jobtitle}</Text>\n\n      <Box h=\"10px\"></Box>\n      <Textarea\n        h=\"400px\"\n        placeholder={placeholder}\n        onChange={(e) => setMessage(e.target.value)}>\n        {message}\n      </Textarea>\n      <Box h=\"10px\"></Box>\n      <Button onClick={send} disabled={isSendDiabled}>\n        Send message\n      </Button>\n      <Text color=\"red.500\" fontSize=\"xs\">\n        {errormsg}\n      </Text>\n      <Text color=\"green.500\" fontSize=\"xs\">\n        {okmsg}\n      </Text>\n      <Box h=\"10px\" />\n      <Text fontSize=\"xs\" color=\"teal.500\">\n        Get in touch with {username}, we will pass your details on to {username}{' '}\n        and email you back with contact details.\n      </Text>\n    </Container>\n  );\n}\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  useNavigate,\n  useParams,\n  useSearchParams,\n  useLocation,\n} from 'react-router-dom';\nimport {\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link,\n  HStack,\n  Box,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\n\nimport { useMoralis } from 'react-moralis';\nimport * as GLOBAL from '../model/global';\nimport * as HELPER from '../model/helper';\nimport * as STATIC from '../model/static';\nimport * as API from '../io/api';\n\nexport default function Message() {\n  const [connectionUser, setConnectionUser] = useState('');\n  const [connectionDid, setConnectionDid] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const closeNow = () => {\n    window.close();\n  };\n\n  const visit = () => {\n    navigate('/show/' + connectionDid);\n  };\n\n  useEffect(() => {\n    if (connectionDid == '') {\n      GLOBAL.setAppstate('pagestate', 'MESSAGE');\n      const did = searchParams.get('did'); //query string\n      if (did == null || did == '') {\n        return;\n      }\n      setConnectionDid(did);\n      GLOBAL.setAppstate('messageDid', did);\n      if (user) {\n        setIsConnected(true);\n        if (GLOBAL.getAppState().token == '') {\n        }\n      }\n      GLOBAL.loadYouByPubKey(HELPER.PubkeyFromDid(did)).then((person) => {\n        GLOBAL.setAppstate('didfound', true);\n        if (person == null || JSON.stringify(person) == '{}') {\n          GLOBAL.setAppstate('didfound', false);\n          return;\n        }\n        setConnectionUser(person.username);\n      });\n    }\n  });\n\n  return (\n    <Container>\n      <Heading>Message</Heading>\n      <br />\n      <Text>Thank you, {connectionUser} is a new connection.</Text>\n      <br />\n      <br />\n      <Button onClick={visit}>View {connectionUser}</Button>\n\n      {!isConnected && (\n        <Text fontSize=\"xs\" color=\"blue.500\">\n          To access your new contact please login first.\n        </Text>\n      )}\n    </Container>\n  );\n}\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Center,\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Button,\n  Flex,\n  VStack,\n} from '@chakra-ui/react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\n\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport * as GLOBAL from '../model/global';\n\nexport default function Auth() {\n  const [username, setUsername] = useState('');\n\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n  var isUser = user != null;\n\n  const doAuth = () => {\n    const url =\n      document.referrer +\n      '?p=' +\n      user.get('ethAddress') +\n      '&s=' +\n      user.getSessionToken() +\n      '&u=' +\n      GLOBAL.getMe().username;\n    return url;\n  };\n\n  useEffect(() => {\n    GLOBAL.setAppstate('pagestate', 'AUTH');\n    if (username == '') {\n      setUsername(GLOBAL.getMe().username);\n    }\n  });\n\n  return (\n    <center>\n      <Container size=\"lg\">\n        <Heading>Authentication</Heading>\n        <br />\n        <Text>Referer: </Text>\n        <Heading fontSize=\"3xl\">{document.referrer}</Heading>\n        <br />\n        <br />\n        {username != '' && (\n          <VStack>\n            <br />\n            <Link href={doAuth()}>\n              <Button>Accept Logon Request</Button>\n            </Link>\n            <Link href={document.referrer + '?p=declined'}>\n              <Button>Decline Logon Request</Button>\n            </Link>\n          </VStack>\n        )}\n        {username == '' && (\n          <VStack>\n            <Text>Please Logon to accept</Text>\n\n            <br />\n            <Link href={document.referrer}>\n              <Button>Decline Logon Request</Button>\n            </Link>\n          </VStack>\n        )}\n        <br /> <br />\n        <Heading>Debug</Heading>\n        <Text>username: {username}</Text>\n        <Text>{}</Text>\n        <Text>{}</Text>\n      </Container>\n    </center>\n  );\n}\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link as CLink,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Textarea,\n  Button,\n  Input,\n} from '@chakra-ui/react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport { SHA3 } from 'sha3';\nimport { web3 } from 'web3';\n\nimport * as GLOBAL from '../model/global';\nimport * as IPFS from '../io/ipfs_api';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\n\nexport default function Sign() {\n  const [signature, setSignature] = useState('');\n  const [messageText, setMessageText] = useState(\n    'this is a simple text message'\n  );\n\n  const [did, setDid] = useState('');\n  const [address, setAddress] = useState('');\n  const [signerDid, setSignerDid] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  const [runFirst, setRunFirst] = useState(true);\n  const [haveUser, setHaveUser] = useState(false);\n  const [isValidating, setIsValidating] = useState(false);\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    try {\n      if (!haveUser) {\n        Moralis.User.currentAsync().then(function (user) {\n          if (user == null) {\n            return;\n          }\n          setHaveUser(true);\n          const addr = user.get('ethAddress');\n          setAddress(addr);\n          setDid(HELPER.DidFromPubkey(addr));\n          setSignerDid(HELPER.DidFromPubkey(addr));\n        });\n      }\n    } catch (e) {}\n    GLOBAL.setAppstate('pagestate', 'SIGN');\n  });\n\n  // ============================================================\n  const validate = async () => {\n    setIsValidating(true);\n    const r = '0x' + signature.substring(0, 64);\n    const s = '0x' + signature.substring(64, 128);\n    const v = parseInt(signature.substring(128, 130), 16);\n\n    var set = { text: messageText };\n    const res = await WEB3.isValidSignature(\n      Moralis,\n      HELPER.PubkeyFromDid(signerDid),\n      set,\n      v,\n      r,\n      s\n    );\n    setIsValidating(false);\n    setIsValid(res);\n  };\n\n  const copySignerDid = () => {\n    setSignerDid(did);\n    setAddress(did.substring(8));\n  };\n\n  const signMessage = async () => {\n    const msgParams2 = JSON.stringify({\n      domain: {\n        // Defining the chain aka Rinkeby testnet or Ethereum Main Net\n        chainId: STATIC.CHAIN_ID,\n        // Give a user friendly name to the specific contract you are signing for.\n        name: 'Youfoundme',\n        // If name isn't enough add verifying contract to make sure you are establishing contracts with the proper entity\n        verifyingContract: STATIC.CONTRACT_ADDRESS,\n        // Just let's you know the latest version. Definitely make sure the field name is correct.\n        version: '1',\n      },\n\n      // Defining the message signing data content.\n      message: {\n        text: messageText,\n      },\n      // Refers to the keys of the *types* object below.\n      primaryType: 'set',\n      types: {\n        // TODO: Clarify if EIP712Domain refers to the domain the contract is hosted on\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'version', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' },\n        ],\n        set: [{ name: 'text', type: 'string' }],\n      },\n    });\n\n    Moralis.User.currentAsync().then(function (user) {\n      Moralis.enableWeb3().then((_web3) => {\n        const addr = HELPER.PubkeyFromDid(signerDid);\n        _web3.currentProvider.sendAsync(\n          {\n            method: 'eth_signTypedData_v4',\n            params: [addr, msgParams2],\n            from: addr,\n          },\n          function (err, result) {\n            if (err) {\n              return console.error(err);\n            }\n            const signature = result.result.substring(2);\n            const r = '0x' + signature.substring(0, 64);\n            const s = '0x' + signature.substring(64, 128);\n            const v = parseInt(signature.substring(128, 130), 16);\n            setSignature(signature);\n          }\n        );\n      });\n    });\n  };\n\n  if (haveUser) {\n    return (\n      <center>\n        <Heading>Sign</Heading>\n        <br />\n        <Container>\n          <Text>Signing DID: {did}</Text>{' '}\n          <CLink onClick={() => copySignerDid()} color=\"blue.500\">\n            set as Verification DID\n          </CLink>\n          <br /> <br />\n          <Text>Message</Text>\n          <Textarea\n            onChange={(e) => setMessageText(e.target.value)}\n            value={messageText}\n            width=\"700px\"\n            height=\"200px\"\n            placeholder=\"Message\"></Textarea>\n          <Box h=\"10px\" />\n          <HStack>\n            <Button onClick={() => signMessage()}>Sign Message</Button>\n          </HStack>\n          <Box h=\"10px\" />\n          <Text>Signature</Text>\n          <Textarea\n            value={signature}\n            placeholder=\"Signature\"\n            onChange={(e) => setSignature(e.target.value)}\n            width=\"700px\"\n            height=\"200px\"\n            fontSize=\"2xl\"></Textarea>\n          <Box h=\"10px\" />\n          <Text>Verification DID</Text>\n          <Input\n            fontSize=\"sm\"\n            value={signerDid}\n            onChange={(e) => setSignerDid(e.target.value)}></Input>\n          <Box h=\"10px\" />\n          <HStack>\n            <Button onClick={() => validate()}>Validate Message</Button>\n          </HStack>\n          <Box h=\"10px\" />\n          {isValid && <Text color=\"green.500\">valid</Text>}\n          {!isValid && <Text color=\"red.500\">not valid</Text>}\n          {isValidating && <Text color=\"yellow.500\">validating...</Text>}\n        </Container>\n      </center>\n    );\n  }\n\n  return (\n    <center>\n      <Heading>Signature</Heading>\n      <Container>\n        <Text>\n          Please connect your Wallet to sign in.\n          <br />\n          <br />\n          Please use&nbsp;\n          <a href=\"https://metamask.io\" target=\"_blank\">\n            MetaMask&nbsp;\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />\n          </a>{' '}\n          or&nbsp;\n          <a href=\"https://walletconnect.com/\" target=\"_blank\">\n            Wallet Connect&nbsp;\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />\n          </a>\n        </Text>\n      </Container>\n    </center>\n  );\n}\n","/** @format */\n\nimport React from 'react';\nimport App from './App';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport { MoralisProvider } from 'react-moralis';\nimport { render, ReactDOM } from 'react-dom';\nimport { HashRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Show from './routes/show';\nimport Editor from './routes/editor';\nimport Search from './routes/search';\nimport Home from './routes/home';\nimport Register from './routes/register';\nimport Avatar from './routes/avatar';\nimport Connect from './routes/connect';\nimport Message from './routes/message';\nimport Auth from './routes/auth';\nimport Sign from './routes/sign';\nimport * as GLOBAL from './model/global';\nimport * as STATIC from './model/static';\nimport '@fontsource/noto-sans/700.css';\n\nconst theme = extendTheme({\n  fonts: {\n    heading: 'Noto Sans',\n    body: 'Noto Sans',\n  },\n  config: {\n    initialColorMode: 'dark',\n  },\n});\n\nconst rootElement = document.getElementById('root');\n\n// ==================================================================================\nrender(\n  <ChakraProvider theme={theme}>\n    <HashRouter basename={''}>\n      <MoralisProvider\n        appId={STATIC.MORALIS_APPID}\n        serverUrl={STATIC.MORALIS_SERVER}>\n        <Routes>\n          <Route path=\"/\" element={<App />} key={GLOBAL.getAppState().routeky}>\n            <Route\n              path=\"home\"\n              element={<Home />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              index\n              element={<Home />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"show/:did\"\n              element={<Show />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"editor\"\n              element={<Editor />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"search\"\n              element={<Search />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"register\"\n              element={<Register />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"avatar\"\n              element={<Avatar />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"connect/:did\"\n              element={<Connect />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"message/:msg\"\n              element={<Message />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"auth\"\n              element={<Auth />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"sign\"\n              element={<Sign />}\n              key={GLOBAL.getAppState().routeky}\n            />\n          </Route>\n        </Routes>\n      </MoralisProvider>\n    </HashRouter>\n  </ChakraProvider>,\n  rootElement\n);\n"],"sourceRoot":""}