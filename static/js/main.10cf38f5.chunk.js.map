{"version":3,"sources":["model/static.js","io/api.js","model/global.js","model/helper.js","App.js","io/abis.js","io/web3_api.js","routes/show.jsx","routes/editor.jsx","routes/search.jsx","routes/home.jsx","routes/register.jsx","routes/avatar.jsx","routes/connect.jsx","routes/message.jsx","index.js"],"names":["CONTRACT_ADDRESS_FUJI","VERSION","VERSION_YEAR","FLA_STUDENT","FLA_MINTED","FLA_INVESTOR","APIURL","searchPerson","term","startkey","a","url","token","GLOBAL","axios","get","headers","Authorization","res","data","getPermissions","me","you","permissions","status","sendEmail","email","code","getPerson","pubkey","getPersonByUserName","username","SignVoucher","voucher","SIGNERURL","post","postPerson","person","POSTPERSONURL","then","response","console","log","catch","error","sendSMS","mobile","from","to","usernameFrom","msg","encodeURIComponent","Person","types","model","did","contract","jobtitle","teaser","img","avatar","tags","ref0","ref1","ref2","metaverse","location","gname","sname","metafile","flags","created","pin","magic","actions","self","set","p","length","AppState","searchfield","isLoaded","searchResult","chainId","chainTitle","routeky","connected","position","scannedCount","firstSearch","didfound","pagestate","key","val","alert","create","appState","store","map","getMe","getSnapshot","getYou","getAppState","loadYouByPubKey","API","loadMeByPubKey","setAppstate","updateMePerson","onSnapshot","snapshot","dir","TokenIdFromPubkey","pukey","Web3","utils","hexToNumberString","soliditySha3","CreateMetafile","tokenid","image","attr","meta","JSON","stringify","PubkeyFromDid","substr","toLowerCase","DidFromPubkey","MapChainId","chaindId","kmpSearch","text","pattern","lsp","i","j","charAt","push","App","isDesktop","useMediaQuery","query","useState","setChainId","setChainTitle","addr","setAddr","useClipboard","hasCopied","onCopy","setWeb3","navigate","useNavigate","search","useLocation","newTerm","URLSearchParams","isConnected","setIsConnected","isDone","setIsDone","pageState","setPageState","goSearch","Global","searchlink","viewSelected","linkShowLInk","goEdit","useMoralis","Moralis","isAuthenticating","isAuthenticated","authenticate","authError","logout","login","user","getSigningData","onConnect","accounts","runLogin","onDisconnect","onAccountsChanged","Helper","onChainChanged","chain","window","ethereum","parseInt","useEffect","currentUser","User","current","address","enableWeb3","_web3","sessionStorage","setItem","params","session","Cloud","run","LogonMetaMask","signingMessage","logonWalletConnect","provider","mobileLinks","logoutAll","blokexplorerAccount","linkSelected","style","padding","margin","width","top","size","variant","borderSpacing","m","src","fontSize","borderBottom","paddingBottom","color","onClick","align","isLoading","href","isExternal","marginBottom","marginLeft","colSpan","STATIC","paddingLeft","paddingRight","ABI_YOUFOUNDME","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","components","require","redeem","moralis","redeemer","web3","eth","Contract","f","methods","send","value","Units","ETH","setTokenURI","tokenId","uri","ownerOf","call","Show","lastDid","setLastDid","setTokenid","showConnect","setShowConnect","showUnlink","setShowUnlink","enableConnect","setEnableShowConnect","useParams","pkey","HELPER","t","permission","showConnectButton","downloadVcf","element","document","createElement","content","Date","toISOString","file","Blob","URL","createObjectURL","download","body","appendChild","click","connect","link","showlink","startsWith","substring","avatarlink","maxW","boxSize","objectFit","alt","disabled","marginTop","wdith","level","title","fgColor","bgColor","Editor","setDid","setPubkey","setContract","setUsername","setJobtitle","setTeaser","setImg","setAvatar","setTags","setRef0","setRef1","setRef2","setLocation","setMetaverse","setStatus","setEmail","setMobile","setGname","setSname","setMetafile","setFlags","setCreated","setMagic","setPin","setCode","codeExpected","setCodeExpected","codeEmail","setCodeEmail","codeEmailExpected","setCodeEmailExpected","statusMessage","setStatusMessage","errorMessage","setErrorMessage","changeImage","setChangeImage","changeAvatar","setChangeAvatar","React","isOpen","setIsOpen","mobilevalerror","setMobilevalerror","mobilevalidate","setMobilevalidate","emailvalidate","setEmailvalidate","mobileok","setMobileok","emailok","setEmailok","emailvalerror","setEmailvalerror","showValidateboxEmail","setShowValidateboxEmail","showValidatebox","setShowValidatebox","useSearchParams","onClose","cancelRef","useRef","validateEmail","old","newFlage","toString","validateMobile","codeexpected","setCheckbox","checked","perm","saveNFT","File","base64","btoa","saveIPFS","hash","linkMeta","ipfs","WEB3","owner","rep","handleSave","e","minPrice","signedVoucher","now","personNew","personOld","onChange","event","target","files","placeholder","isChecked","colorScheme","leastDestructiveRef","fontWeight","ref","ml","Search","setSearchResult","setSearchfield","setScannedCount","searchParams","showNext","setShowNext","startSearch","handleChange","next","pos","showPeople","prev","people","all","parse","showArray","max","h","leftmargin","border","w","Object","keys","k","d","fl","Home","Register","isUnique","setIsUnique","isReserved","setIsReserved","nameError","setNameError","nameOk","setNameOk","check","className","cellPadding","isDisabled","Avatar","avataruri","setAvataruri","script","async","saveAvatar","getElementById","assign","hidden","id","height","class","allow","Connect","message","setMessage","setImage","errormsg","setErrormsg","okmsg","setOkmsg","isSendDiabled","setIsSendDisabled","Message","connectionUser","connectionDid","theme","extendTheme","fonts","heading","config","initialColorMode","rootElement","render","basename","appId","serverUrl","path","index"],"mappings":"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","file":"static/js/main.10cf38f5.chunk.js","sourcesContent":["/** @format */\n\nexport const ENV = 'DEV';\n\n//export const CONTRACT_ADDRESS_FUJI_nousername = '0x1bF0e88467C48047FB24186DC9C724Ea4bA44aBd';\n\n// https://testnet.snowtrace.io/address/0xEe171c6302B01fE2b98D255e2D8A6C68282AfF0b\nexport const CONTRACT_ADDRESS_FUJI =\n  '0xEe171c6302B01fE2b98D255e2D8A6C68282AfF0b';\n\nexport const AVALANCHE_EXPLORER_FUJI = 'https://testnet.snowtrace.io/';\n\nconst AVALANCHE_FUJI_CHAIN_ID = 43113;\nconst AVALANCHE_MAIN_CHAIN_ID = 43114;\n\nexport const CHAIN_ID =\n  ENV == 'DEV' ? AVALANCHE_FUJI_CHAIN_ID : AVALANCHE_MAIN_CHAIN_ID;\n\nexport const MORALIS_IPFS = 'https://ipfs.moralis.io:2053/';\nexport const PINATA_IPFS = 'https://gateway.pinata.cloud/ipfs/';\n\nexport const WEBROOT = 'https://youfoundme.io';\n\nconst NanoAvax = 1;\nconst MicroAvax = 1000 * NanoAvax;\nconst Schmeckle = 49 * MicroAvax + 463 * NanoAvax;\nconst MilliAvax = 1000 * MicroAvax;\nconst Avax = 1000 * MilliAvax;\nconst KiloAvax = 1000 * Avax;\nconst MegaAvax = 1000 * KiloAvax;\n\nexport const DID_PRICE_AVAX = 0.05 * MegaAvax;\n\nfunction convertAvax(amount) {\n  return parseInt(amount * 10 ** 18);\n}\n\nexport const VERSION = '0.0.1' + ' ' + ENV;\nexport const VERSION_YEAR = '2022';\n\n/*NanoAvax uint64 = 1\nMicroAvax uint64 = 1000 * NanoAvax\nSchmeckle uint64 = 49*MicroAvax + 463*NanoAvax\nMilliAvax uint64 = 1000 * MicroAvax\nAvax uint64 = 1000 * MilliAvax\nKiloAvax uint64 = 1000 * Avax\nMegaAvax uint64 = 1000 * KiloAvax\n*/\n\nexport const FLA_EMAILCONFIRMED = 1; // not NFT Meta\nexport const FLA_SMSCONFIRMED = 2; // not NFT Meta\nexport const FLA_FULLTIME = 4; // not NFT Meta\nexport const FLA_PARTTIME = 8; // not NFT Meta\nexport const FLA_CONTRACTS = 16; // not NFT Meta\nexport const FLA_PROJECTS = 32; // not NFT Meta\nexport const FLA_SCHOOL = 64; // Not NFT\nexport const FLA_STUDENT = 128; // Not NFT\nexport const FLA_LOCATION = 256; // Not NFT\nexport const FLA_REFERENCES = 512; // Hide References (Not NFT Meta)\nexport const FLA_CONTACT = 1024; // Disallow request of contact details (Not NFT)\nexport const FLA_ANONYMOUS = 2048; // Anonymous\nexport const FLA_MINTED = 4096; // User has an NFT\nexport const FLA_INVESTOR = 8192; // Investor\n\nexport const FLA_SPARE0 = 16384;\nexport const FLA_SPARE1 = 32768;\nexport const FLA_SPARE2 = 65536;\nexport const FLA_SPARE3 = 131072;\nexport const FLA_SPARE4 = 262144;\n","/** @format */\n\nimport axios from 'axios';\nimport * as GLOBAL from '../model/global';\nimport * as STATIC from '../model/static';\n\nvar APIURL = 'https://api.youfoundme.io/v0/';\nif (STATIC.ENV == 'DEV') {\n  APIURL = 'https://api-dev.youfoundme.io/v0/';\n}\n\n// https://api.tech41.de/yfm/v0/person/get/0x345879B60BF5ccDDd06BC91E49A6eBc4e93CfDAa\n\n/*\n========================================================================================================================\n= Search\n========================================================================================================================\n*/\nexport async function searchPerson(term, startkey) {\n  const GETPERSONURL = APIURL + 'search/';\n  const url = GETPERSONURL + term + '/' + startkey;\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data;\n}\n\nexport async function getPermissions(me, you) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'perm2/get/' + me + '/' + you, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.permissions;\n}\n\nexport async function deletePermissions(me, you) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'perm2/del/' + me + '/' + you, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.status;\n}\n\nexport async function setPermissions(me, you) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'perm2/set/' + me + '/' + you, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.status;\n}\n\nexport async function sendEmail(email) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'email/verifyemail/' + email, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.code;\n}\n\nexport async function getPerson(pubkey) {\n  const GETPERSONURL = APIURL + 'person/get/';\n  const url = GETPERSONURL + pubkey;\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data;\n}\n\nexport async function getPersonByUserName(username) {\n  const GETPERSONURL = APIURL + 'person/getuser/';\n  const url = GETPERSONURL + username;\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data;\n}\n\nexport async function SignVoucher(voucher) {\n  const SIGNERURL = APIURL + 'signer';\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.post(\n    SIGNERURL,\n    {\n      voucher: voucher,\n    },\n    {\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n    }\n  );\n  return res.data;\n}\n\nexport async function postPerson(person) {\n  const POSTPERSONURL = APIURL + 'person/post/';\n  const token = GLOBAL.getAppState().token;\n  axios\n    .post(\n      POSTPERSONURL,\n      {\n        person: person,\n      },\n      {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      }\n    )\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport async function sendSMS(mobile) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'sms/sendsms/' + mobile, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.code;\n}\n\n// Not securees by JWT\nexport async function getJWT(username, did, session) {\n  let res = await axios.get(\n    APIURL + 'token/get/' + username + '/' + did + '/' + session\n  );\n  return res.data.token;\n}\n\nexport async function verifyJWT(token) {\n  let res = await axios.get(APIURL + 'token/validate/' + token);\n  return res.data.verified;\n}\n\nexport async function connect(from, to, usernameFrom, msg) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(\n    APIURL +\n      'connect/' +\n      from +\n      '/' +\n      to +\n      '/' +\n      usernameFrom +\n      '/' +\n      encodeURIComponent(msg),\n    {\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n    }\n  );\n  return res.data;\n}\n","/** @format */\n\nimport { types, getSnapshot, onSnapshot } from 'mobx-state-tree';\nimport * as API from '../io/api.js';\n\nconst Person = types\n  .model({\n    did: '',\n    pubkey: '',\n    contract: '',\n    username: '',\n    jobtitle: '',\n    teaser: '',\n    img: '',\n    avatar: '',\n    tags: '',\n    ref0: '',\n    ref1: '',\n    ref2: '',\n    metaverse: '',\n    location: '',\n    status: '',\n    email: '',\n    mobile: '',\n    gname: '',\n    sname: '',\n    metafile: '',\n    flags: '',\n    created: '',\n    pin: '',\n    magic: '',\n  })\n  .actions((self) => ({\n    set(p) {\n      if (p == null || p.length < 10) {\n        return;\n      }\n      self.did = p.did;\n      self.pubkey = p.pubkey;\n      self.contract = p.contract;\n      self.username = p.username;\n      self.jobtitle = p.jobtitle;\n      self.avatar = p.avatar;\n      self.teaser = p.teaser;\n      self.img = p.img;\n      self.tags = p.tags;\n      self.ref0 = p.ref0;\n      self.ref1 = p.ref1;\n      self.ref2 = p.ref2;\n      self.metaverse = p.metaverse;\n      self.location = p.location;\n      self.status = p.status;\n      self.email = p.email;\n      self.mobile = p.mobile;\n      self.gname = p.gname;\n      self.sname = p.sname;\n      self.metafile = p.metafile;\n      self.flags = p.flags;\n      self.created = p.created;\n      self.magic = p.magic;\n      self.pin = p.pin;\n    },\n  }));\n\nconst AppState = types\n  .model({\n    searchfield: '',\n    did: '',\n    isLoaded: false,\n    searchResult: '',\n    chainId: 0,\n    chainTitle: 'unknown',\n    routeky: 0,\n    token: '',\n    connected: false,\n    position: 0,\n    scannedCount: 0,\n    firstSearch: true,\n    didfound: false,\n    pagestate: 'FIND',\n  })\n  .actions((self) => ({\n    set(key, val) {\n      switch (key) {\n        case 'pagestate':\n          self.pagestate = val;\n          return;\n        case 'didfound':\n          self.didfound = val;\n          return;\n        case 'firstSearch':\n          self.firstSearch = val;\n          return;\n\n        case 'position':\n          self.position = val;\n          return;\n\n        case 'scannedCount':\n          self.scannedCount = val;\n          return;\n\n        case 'routeky':\n          self.routeky = val;\n          return;\n\n        case 'did':\n          self.did = val;\n          return;\n\n        case 'searchfield':\n          self.searchfield = val;\n          return;\n\n        case 'isLoaded':\n          self.isLoaded = val;\n          return;\n\n        case 'searchResult':\n          self.searchResult = val;\n          return;\n\n        case 'chainId':\n          self.chainId = val;\n          return;\n\n        case 'chainTitle':\n          self.chainTitle = val;\n          return;\n\n        case 'token':\n          self.token = val;\n          return;\n\n        case 'connected':\n          self.connected = val;\n          return;\n\n        default:\n          alert(\n            'unknown key in appstate action key: ' + key + ' value: ' + val\n          );\n          return;\n      }\n    },\n  }));\n\nconst me = Person.create();\nconst you = Person.create();\nconst appState = AppState.create();\n\nconst RootStore = types.model({\n  me: types.map(Person),\n  you: types.map(Person),\n  appState: types.map(AppState),\n});\n\n// create an instance from a snapshot\nconst store = RootStore.create({});\n\n// listen to new snapshots\nonSnapshot(store, (snapshot) => {\n  console.dir(snapshot);\n});\n\nexport function getMe() {\n  return getSnapshot(me);\n}\n\nexport function getYou() {\n  return getSnapshot(you);\n}\n\nexport function getAppState() {\n  return getSnapshot(appState);\n}\n\nexport async function loadYouByPubKey(pubkey) {\n  try {\n    var p = await API.getPerson(pubkey);\n    you.set(p.person);\n    return p.person;\n  } catch (err) {\n    console.log(err);\n  }\n  return null;\n}\n\nexport async function setYou(person) {\n  you.set(person);\n}\n\nexport async function loadMeByPubKey(pubkey) {\n  var p = await API.getPerson(pubkey);\n  me.set(p.person);\n  return p.person;\n}\n\nexport async function setAppstate(key, val) {\n  appState.set(key, val);\n  return appState;\n}\n\nexport async function updateMePerson(person) {\n  me.set(person);\n  API.postPerson(person);\n  return me;\n}\n\nexport async function UpdateMePersonNoDbSave(person) {\n  me.set(person);\n  return me;\n}\n","/** @format */\nimport Web3 from 'web3';\nimport { getHasher, OutputType, HashType } from 'bigint-hash';\n\n//10196219370672644541601216188660491276260478785220810163497529090616   SHA3_224\n//96932911298637702523298034616076952241110591865517956290731622492456824546905\n// 82751696802861446618287329271326379553441206173434891033707984521910594309783\n// export function TokenIdFromDid(did) {\n//   return (\n//     '' +\n//     getHasher(HashType.SHA3_256)\n//       .update(Buffer.from(did.substr(8)))\n//       .digest(OutputType.BigInt)\n//   );\n// }\n\nexport function TokenIdFromPubkey(pukey) {\n  return Web3.utils.hexToNumberString(Web3.utils.soliditySha3(pukey));\n}\n\nexport function CreateMetafile(\n  did,\n  tokenid,\n  image,\n  avatar,\n  username,\n  jobtitle,\n  teaser\n) {\n  var attr = {};\n  attr['did'] = did;\n  attr['tokenid'] = tokenid;\n  attr['username'] = username;\n  attr['avatar'] = avatar;\n  attr['jobtitle'] = jobtitle;\n  attr['teaser'] = teaser;\n\n  var meta = {};\n  meta['name'] = did;\n  meta['description'] = 'Youfoundme DID, see https://youfoundme.io';\n  meta['image'] = image;\n  meta['external_url'] = 'https://youfoundme.io';\n  meta['attributes'] = attr;\n  return JSON.stringify(meta);\n}\n\nexport function createTextFileDownload(meta, name) {\n  const TextFile = (meta) => {\n    const element = document.createElement('a');\n    const file = new Blob([meta], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = name;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n}\n\nexport function PubkeyFromDid(did) {\n  return did.substr(8).toLowerCase();\n}\n\nexport function DidFromPubkey(pubkey) {\n  return 'did:yfm:' + pubkey.toLowerCase();\n}\n\nexport function MapChainId(chaindId) {\n  switch (chaindId) {\n    case 1:\n      return 'Ethereum Mainnet';\n\n    case 43113:\n      return 'Avalance Fuji';\n\n    case 43114:\n      return 'Avalance Main';\n\n    default:\n      return '';\n  }\n}\n\nexport function kmpSearch(text, pattern) {\n  if (pattern.length == 0) return 0; // Immediate match\n\n  // Compute longest suffix-prefix table\n  var lsp = [0]; // Base case\n  for (var i = 1; i < pattern.length; i++) {\n    var j = lsp[i - 1]; // Start by assuming we're extending the previous LSP\n    while (j > 0 && pattern.charAt(i) != pattern.charAt(j)) j = lsp[j - 1];\n    if (pattern.charAt(i) == pattern.charAt(j)) j++;\n    lsp.push(j);\n  }\n\n  // Walk through text string\n  var j = 0; // Number of chars matched in pattern\n  for (var i = 0; i < text.length; i++) {\n    while (j > 0 && text.charAt(i) != pattern.charAt(j)) j = lsp[j - 1]; // Fall back in the pattern\n    if (text.charAt(i) == pattern.charAt(j)) {\n      j++; // Next char matched, increment position\n      if (j == pattern.length) return i - (j - 1);\n    }\n  }\n  return -1; // Not found\n}\n","/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useMoralis } from 'react-moralis';\nimport {\n  Link as LINKCH,\n  HStack,\n  VStack,\n  Button,\n  Text,\n  Heading,\n  useClipboard,\n  Table,\n  Tr,\n  Td,\n  Image,\n  Box,\n  Center,\n} from '@chakra-ui/react';\nimport { useMediaQuery } from 'react-responsive';\nimport { CopyIcon, ExternalLinkIcon } from '@chakra-ui/icons';\nimport * as Global from './model/global';\nimport * as Helper from './model/helper';\nimport * as STATIC from './model/static';\nimport * as API from './io/api';\n//==========================================================================================\nexport default function App() {\n  const isDesktop = useMediaQuery({ query: '(min-width: 1537px)' });\n  const [chainId, setChainId] = useState(0);\n  const [chainTitle, setChainTitle] = useState('');\n  const [addr, setAddr] = useState('');\n  const [did, setDid] = useState('');\n  const { hasCopied, onCopy } = useClipboard(addr);\n  const [web3, setWeb3] = useState({});\n  const navigate = useNavigate();\n  const search = useLocation().search;\n  const newTerm = new URLSearchParams(search).get('term');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [pageState, setPageState] = useState('FIND');\n\n  const goSearch = async () => {\n    Global.setAppstate('pagestate', 'FIND');\n    setPageState('FIND');\n    if (newTerm != null && newTerm.length > 0) {\n      Global.setAppstate('searchfield', newTerm);\n    }\n    var searchlink = '/search?term=' + Global.getAppState().searchfield;\n    navigate(searchlink);\n  };\n\n  const viewSelected = () => {\n    setPageState('VIEW');\n    Global.setAppstate('pagestate', 'VIEW');\n    if (Global.getAppState().did) {\n      var linkShowLInk = '/show/' + Global.getAppState().did;\n      Global.setAppstate('pagestate', 'VIEW');\n      navigate(linkShowLInk);\n      return;\n    }\n    Global.setAppstate('pagestate', 'FIND');\n    navigate('/search?term=' + Global.getAppState().searchfield);\n  };\n\n  const goEdit = async () => {\n    setPageState('EDIT');\n    Global.setAppstate('pagestate', 'EDIT');\n    navigate('/editor');\n  };\n\n  const location = useLocation();\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n  Moralis.getSigningData = () => 'Signin to ƴoufoundme';\n\n  // Moralis Events =================================================================\n  Moralis.onConnect(async (accounts) => {\n    runLogin();\n  });\n\n  Moralis.onDisconnect(async (accounts) => {\n    Global.setAppstate('connected', false);\n    setIsConnected(false);\n  });\n\n  Moralis.onAccountsChanged(async (accounts) => {\n    if (accounts[0] == null) {\n      return;\n    }\n    Global.loadMeByPubKey(accounts[0]);\n    Global.setAppstate('did', Helper.DidFromPubkey(accounts[0]));\n  });\n\n  Moralis.onChainChanged(async (chain) => {\n    if (window.ethereum) {\n      var chainId = parseInt(window.ethereum.chainId, 16);\n      // TODO check allowd chains...\n      setChainTitle(Helper.MapChainId(chainId));\n      Global.setAppstate('chainId', chainId);\n    }\n  });\n  // End Moralis Events =================================================================\n\n  useEffect(() => {\n    setPageState(Global.getAppState().pagestate);\n    // run only once\n    if (isDone) {\n      return;\n    }\n    setIsDone(true);\n    if (user && Global.getAppState().token == '') {\n      runLogin();\n    }\n  });\n\n  const runLogin = async () => {\n    const currentUser = Moralis.User.current();\n    if (!currentUser) {\n      return;\n    }\n    var address = currentUser.get('ethAddress');\n    setAddr(address);\n    var did = Helper.DidFromPubkey(address);\n    var address;\n    Moralis.enableWeb3().then((_web3) => {\n      setWeb3(_web3);\n      if (window.ethereum) {\n        var chainId = parseInt(window.ethereum.chainId, 16);\n        setChainId(chainId);\n        setChainTitle(Helper.MapChainId(chainId));\n        Global.setAppstate('routeky', Global.getAppState().routeky + 1);\n        window.sessionStorage.setItem('sessionKey', address);\n        const params = {\n          username: currentUser.get('username'),\n          did: did,\n          session: currentUser.get('sessionToken'),\n        };\n        // TODO check if JWT exists and is valid in time\n        Moralis.Cloud.run('createToken', params).then((token) => {\n          Global.setAppstate('token', token);\n          Global.loadMeByPubKey(address).then(() => {\n            setIsConnected(true);\n            Global.setAppstate('connected', true);\n            setIsDone(false);\n\n            if (Global.getAppState().pagestate == 'EDIT') {\n              navigate('/editor');\n            }\n          });\n        });\n      }\n    });\n  };\n\n  const LogonMetaMask = async () => {\n    Moralis.authenticate({ signingMessage: 'Sign in ƴoufoundme' }).then(\n      function (user) {\n        runLogin();\n      }\n    );\n  };\n\n  const logonWalletConnect = async () => {\n    try {\n      await authenticate({\n        signingMessage: 'Sign in ƴoufoundme',\n        provider: 'walletconnect',\n        mobileLinks: [\n          'rainbow',\n          'metamask',\n          'argent',\n          'trust',\n          'imtoken',\n          'pillar',\n        ],\n        chainId: STATIC.CHAIN_ID,\n      }).then(function (user) {\n        runLogin();\n      });\n    } catch (err) {\n      debugger;\n      console.log(err);\n    }\n  };\n\n  const logoutAll = async () => {\n    Global.setAppstate('token', '');\n    window.sessionStorage.setItem('sessionKey', '');\n    setIsConnected(false);\n    Global.setAppstate('connected', false);\n    logout();\n  };\n\n  var blokexplorerAccount = 'https://testnet.snowtrace.io/address/' + addr;\n\n  const linkSelected = () => {\n    var addr = user.get('ethAddress');\n    var did = Helper.DidFromPubkey(addr);\n    var viewlink = '/show/' + did;\n    navigate(viewlink);\n  };\n\n  // Mobile\n  if (!isDesktop) {\n    return (\n      <div\n        style={{\n          padding: '0',\n          margin: '0',\n          width: '100%',\n          top: '0px',\n          position: 'absolute',\n        }}>\n        <nav>\n          <center>\n            <Table\n              size=\"lg\"\n              variant=\"simple\"\n              style={{\n                borderSpacing: '0px',\n                p: '0',\n                m: '0',\n                width: '100%',\n              }}>\n              <Tr>\n                <Td width=\"100%\">\n                  <center>\n                    <LINKCH href={STATIC.WEBROOT}>\n                      <Image src=\"/favicon-32x32.png\"></Image>\n                      <Heading fontSize=\"5xl\">ƴoufoundme</Heading>\n                    </LINKCH>\n                  </center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td width=\"100%\">\n                  <center>\n                    {!isConnected && (\n                      <VStack>\n                        <HStack>\n                          <Button\n                            size=\"lg\"\n                            isLoading={isAuthenticating}\n                            onClick={() => logonWalletConnect()}>\n                            Wallet Connect\n                          </Button>\n                          &nbsp;&nbsp;\n                          <Button\n                            size=\"lg\"\n                            isLoading={isAuthenticating}\n                            onClick={() => LogonMetaMask()}>\n                            Metamask\n                          </Button>\n                        </HStack>\n                      </VStack>\n                    )}\n\n                    {isConnected && (\n                      <VStack>\n                        <HStack>\n                          <Button size=\"lg\" onClick={() => logoutAll()}>\n                            disconnet\n                          </Button>\n                          <LINKCH\n                            color=\"blue.500\"\n                            href=\"https://testnet.snowtrace.io/block/0x3b9197c2e27818ab344d1c567917e8c569850b5901926f1e777c0e505547a84e\"\n                            isExternal>\n                            <HStack align=\"flex-end\">\n                              <Text fontSize=\"xs\">\n                                {chainTitle} {chainId}\n                              </Text>\n                            </HStack>\n                          </LINKCH>\n                        </HStack>\n\n                        <HStack>\n                          <LINKCH onClick={() => linkSelected()}>\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              me\n                            </Text>\n                          </LINKCH>\n                          <LINKCH href={blokexplorerAccount} isExternal>\n                            <HStack>\n                              <Text fontSize=\"xs\">{addr}</Text>\n                              <ExternalLinkIcon\n                                fontSize=\"xs\"\n                                style={{\n                                  marginBottom: '4px',\n                                  marginLeft: '2px',\n                                }}\n                              />\n                            </HStack>\n                          </LINKCH>\n                        </HStack>\n                      </VStack>\n                    )}\n                  </center>\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td width=\"100%\">\n                  <Center>\n                    <HStack>\n                      {pageState == 'FIND' && (\n                        <Button\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          color=\"blue.300\"\n                          onClick={goSearch}>\n                          Find\n                        </Button>\n                      )}\n                      {pageState != 'FIND' && (\n                        <Button\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          onClick={goSearch}>\n                          Find\n                        </Button>\n                      )}\n\n                      {pageState == 'VIEW' && (\n                        <Button\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          color=\"blue.300\"\n                          onClick={() => viewSelected()}>\n                          View\n                        </Button>\n                      )}\n                      {pageState != 'VIEW' && (\n                        <Button\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          onClick={() => viewSelected()}>\n                          View\n                        </Button>\n                      )}\n                      {pageState == 'EDIT' && (\n                        <Button\n                          onClick={() => goEdit()}\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\"\n                          color=\"blue.300\">\n                          {' '}\n                          Me\n                        </Button>\n                      )}\n                      {pageState != 'EDIT' && (\n                        <Button\n                          onClick={() => goEdit()}\n                          paddingLeft=\"40px\"\n                          paddingRight=\"40px\"\n                          size=\"lg\">\n                          Me\n                        </Button>\n                      )}\n                    </HStack>\n                  </Center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Outlet />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <center>\n                    <Text color=\"green.500\" fontSize=\"xs\">\n                      ©{STATIC.VERSION_YEAR} TECH41 GmbH Berlin - Privacy Policy\n                      - Terms of Service\n                    </Text>\n                    <Text color=\"green.500\" fontSize=\"xs\">\n                      V: {STATIC.VERSION}\n                    </Text>\n                  </center>\n                </Td>\n              </Tr>\n            </Table>\n          </center>\n        </nav>\n      </div>\n    );\n  }\n\n  // Desktop\n  return (\n    <div\n      style={{\n        padding: '0',\n        margin: '0',\n        width: '100%',\n        top: '0px',\n        position: 'absolute',\n      }}>\n      <nav>\n        <center>\n          <Table\n            size=\"lg\"\n            variant=\"simple\"\n            style={{\n              borderSpacing: '0px',\n              p: '0',\n              m: '0',\n              width: '100%',\n            }}>\n            <Tr>\n              <Td\n                style={{\n                  width: '20px',\n                }}>\n                <HStack>\n                  <Image src=\"/favicon-32x32.png\"></Image>\n                  <Heading fontSize=\"5xl\">ƴoufoundme</Heading>\n                </HStack>\n              </Td>\n              <Td width=\"100%\">\n                <center>\n                  <nav\n                    style={{\n                      width: '100%',\n                      borderBottom: 'solid 0px',\n                      paddingBottom: '1rem',\n                    }}>\n                    {pageState == 'FIND' && (\n                      <Button color=\"blue.300\" size=\"lg\" onClick={goSearch}>\n                        Find\n                      </Button>\n                    )}\n                    {pageState != 'FIND' && (\n                      <Button size=\"lg\" onClick={goSearch}>\n                        Find\n                      </Button>\n                    )}\n                    &nbsp;&nbsp; &nbsp;\n                    {pageState == 'VIEW' && (\n                      <Button\n                        color=\"blue.300\"\n                        size=\"lg\"\n                        onClick={() => viewSelected()}>\n                        View\n                      </Button>\n                    )}\n                    {pageState != 'VIEW' && (\n                      <Button size=\"lg\" onClick={() => viewSelected()}>\n                        View\n                      </Button>\n                    )}\n                    &nbsp;&nbsp; &nbsp;\n                    {pageState == 'EDIT' && (\n                      <Button\n                        color=\"blue.300\"\n                        onClick={() => goEdit()}\n                        size=\"lg\">\n                        Me\n                      </Button>\n                    )}\n                    {pageState != 'EDIT' && (\n                      <Button size=\"lg\" onClick={() => goEdit()}>\n                        Me\n                      </Button>\n                    )}\n                  </nav>\n                </center>\n              </Td>\n              <Td width=\"20px\" align=\"right\">\n                <VStack align=\"flex-end\">\n                  {!isConnected && (\n                    <HStack align=\"flex-end\">\n                      <Button\n                        size=\"lg\"\n                        isLoading={isAuthenticating}\n                        onClick={() => logonWalletConnect()}>\n                        Wallet Connect\n                      </Button>\n                      <Button\n                        size=\"lg\"\n                        isLoading={isAuthenticating}\n                        onClick={() => LogonMetaMask()}>\n                        Metamask\n                      </Button>\n                    </HStack>\n                  )}\n                  {isConnected && (\n                    <VStack align=\"flex-end\">\n                      <HStack align=\"flex-end\">\n                        <LINKCH\n                          color=\"blue.500\"\n                          href=\"https://testnet.snowtrace.io/block/0x3b9197c2e27818ab344d1c567917e8c569850b5901926f1e777c0e505547a84e\"\n                          isExternal>\n                          <HStack align=\"flex-end\">\n                            <Text fontSize=\"xs\">\n                              {chainTitle} {chainId}\n                            </Text>\n                          </HStack>\n                        </LINKCH>\n                        <Button onClick={() => logoutAll()}>disconnet</Button>\n                      </HStack>\n\n                      <HStack align=\"flex-end\">\n                        <LINKCH onClick={() => linkSelected()}>\n                          <Text color=\"blue.500\" fontSize=\"xs\">\n                            me\n                          </Text>\n                        </LINKCH>\n                        <LINKCH href={blokexplorerAccount} isExternal>\n                          <HStack align=\"flex-end\">\n                            <Text fontSize=\"xs\">{addr}</Text>\n                            <ExternalLinkIcon\n                              fontSize=\"xs\"\n                              style={{ marginBottom: '4px', marginLeft: '2px' }}\n                            />\n                          </HStack>\n                        </LINKCH>\n                      </HStack>\n                    </VStack>\n                  )}\n                  ,\n                </VStack>\n              </Td>\n            </Tr>\n            <Tr>\n              <Td colSpan=\"3\">\n                <Outlet />\n              </Td>\n            </Tr>\n            <Tr>\n              <Td colSpan=\"3\">\n                <center>\n                  <Text color=\"green.500\" fontSize=\"xs\">\n                    ©{STATIC.VERSION_YEAR} TECH41 GmbH Berlin - Privacy Policy -\n                    Terms of Service - V: {STATIC.VERSION}\n                  </Text>\n                </center>\n              </Td>\n            </Tr>\n          </Table>\n        </center>\n      </nav>\n    </div>\n  );\n}\n","/** @format */\nexport const ABI_YOUFOUNDME = [\n  {\n    inputs: [\n      {\n        internalType: 'address payable',\n        name: 'minter',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'approved',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'previousAdminRole',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'newAdminRole',\n        type: 'bytes32',\n      },\n    ],\n    name: 'RoleAdminChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'RoleGranted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'RoleRevoked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'DEFAULT_ADMIN_ROLE',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MINTER_ROLE',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'availableToWithdraw',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getApproved',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getChainID',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n    ],\n    name: 'getRoleAdmin',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'username',\n        type: 'string',\n      },\n    ],\n    name: 'getTokenByUsername',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getUsername',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'grantRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'hasRole',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'ownerOf',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'redeemer',\n        type: 'address',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'tokenId',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'minPrice',\n            type: 'uint256',\n          },\n          {\n            internalType: 'string',\n            name: 'uri',\n            type: 'string',\n          },\n          {\n            internalType: 'string',\n            name: 'username',\n            type: 'string',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct YoufoundmeNFT.NFTVoucher',\n        name: 'voucher',\n        type: 'tuple',\n      },\n    ],\n    name: 'redeem',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'renounceRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'revokeRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '_data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'string',\n        name: 'uri',\n        type: 'string',\n      },\n    ],\n    name: 'setTokenURI',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'tokenURI',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","/** @format */\n\nimport { useMoralis } from 'react-moralis';\n\nimport { ABI_YOUFOUNDME } from './abis';\nimport * as STATIC from '../model/static';\n\nconst ethers = require('ethers');\n\n// '0xdE9C2EBbb5d42F094271e21A9F911A9A2F9E0a67'\nexport async function redeem(moralis, redeemer, voucher) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.redeem(redeemer, voucher);\n  return f.send({ from: redeemer, value: moralis.Units.ETH('0.05') });\n}\n\nexport async function setTokenURI(moralis, redeemer, tokenId, uri) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.setTokenURI(tokenId, uri);\n  return f.send({ from: redeemer, value: moralis.Units.ETH('0.0') });\n}\n\nexport async function tokenURI(moralis, tokenId) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.tokenURI(tokenId);\n  return f.call();\n}\n\nexport async function ownerOf(moralis, tokenId) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.ownerOf(tokenId);\n  return f.call();\n}\n\nexport async function getTokenByUsername(moralis, username) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.getTokenByUsername(username);\n  return f.call();\n}\n","/** @format */\n\nimport React, { useEffect, useState, updateState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport QRCode from 'react-qr-code';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n  SunIcon,\n  InfoIcon,\n} from '@chakra-ui/icons';\nimport {\n  HStack,\n  useClipboard,\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Text,\n  Image,\n  Heading,\n  Container,\n  Link,\n  Button,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  useLatestRef,\n  VStack,\n  Avatar,\n} from '@chakra-ui/react';\n\nimport { useMoralis } from 'react-moralis';\n\nimport * as GLOBAL from '../model/global';\nimport * as HELPER from '../model/helper';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\n\n//******************************************************** */\nexport default function Show() {\n  const [lastDid, setLastDid] = useState('');\n  const [tokenid, setTokenid] = useState('');\n  const [showConnect, setShowConnect] = useState(false);\n  const [showUnlink, setShowUnlink] = useState(false);\n  const [enableConnect, setEnableShowConnect] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  var { did } = useParams();\n  const { hasCopied, onCopy } = useClipboard(did);\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n  //0x345879b60bf5ccddd06bc91e49a6ebc4e93cfdaa   Matd\n  //0x58d22f24cd7fda155f9f7eefe9b32add46388ab9   Turtle\n  //0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc   Cryptophine\n\n  const navigate = useNavigate();\n  const appState = GLOBAL.getAppState();\n\n  // TODO multiple requests\n  useEffect(() => {\n    GLOBAL.setAppstate('pagestate', 'VIEW');\n    if (did != GLOBAL.getYou().did) {\n      GLOBAL.setAppstate('didfound', false);\n      getPerson();\n    }\n  });\n\n  const getPerson = async () => {\n    if (lastDid == '' || did !== lastDid) {\n      var pkey = HELPER.PubkeyFromDid(did);\n\n      const person = await GLOBAL.loadYouByPubKey(pkey);\n      if (person == null || JSON.stringify(person) == '{}') {\n        GLOBAL.setAppstate('didfound', false);\n        return;\n      }\n      setLastDid(did);\n      var t = HELPER.TokenIdFromPubkey(person.pubkey);\n      setTokenid(t);\n      GLOBAL.setAppstate('didfound', true);\n\n      if (user == null) {\n        // we are not authenticated\n        GLOBAL.setAppstate('pagestate', 'VIEW');\n        navigate('/show/' + did);\n        return;\n      }\n\n      API.getPermissions(GLOBAL.getMe().pubkey, person.pubkey).then(\n        (permission) => {\n          setIsConnected(permission == 'CONTACT');\n        }\n      );\n      // enable the connect button\n      setEnableShowConnect(isAuthenticated);\n\n      // show the connect button\n      var showConnectButton = isAuthenticated;\n      if (GLOBAL.getYou().pubkey == GLOBAL.getMe().pubkey || isConnected) {\n        showConnectButton = false;\n        setShowUnlink(true);\n      }\n      setShowConnect(showConnectButton);\n      GLOBAL.setAppstate('pagestate', 'VIEW');\n      navigate('/show/' + did);\n    }\n  };\n\n  const downloadVcf = () => {\n    const element = document.createElement('a');\n\n    // https://en.wikipedia.org/wiki/VCard\n    var content = 'BEGIN:VCARD' + '\\r\\n';\n    content += 'VERSION:2.1' + '\\r\\n';\n    content += 'N:' + person.sname + ';' + person.gname + '\\r\\n';\n    content += 'TITLE:' + person.username + '\\r\\n';\n    content += 'PHOTO;PNG:' + person.img + '\\r\\n';\n    content += 'TEL;WORK;VOICE:' + person.mobile + '\\r\\n';\n    content += 'EMAIL:' + person.email + '\\r\\n';\n    content += 'ROLE:' + person.jobtitle + '\\r\\n';\n    content +=\n      'Note:' +\n      'https://app.youfoundme.io/#/show/' +\n      HELPER.DidFromPubkey(person.pubkey) +\n      '\\r\\n';\n    content += 'GEO:' + person.location + '\\r\\n';\n    content += 'UID:' + HELPER.DidFromPubkey(person.pubkey) + '\\r\\n';\n    content +=\n      'URI:' +\n      'https://app.youfoundme.io/#/show/' +\n      HELPER.DidFromPubkey(person.pubkey) +\n      '\\r\\n';\n    content +=\n      'SOURCE:' +\n      'https://app.youfoundme.io/#/show/' +\n      HELPER.DidFromPubkey(person.pubkey) +\n      '\\r\\n';\n    content += 'REV:' + new Date().toISOString() + '\\r\\n';\n    content += 'END:VCARD' + '\\r\\n';\n\n    const file = new Blob([content], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = person.username + '.vcf';\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  const connect = (link) => {\n    navigate('/connect/' + did);\n  };\n\n  const unlink = (link) => {\n    API.deletePermissions(GLOBAL.getMe().pubkey, GLOBAL.getYou().pubkey);\n    setShowUnlink(false);\n    setIsConnected(false);\n    setShowConnect(true);\n  };\n\n  const showlink = (link) => {\n    if (link.startsWith('https')) {\n      link = link.substring(8);\n    }\n    if (link.startsWith('http')) {\n      link = link.substring(7);\n    }\n    if (link.length > 50) {\n      link = link.substring(0, 50) + '...';\n    }\n    return link;\n  };\n\n  const person = GLOBAL.getYou();\n  const avatarlink = '/avatar.html?url=' + person.avatar;\n\n  if (!GLOBAL.getAppState().didfound) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container width=\"100%\"></Container>\n          <h1>Did not found</h1>\n        </center>\n      </main>\n    );\n  }\n\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container maxW=\"container.lg\">\n        <Link onClick={onCopy}>\n          <HStack>\n            <Text color=\"gray.500\" fontSize=\"sm\">\n              {person.did}\n            </Text>\n            <CopyIcon color=\"gray.500\" />\n          </HStack>\n        </Link>\n        <HStack>\n          {person.metafile.length > 0 && (\n            <Link href={person.metaverse} isExternal>\n              <Text color=\"gray.500\" fontSize=\"sm\">\n                Metafile: {showlink(person.metafile)}\n              </Text>\n            </Link>\n          )}\n          {person.metafile.length === 0 && (\n            <Text color=\"gray.500\" fontSize=\"sm\">\n              Metafile: NFT not minted\n            </Text>\n          )}\n        </HStack>\n        <br />\n        <Heading fontSize=\"6xl\">{person.username}</Heading>\n        <br />\n        <HStack>\n          {person.img.length > 0 && (\n            <Avatar\n              boxSize=\"200px\"\n              src={person.img}\n              objectFit=\"cover\"\n              alt={person.username}\n            />\n          )}\n\n          {showConnect && (\n            <VStack>\n              <Box boxSize=\"150px\"></Box>\n              <Button onClick={connect} disabled={!enableConnect}>\n                Connect\n              </Button>\n            </VStack>\n          )}\n        </HStack>\n\n        {person.avatar.length > 0 && (\n          <HStack style={{ marginTop: '5px' }}>\n            <Link color=\"teal.500\" href={avatarlink} isExternal>\n              Show Avatar\n            </Link>\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />{' '}\n          </HStack>\n        )}\n        <br />\n        <Heading>{person.jobtitle}</Heading>\n        <Text fontSize=\"1xl\">{person.teaser}</Text>\n        <br />\n        <Table variant=\"simple\" width=\"100%\">\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b> References</b>\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.ref0.length > 0 && (\n                <Link href={person.ref0} isExternal>\n                  <ExternalLinkIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.ref0.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td wdith=\"100%\">\n              {person.ref0.length > 0 && (\n                <Link href={person.ref0} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.ref0)}\n                  </Text>\n                </Link>\n              )}\n              {person.ref0.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  1. Reference not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.ref1.length > 0 && (\n                <Link href={person.ref1} isExternal>\n                  <ExternalLinkIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.ref1.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td>\n              {person.ref1.length > 0 && (\n                <Link href={person.ref0} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.ref1)}\n                  </Text>\n                </Link>\n              )}\n              {person.ref1.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  2. Reference not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.ref2.length > 0 && (\n                <Link href={person.ref2} isExternal>\n                  <ExternalLinkIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.ref2.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td>\n              {person.ref2.length > 0 && (\n                <Link href={person.ref2} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.ref2)}\n                  </Text>\n                </Link>\n              )}\n              {person.ref2.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  3. Reference not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b> Locations</b>\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.location.length > 0 && (\n                <Link href={person.location} isExternal>\n                  <SunIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.location.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td>\n              {person.location.length > 0 && (\n                <Link href={person.location} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.location)}\n                  </Text>\n                </Link>\n              )}\n              {person.location.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Location not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              {person.metaverse.length > 0 && (\n                <Link href={person.metaverse} isExternal>\n                  <ViewIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.metaverse.length === 0 && <ViewIcon color=\"blue.500\" />}\n            </Td>\n            <Td>\n              {person.metaverse.length > 0 && (\n                <Link href={person.metaverse} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.metaverse)}\n                  </Text>\n                </Link>\n              )}\n              {person.metaverse.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Metaverse not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b> Contact</b>\n\n                {person.gname.length === 0 &&\n                  person.sname.length === 0 &&\n                  person.email.length === 0 &&\n                  person.mobile.length === 0 && (\n                    <Text fontSize=\"xs\" color=\"gray.500\">\n                      only visible to linked contacts,{' '}\n                      <Link onClick={connect} disabled={!isAuthenticated}>\n                        please connect\n                      </Link>\n                    </Text>\n                  )}\n              </Text>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <InfoOutlineIcon color=\"green.500\" />\n            </Td>\n            <Td>\n              {(person.gname.length > 0 || person.sname.length > 0) && (\n                <Text fontSize=\"1xl\" color=\"teal.500\">\n                  {person.gname} {person.sname}\n                </Text>\n              )}\n              {person.gname.length === 0 && person.sname.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Name not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <EmailIcon color=\"green.500\" />\n            </Td>\n            <Td>\n              {person.email.length > 0 && (\n                <Text fontSize=\"1xl\" color=\"teal.500\">\n                  {person.email}\n                </Text>\n              )}\n              {person.email.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Email not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <PhoneIcon color=\"green.500\" />\n            </Td>\n            <Td>\n              {person.mobile.length > 0 && (\n                <Text fontSize=\"1xl\" color=\"teal.500\">\n                  {person.mobile}\n                </Text>\n              )}\n              {person.mobile.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Mobile not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {(person.gname.length > 0 ||\n                person.sname.length > 0 ||\n                person.email.length > 0 ||\n                person.mobile.length > 0) && (\n                <Link onClick={downloadVcf}>\n                  <DownloadIcon color=\"green.500\" />\n                </Link>\n              )}\n              {person.gname.length === 0 &&\n                person.sname.length === 0 &&\n                person.email.length === 0 &&\n                person.mobile.length === 0 && (\n                  <DownloadIcon color=\"green.500\" />\n                )}\n            </Td>\n            <Td color=\"white.500\">\n              {(person.gname.length > 0 ||\n                person.sname.length > 0 ||\n                person.email.length > 0 ||\n                person.mobile.length > 0) && (\n                <Link onClick={downloadVcf}>VCF card</Link>\n              )}\n              {person.gname.length === 0 &&\n                person.sname.length === 0 &&\n                person.email.length === 0 &&\n                person.mobile.length === 0 && (\n                  <Text fontSize=\"1xl\" color=\"gray.600\">\n                    VCF card hidden\n                  </Text>\n                )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b>Tags</b>\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <StarIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text color=\"white.500\" fontSize=\"1xl\">\n                {person.tags}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <InfoIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <HStack>\n                {person.flags & STATIC.FLA_FULLTIME && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    full time |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_PARTTIME && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    part time |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_CONTRACTS && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    contract |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_PROJECTS && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    projects |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_INVESTOR && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    investor |\n                  </Text>\n                )}\n                {person.flags & STATIC.FLA_STUDENT && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    student |\n                  </Text>\n                )}\n                {person.flags & STATIC.FLA_SCHOOL && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    school |\n                  </Text>\n                )}\n              </HStack>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text color=\"blue.500\" fontSize=\"sm\">\n                <b> QR Link</b>\n              </Text>\n            </Td>\n            <Td>\n              <QRCode\n                level=\"H\"\n                size=\"165\"\n                title=\"Youfoundme DID\"\n                fgColor=\"#FFFFFF\"\n                bgColor=\"#000000\"\n                value={'https://app.youfoundme.io/#/show/' + did}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              {showUnlink && (\n                <Button onClick={unlink} disabled={!enableConnect}>\n                  Unlink\n                </Button>\n              )}\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\n\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Text,\n  Button,\n  HStack,\n  Input,\n  Heading,\n  Container,\n  AlertIcon,\n  Box,\n  Link as CHAKRALINK,\n  Image,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  CloseButton,\n  useAriaHidden,\n  Checkbox,\n  Td,\n  Tr,\n  Table,\n  Textarea,\n} from '@chakra-ui/react';\nimport { createSerializableStateInvariantMiddleware } from '@reduxjs/toolkit';\n\nimport * as Global from '../model/global';\nimport * as IPFS from '../io/ipfs_api';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\n\nexport default function Editor() {\n  // Authentication =============================\n\n  const [userLoaded, setUserLoaded] = useState(false);\n  const [did, setDid] = useState('');\n  const [pubkey, setPubkey] = useState('');\n  const [contract, setContract] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [teaser, setTeaser] = useState('');\n  const [img, setImg] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [tags, setTags] = useState('');\n  const [ref0, setRef0] = useState('');\n  const [ref1, setRef1] = useState('');\n  const [ref2, setRef2] = useState('');\n  const [location, setLocation] = useState('');\n  const [metaverse, setMetaverse] = useState('');\n  const [status, setStatus] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [gname, setGname] = useState('');\n  const [sname, setSname] = useState('');\n  const [tokenURI, setTokenURI] = useState('');\n  const [metafile, setMetafile] = useState('');\n  const [flags, setFlags] = useState(0);\n  const [created, setCreated] = useState('');\n  const [magic, setMagic] = useState('');\n  const [pin, setPin] = useState('');\n  const [code, setCode] = useState('');\n  const [codeExpected, setCodeExpected] = useState('');\n  const [codeEmail, setCodeEmail] = useState('');\n  const [codeEmailExpected, setCodeEmailExpected] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [changeImage, setChangeImage] = useState(false);\n  const [changeAvatar, setChangeAvatar] = useState(false);\n  const [tokenid, setTokenid] = useState('');\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [mobilevalerror, setMobilevalerror] = React.useState('');\n  const [mobilevalidate, setMobilevalidate] = React.useState('Please validate');\n  const [emailvalidate, setEmailvalidate] = React.useState('Please validate');\n  const [mobileok, setMobileok] = React.useState('');\n  const [emailok, setEmailok] = React.useState('');\n  const [emailvalerror, setEmailvalerror] = React.useState('');\n  const [showValidateboxEmail, setShowValidateboxEmail] = useState(false);\n  const [showValidatebox, setShowValidatebox] = useState(false);\n\n  // Search\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n\n  const onDelete = () => {\n    setIsOpen(false);\n  };\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const validateEmail = async () => {\n    if (codeEmail != codeEmailExpected) {\n      setEmailvalerror('code not valid');\n      setEmailok('');\n      return;\n    }\n\n    setEmailok('');\n    setEmailvalerror('');\n    setShowValidateboxEmail(false);\n\n    var old = parseInt(flags);\n    var newFlage = old | STATIC.FLA_EMAILCONFIRMED;\n    var person = getPerson();\n    person.flags = newFlage.toString();\n\n    // Write to Db\n    Global.updateMePerson(person); // TODO Why can't we use handle, wehat resets flag?\n    setFlags(newFlage);\n  };\n\n  const validateMobile = async () => {\n    if (code != codeExpected) {\n      setMobilevalerror('code not valid');\n      setMobileok('');\n      return;\n    }\n\n    setMobileok('');\n\n    setMobilevalerror('');\n    setShowValidatebox(false);\n\n    var old = parseInt(flags);\n    var newFlage = old | STATIC.FLA_SMSCONFIRMED;\n    var person = getPerson();\n    person.flags = newFlage.toString();\n\n    // Write to Db\n    Global.updateMePerson(person); // TODO Why can't we use handle, wehat resets flag?\n    setFlags(newFlage);\n  };\n\n  const sendSMS = async () => {\n    setShowValidatebox(true);\n    API.sendSMS(mobile).then((codeexpected) => {\n      setCodeExpected(codeexpected);\n      setMobileok('Please check your mobile');\n      setMobilevalidate('');\n    });\n  };\n\n  const sendEmail = async () => {\n    setShowValidateboxEmail(true);\n\n    API.sendEmail(email).then((codeexpected) => {\n      setCodeEmailExpected(codeexpected);\n      setEmailok('Please check your email');\n      setEmailvalidate('');\n    });\n  };\n\n  const setCheckbox = (checked, perm) => {\n    if (checked) {\n      setFlags(flags | perm);\n    } else {\n      setFlags(flags ^ perm);\n    }\n  };\n\n  const flip = () => {\n    setChangeImage(!changeImage);\n  };\n\n  const flip2 = () => {\n    setChangeAvatar(!changeAvatar);\n  };\n\n  const createAvatar = () => {\n    handleSave();\n    navigate('/avatar');\n  };\n\n  const getPerson = () => {\n    var person = {};\n    person.did = did;\n    person.pubkey = pubkey.toLowerCase();\n    person.contract = contract.toLowerCase();\n    person.username = username;\n    person.jobtitle = jobtitle;\n    person.teaser = teaser;\n    person.img = img;\n    person.avatar = avatar;\n    person.tags = tags;\n    person.ref0 = ref0;\n    person.ref1 = ref1;\n    person.ref2 = ref2;\n    person.metaverse = metaverse;\n    person.location = location;\n    person.status = status;\n    person.email = email;\n    person.mobile = mobile;\n    person.gname = gname;\n    person.sname = sname;\n    person.metafile = metafile;\n    person.flags = flags.toString();\n    person.created = created;\n    person.magic = magic;\n    person.pin = pin;\n    return person;\n  };\n\n  const setPerson = (person) => {\n    setDid(person.did);\n    setPubkey(person.pubkey);\n    setContract(person.contract);\n    setUsername(person.username);\n    setJobtitle(person.jobtitle);\n    setTeaser(person.teaser);\n    setImg(person.img);\n    setAvatar(person.avatar);\n    setTags(person.tags);\n    setRef0(person.ref0);\n    setRef1(person.ref1);\n    setRef2(person.ref2);\n    setMetaverse(person.metaverse);\n    setLocation(person.location);\n    setStatus(person.status);\n    setEmail(person.email);\n    setMobile(person.mobile);\n    setGname(person.gname);\n    setSname(person.sname);\n    setMetafile(person.metafile);\n    setFlags(parseInt(person.flags));\n    setCreated(person.created);\n    setMagic(person.magic);\n    setPin(person.pin);\n  };\n\n  const saveNFT = async () => {\n    var tokenId = HELPER.TokenIdFromPubkey(pubkey);\n    console.log(did);\n    console.log(tokenId);\n    // Create new Metada\n    const meta = HELPER.CreateMetafile(\n      did,\n      tokenId,\n      img,\n      avatar,\n      username,\n      jobtitle,\n      teaser\n    );\n    console.log(meta);\n    var file = new Moralis.File('meta.json', { base64: btoa(meta) });\n    await file.saveIPFS();\n\n    var hash = file.hash();\n    console.log(hash);\n\n    //var linkMeta = STATIC.PINATA_IPFS + hash;\n    var linkMeta = file.ipfs();\n    setMetafile(linkMeta);\n    console.log(linkMeta);\n\n    // the meta file has not changed, no need to update\n    if (tokenURI == linkMeta) {\n      //return; // TODO back in !!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    }\n    setTokenURI(linkMeta);\n\n    // Does the NFT exist\n    var tokenId = HELPER.TokenIdFromPubkey(pubkey);\n\n    setStatusMessage('metafile saved ' + tokenId);\n    setErrorMessage('');\n\n    WEB3.ownerOf(Moralis, tokenId)\n      .then((owner) => {\n        if (owner.toLowerCase() == pubkey.toLowerCase()) {\n          //  update NFT\n          WEB3.setTokenURI(Moralis, pubkey, tokenId, linkMeta)\n            .then((rep) => {\n              handleSave();\n\n              // Report\n              setStatusMessage('NFT updated');\n              setErrorMessage('');\n            })\n            .catch((e) => {\n              console.log(e);\n              setStatusMessage('');\n              setErrorMessage('NFT update failed');\n              // TODO inform user of failure\n            });\n        } else {\n          setStatusMessage('');\n          setErrorMessage('NFT belongs to a different user');\n          return;\n        }\n      })\n      .catch((e) => {\n        if (HELPER.kmpSearch('' + e, 'nonexistent') > 0) {\n          // NFT does nont exist\n          var voucher = {\n            tokenId: tokenId,\n            minPrice: STATIC.DID_PRICE_AVAX,\n            uri: linkMeta,\n            username: username,\n            key: 'KEY_PRIV_DEV0',\n            contract: STATIC.CONTRACT_ADDRESS_FUJI,\n          };\n          API.SignVoucher(voucher)\n            .then((signedVoucher) => {\n              WEB3.redeem(Moralis, user.get('ethAddress'), signedVoucher)\n                .then((rep) => {\n                  console.log(rep);\n\n                  // TODO inform user of success\n                  // Update Db\n                  setCreated(Date.now().toString());\n                  setFlags(flags | STATIC.FLA_MINTED);\n                  handleSave();\n                  setStatusMessage('NFT minted');\n                  setErrorMessage('');\n                })\n                .catch((e) => {\n                  console.log(e);\n                  // TODO inform user of failure\n                  setStatusMessage('');\n                  setErrorMessage('NFT minting failed');\n                });\n            })\n            .catch((e) => {\n              console.log(e);\n              setStatusMessage('');\n              setErrorMessage('NFT minting failed, voucher not signed');\n            });\n        }\n      });\n  };\n\n  const handleSave = async (e) => {\n    // check if email or SMS changed\n    var personNew = getPerson();\n    var personOld = Global.getMe();\n    if (personNew.mobile != personOld.mobile) {\n      personNew.flags = (\n        parseInt(personNew.old) ^ STATIC.FLA_SMSCONFIRMED\n      ).toString();\n      setFlags(flags ^ STATIC.FLA_SMSCONFIRMED);\n    }\n    if (personNew.email != personOld.email) {\n      personNew.flags = (\n        parseInt(personNew.old) ^ STATIC.FLA_EMAILCONFIRMED\n      ).toString();\n      setFlags(flags ^ STATIC.FLA_EMAILCONFIRMED);\n    }\n    Global.updateMePerson(personNew);\n  };\n\n  const onImageDrop = (event) => {\n    var data = event.target.files[0];\n    var file = new Moralis.File(data.name, data);\n    file\n      .saveIPFS()\n      .then(() => {\n        var linkMeta = file.ipfs();\n        setImg(linkMeta);\n        setChangeImage(false);\n        setStatusMessage('Image Uploaded');\n        setErrorMessage('');\n      })\n      .catch((e) => {\n        setStatusMessage('');\n        setErrorMessage('Image upload failed');\n      });\n  };\n\n  const onAvatarDrop = (event) => {\n    var data = event.target.files[0];\n    var file = new Moralis.File(data.name, data);\n    file\n      .saveIPFS()\n      .then(() => {\n        var linkMeta = file.ipfs();\n        setImg(linkMeta);\n        setChangeAvatar(false);\n        setStatusMessage('Image Uploaded');\n        setErrorMessage('');\n      })\n      .catch((e) => {\n        setStatusMessage('');\n        setErrorMessage('Image upload failed');\n      });\n  };\n\n  // http://localhost:3000/editor?did=did:yfm:0x345879b60bf5ccddd06bc91e49a6ebc4e93cfdaa&url=https://d1a370nemizbjq.cloudfront.net/9a03fcc1-e9e3-435e-9b91-daca8f135597.glb\n  useEffect(() => {\n    Global.setAppstate('pagestate', 'EDIT');\n    if (did != Global.getMe().did) {\n      setPerson(Global.getMe());\n    }\n  });\n\n  // not sogned in =======================================================================================\n  if (!Global.getAppState().connected) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Me Editor</Heading>\n            <br />\n            <Text>\n              Please connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamaski.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  // Check user exists\n\n  // signed in =======================================================================================\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container>\n        <Heading>Edit Profile</Heading>\n        <br />\n        <HStack>\n          <Text fontSize=\"xs\">DID: </Text>\n          <Text fontSize=\"xs\">{did}</Text>\n        </HStack>\n        <HStack>\n          <Text fontSize=\"xs\">Public key: </Text>\n          <Text fontSize=\"xs\">{pubkey} </Text>\n        </HStack>\n        <HStack>\n          <Text fontSize=\"xs\">Contract: </Text>\n          <Text fontSize=\"xs\">{contract} - Avalanche FUJI</Text>\n        </HStack>\n        <CHAKRALINK href={metafile} isExternal>\n          <HStack>\n            <Text fontSize=\"xs\">Metafile:</Text>\n            <Text fontSize=\"xs\">{metafile}</Text>\n            <ExternalLinkIcon fontSize=\"xs\" color=\"blue.500\" />\n          </HStack>\n        </CHAKRALINK>\n        <HStack>\n          <HStack>\n            <Text fontSize=\"xs\">Token:</Text>\n            <Text fontSize=\"xs\">{tokenid}</Text>\n          </HStack>\n        </HStack>\n        <br />\n        <HStack>\n          {!(flags & STATIC.FLA_MINTED) && (\n            <Button size=\"lg\" onClick={saveNFT}>\n              Create NFT\n            </Button>\n          )}\n          {flags & STATIC.FLA_MINTED && (\n            <Button size=\"lg\" onClick={saveNFT}>\n              Update NFT\n            </Button>\n          )}\n          <Text fontSize=\"xs\">\n            Costs: NFT creation: 0.25 AVAX, updates are free\n            <br />+ transaction costs. Writes data to the Blockchain\n          </Text>\n        </HStack>\n        <br />\n        <HStack>\n          <Button size=\"lg\" onClick={handleSave}>\n            Save\n          </Button>\n          <Text fontSize=\"xs\">\n            Saving to youfoundme Db is free, but does not update on-chain data.\n          </Text>\n        </HStack>\n        <HStack>\n          <Text color=\"green.500\" fontSize=\"xs\">\n            {statusMessage}\n          </Text>\n        </HStack>\n        <HStack>\n          <Text color=\"red.500\" fontSize=\"xs\">\n            {errorMessage}\n          </Text>\n        </HStack>\n        <br />\n        <Heading>{username}</Heading>\n        {img.length > 0 && (\n          <Image boxSize=\"140\" src={img} objectFit=\"cover\" alt={username} />\n        )}\n        <CHAKRALINK color=\"teal.500\" onClick={flip}>\n          Change Image\n        </CHAKRALINK>\n        {changeImage && (\n          <Input type=\"file\" name=\"file\" onChange={onImageDrop} />\n        )}\n        <HStack>\n          <CHAKRALINK href={img} isExternal>\n            <HStack>\n              <Text fontSize=\"xs\">{img}</Text>\n              <ExternalLinkIcon />\n            </HStack>\n          </CHAKRALINK>\n        </HStack>\n        <br />\n        <CHAKRALINK color=\"teal.500\" onClick={flip2}>\n          Upload existing avatar (.glb)\n        </CHAKRALINK>\n        &nbsp;or &nbsp;\n        <CHAKRALINK color=\"teal.500\" onClick={() => createAvatar()}>\n          create new avatar with readyplayer.me\n        </CHAKRALINK>\n        {changeAvatar && (\n          <Input type=\"file\" name=\"file\" onChange={onAvatarDrop} />\n        )}\n        <HStack>\n          <CHAKRALINK href={avatar} isExternal>\n            <HStack>\n              <Text fontSize=\"xs\">{avatar}</Text>\n              <ExternalLinkIcon />\n            </HStack>\n          </CHAKRALINK>\n        </HStack>\n        <br />\n        <Heading>Professional Section</Heading>\n        <Table style={{ paddingLeft: '0px', paddingRight: '0px' }}>\n          <Tr>\n            <Td width=\"20px\">\n              <Text>jobtitle: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"jobtitle\"\n                fontSize=\"1xl\"\n                value={jobtitle}\n                onChange={(e) => setJobtitle(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>teaser: </Text>\n            </Td>\n            <Td>\n              <Textarea\n                placeholder=\"teaser\"\n                fontSize=\"1xl\"\n                value={teaser}\n                onChange={(e) => setTeaser(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>tags: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"tags\"\n                fontSize=\"1xl\"\n                value={tags}\n                onChange={(e) => setTags(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>ref0: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Your company\"\n                fontSize=\"1xl\"\n                value={ref0}\n                onChange={(e) => setRef0(e.target.value)}\n              />\n              <CHAKRALINK color=\"teal.500\" href={ref0} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>ref1: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Linkedin\"\n                fontSize=\"1xl\"\n                value={ref1}\n                onChange={(e) => setRef1(e.target.value)}\n              />\n              <CHAKRALINK color=\"teal.500\" href={ref1} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>ref2: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Github\"\n                fontSize=\"1xl\"\n                value={ref2}\n                onChange={(e) => setRef2(e.target.value)}\n              />\n              <CHAKRALINK color=\"teal.500\" href={ref2} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n\n          {/* Location Section */}\n          <Tr>\n            <Td colSpan=\"2\">\n              <Heading>Location Status</Heading>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text>Location: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"location\"\n                fontSize=\"1xl\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n              <CHAKRALINK\n                color=\"teal.500\"\n                href={location}\n                fontSize=\"xs\"\n                isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Metaverse: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"metaverse\"\n                fontSize=\"1xl\"\n                value={metaverse}\n                onChange={(e) => setMetaverse(e.target.value)}\n              />\n              <CHAKRALINK\n                color=\"teal.500\"\n                href={metaverse}\n                fontSize=\"xs\"\n                isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td colSpan=\"2\">\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_LOCATION) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_LOCATION)\n                  }\n                />\n                <Text>Hide my location</Text>\n              </HStack>\n            </Td>\n          </Tr>\n\n          {/* Contact Section */}\n          <Tr>\n            <Td colSpan=\"2\">\n              <Heading>Contact</Heading>\n              <Text fontSize=\"xs\" color=\"teal.500\">\n                Contact details are not shown in search results. We will contact\n                you by email, if a user likes to connect with you. You decide if\n                you like to share your contact details.\n              </Text>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text>Email: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"email\"\n                fontSize=\"1xl\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {!(flags & STATIC.FLA_EMAILCONFIRMED) && (\n                <CHAKRALINK\n                  color=\"red.500\"\n                  onClick={sendEmail}\n                  fontSize=\"xs\"\n                  isExternal>\n                  {emailvalidate}\n                </CHAKRALINK>\n              )}\n              <Text fontSize=\"xs\" color=\"green.500\">\n                {emailok}\n              </Text>\n              {showValidateboxEmail && (\n                <HStack>\n                  <Input\n                    placeholder=\"6 digit code\"\n                    fontSize=\"1xl\"\n                    value={codeEmail}\n                    onChange={(e) => setCodeEmail(e.target.value)}\n                  />\n                  <Button onClick={validateEmail}>validate</Button>\n                </HStack>\n              )}\n              <Text fontSize=\"xs\" color=\"red.500\">\n                {emailvalerror}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Mobile: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"+  mobile\"\n                fontSize=\"1xl\"\n                value={mobile}\n                onChange={(e) => setMobile(e.target.value)}\n              />\n              {!(flags & STATIC.FLA_SMSCONFIRMED) && (\n                <HStack>\n                  <CHAKRALINK\n                    color=\"red.500\"\n                    onClick={sendSMS}\n                    fontSize=\"xs\"\n                    isExternal>\n                    {mobilevalidate}\n                  </CHAKRALINK>\n                  <Text fontSize=\"xs\" color=\"green.500\">\n                    {mobileok}\n                  </Text>\n                </HStack>\n              )}\n              {showValidatebox && (\n                <HStack>\n                  <Input\n                    placeholder=\"6 digit code\"\n                    fontSize=\"1xl\"\n                    value={code}\n                    onChange={(e) => setCode(e.target.value)}\n                  />\n                  <Button onClick={validateMobile}>validate</Button>\n                </HStack>\n              )}\n              <Text fontSize=\"xs\" color=\"red.500\">\n                {mobilevalerror}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Name: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"first name\"\n                fontSize=\"1xl\"\n                value={gname}\n                onChange={(e) => setGname(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Surname: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"last name\"\n                fontSize=\"1xl\"\n                value={sname}\n                onChange={(e) => setSname(e.target.value)}\n              />\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td colSpan=\"2\">\n              {/* Privacy Flags ===================================================================================*/}\n              <Heading>Privacy</Heading>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_FULLTIME) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_FULLTIME)\n                  }\n                />\n                <Text>I am looking for full time employment</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_PARTTIME) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_PARTTIME)\n                  }\n                />\n                <Text>I am looking for part time jobs</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_CONTRACTS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_CONTRACTS)\n                  }\n                />\n                <Text>I am available for contract work</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_PROJECTS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_PROJECTS)\n                  }\n                />\n                <Text>I am open to projects and collaborations</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_INVESTOR) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_INVESTOR)\n                  }\n                />\n                <Text>I am an investor or recruiter</Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_SCHOOL) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_SCHOOL)\n                  }\n                />\n                <Text>I am going to school</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_STUDENT) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_STUDENT)\n                  }\n                />\n                <Text>I am a student</Text>\n              </HStack>\n              <br />\n\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_REFERENCES) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_REFERENCES)\n                  }\n                />\n                <Text>Do not show my references</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_CONTACT) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_CONTACT)\n                  }\n                />\n                <Text>Do not request my contact details</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_ANONYMOUS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_ANONYMOUS)\n                  }\n                />\n                <Text>\n                  Do not show my profile at all, i prefer to be anonymous\n                </Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Button size=\"lg\" onClick={handleSave}>\n                  Save\n                </Button>\n                <Text fontSize=\"xs\"></Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Button\n                  size=\"lg\"\n                  colorScheme=\"red\"\n                  onClick={() => setIsOpen(true)}>\n                  Delete Account\n                </Button>\n\n                <AlertDialog\n                  isOpen={isOpen}\n                  leastDestructiveRef={cancelRef}\n                  onClose={onClose}>\n                  <AlertDialogOverlay>\n                    <AlertDialogContent>\n                      <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                        Delete my NFT\n                      </AlertDialogHeader>\n\n                      <AlertDialogBody>\n                        Are you sure? You can't undo this action afterwards.\n                      </AlertDialogBody>\n\n                      <AlertDialogFooter>\n                        <Button size=\"lg\" ref={cancelRef} onClick={onClose}>\n                          Cancel\n                        </Button>\n                        <Button\n                          size=\"lg\"\n                          colorScheme=\"red\"\n                          onClick={onDelete}\n                          ml={3}>\n                          Delete\n                        </Button>\n                      </AlertDialogFooter>\n                    </AlertDialogContent>\n                  </AlertDialogOverlay>\n                </AlertDialog>\n                <Text color=\"red.500\" fontSize=\"xs\">\n                  This cannot be undone, your NFT will be inaccessible.\n                  <br />\n                  Use a different wallet account if you like to re-register.\n                </Text>\n              </HStack>\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\n\nimport React, { useState, useEffect, forwardRef } from 'react';\nimport {\n  useNavigate,\n  useParams,\n  useSearchParams,\n  useLocation,\n} from 'react-router-dom';\n\nimport {\n  Center,\n  Heading,\n  Image,\n  Input,\n  Container,\n  Text,\n  Button,\n  HStack,\n  Link,\n  Table,\n  Tr,\n  Td,\n  Img,\n  Header,\n  VStack,\n  Avatar,\n  AvatarBadge,\n  AvatarGroup,\n  Box,\n  Spacer,\n  Flex,\n} from '@chakra-ui/react';\n\nimport { getAppState, loadPersonByPubKey, setAppstate } from '../model/global';\nimport { searchPerson, getPerson } from '../io/api';\nimport * as Global from '../model/global';\nimport * as Helper from '../model/helper';\nimport * as STATIC from '../model/static';\n\nconst Search = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchfield, setSearchfield] = useState('latest');\n  const search = useLocation().search;\n  const newTerm = new URLSearchParams(search).get('term');\n  const [scannedCount, setScannedCount] = useState(0);\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [showNext, setShowNext] = useState(false);\n\n  useEffect(() => {\n    const term = searchParams.get('term'); //query string\n    Global.setAppstate('pagestate', 'FIND');\n    if (Global.getAppState().firstSearch) {\n      if (term == '') {\n        Global.setAppstate('firstSearch', false);\n        Global.setAppstate('searchfield', '');\n        navigate('/search?term=latest');\n        return;\n      }\n    }\n\n    if (term != Global.getAppState().searchfield) {\n      Global.setAppstate('searchfield', term);\n      Global.setAppstate('position', 0);\n      setScannedCount(0);\n      setSearchfield(term);\n      startSearch();\n    }\n  });\n\n  const goSearch = (e) => {\n    Global.setAppstate('pagestate', 'FIND');\n    navigate('/search?term=' + searchfield);\n  };\n\n  const handleChange = (e) => {\n    setSearchfield(e.target.value);\n  };\n\n  //=============================================\n\n  const next = async () => {\n    var pos = Global.getAppState().position;\n    pos = pos + 10;\n    if (pos > Global.getAppState().scannedCount) {\n      pos = pos - 10;\n    }\n    Global.setAppstate('position', pos);\n    showPeople();\n  };\n\n  const prev = async () => {\n    var pos = Global.getAppState().position;\n    pos = pos - 10;\n    if (pos < 0) {\n      pos = 0;\n    }\n    Global.setAppstate('position', pos);\n    showPeople();\n  };\n\n  const startSearch = async () => {\n    const term = searchParams.get('term');\n\n    // return single person from DID\n    if (term.startsWith('did:yfm:')) {\n      navigate('/show/' + term);\n      return;\n    }\n\n    // search returned many\n    var data = await searchPerson(searchfield, 'none');\n    Global.setAppstate('searchResult', JSON.stringify(data.people));\n    Global.setAppstate('scannedCount', data.people.length);\n    showPeople();\n  };\n\n  const showPeople = () => {\n    var all = JSON.parse(Global.getAppState().searchResult);\n    var showArray = [];\n    var max = all.length - Global.getAppState().position;\n    if (max > 10) {\n      max = 10;\n      setShowNext(true);\n    } else {\n      setShowNext(false);\n    }\n    for (\n      var i = Global.getAppState().position;\n      i < Global.getAppState().position + max;\n      i = i + 1\n    ) {\n      showArray.push(all[i]);\n    }\n    setSearchResult(showArray);\n  };\n\n  const linkSelected = (did) => {\n    var linkShowLInk = '/show/' + did;\n    Global.setAppstate('did', did);\n    navigate(linkShowLInk);\n  };\n\n  if (Global.getAppState().scannedCount == 0) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <Container>\n          <VStack>\n            <Input\n              placeholder=\"Keywords, Username, DID or Tags\"\n              onChange={handleChange}\n              value={searchfield}\n            />\n            <Button onClick={goSearch}>Search</Button>\n          </VStack>\n          <br />\n          <Text color=\"teal.500\" fontSize=\"xs\">\n            No records found\n          </Text>\n        </Container>\n      </main>\n    );\n  }\n\n  if (searchResult.length == 0) {\n    // repopulate local state if we return\n    showPeople();\n  }\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container maxW=\"container.xl\">\n        <Center>\n          <VStack>\n            <Heading fontSize=\"4xl\">Search</Heading>\n\n            <Input\n              width=\"500px\"\n              size=\"lg\"\n              placeholder=\"Keywords, Username, DID or Tags, blank shows new members\"\n              onChange={handleChange}\n              value={searchfield}\n            />\n            <Box h=\"10px\" />\n            <Button leftmargin=\"50px\" size=\"lg\" onClick={goSearch}>\n              Search\n            </Button>\n          </VStack>\n        </Center>\n        <Box h=\"10px\" />\n        <Text color=\"teal.500\" fontSize=\"xs\">\n          pos: {Global.getAppState().position + 1}. - entries found:{'  '}\n          {Global.getAppState().scannedCount}\n        </Text>\n        <Table variant=\"simple\" width=\"100%\" border=\"0\" padding=\"0\" margin=\"0\">\n          <Tr>\n            <Td colSpan=\"2\">\n              <Flex>\n                {Global.getAppState().position > 0 && (\n                  <Box w=\"50px\">\n                    <Link color=\"blue.300\" onClick={() => prev()}>\n                      <Text>prev</Text>\n                    </Link>\n                  </Box>\n                )}\n                <Spacer />\n                {showNext && (\n                  <Box w=\"50px\">\n                    <Link color=\"blue.300\" onClick={() => next()}>\n                      {' '}\n                      <Text fontSize=\"1xl\">next</Text>\n                    </Link>\n                  </Box>\n                )}\n              </Flex>\n            </Td>\n          </Tr>\n          {Object.keys(searchResult).map((k, i) => {\n            let d = searchResult[k];\n            let fl = parseInt(d.flags);\n            return (\n              <Tr key={i}>\n                <Td wdith=\"150px\">\n                  <Link onClick={() => linkSelected(d.did)}>\n                    <Avatar\n                      name={d.username}\n                      boxSize=\"120px\"\n                      objectFit=\"cover\"\n                      src={d.img}\n                      alt={d.username}\n                    />\n                  </Link>\n                </Td>\n                <Td>\n                  <Table border=\"0\" padding=\"0\" margin=\"0\">\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          <Heading fontSize=\"6xl\">{d.username}</Heading>\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          <Text color=\"gray.300\" fontSize=\"3xl\">\n                            {d.jobtitle}\n                          </Text>\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          <Text color=\"gray.400\">{d.teaser}</Text>\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td colSpan=\"2\">\n                        <HStack>\n                          {fl & STATIC.FLA_FULLTIME && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              full time |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_PARTTIME && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              part time |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_CONTRACTS && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              contract |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_PROJECTS && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              projects |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_INVESTOR && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              investor |\n                            </Text>\n                          )}\n                          {fl & STATIC.FLA_STUDENT && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              student |\n                            </Text>\n                          )}\n                          {fl & STATIC.FLA_SCHOOL && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              school |\n                            </Text>\n                          )}\n                        </HStack>\n                      </Td>\n                    </Tr>\n                  </Table>\n                </Td>\n              </Tr>\n            );\n          })}\n          <Tr>\n            <Td colSpan=\"2\">\n              <Flex>\n                {Global.getAppState().position > 0 && (\n                  <Box w=\"50px\">\n                    <Link color=\"blue.300\" onClick={() => prev()}>\n                      prev\n                    </Link>\n                  </Box>\n                )}\n                <Spacer />\n                {showNext && (\n                  <Box w=\"50px\">\n                    <Link color=\"blue.300\" onClick={() => next()}>\n                      {' '}\n                      next\n                    </Link>\n                  </Box>\n                )}\n              </Flex>\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Home() {\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  navigate('/search?term=latest');\n\n  return (\n    <center>\n      <Container>\n        <Text>\n          Please connect your Wallet to sign in.\n          <br />\n          <br />\n          Please use&nbsp;\n          <a href=\"https://metamaski.io\" target=\"_blank\">\n            MetaMask&nbsp;\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />\n          </a>{' '}\n          or&nbsp;\n          <a href=\"https://walletconnect.com/\" target=\"_blank\">\n            Wallet Connect&nbsp;\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />\n          </a>\n          .\n        </Text>\n      </Container>\n    </center>\n  );\n}\n","/** @format */\nimport React, { useEffect, useState } from 'react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Heading,\n  Text,\n  Button,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Input,\n  Table,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport { getPersonByUserName } from '../io/api';\nimport { _toEscapedUtf8String } from 'ethers/lib/utils';\n\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\nimport * as GLOBAL from '../model/global';\n\nexport default function Register() {\n  const [username, setUsername] = useState('');\n\n  const [isUnique, setIsUnique] = useState(false);\n  const [isReserved, setIsReserved] = useState(false);\n\n  const [verified, SetVerified] = useState(false);\n  const navigate = useNavigate();\n\n  const [creation, setCreation] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [nameOk, setNameOk] = useState('');\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  // const isEmailValid = (val) => {\n  //   let regEmail =\n  //     /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  //   if (!regEmail.test(val)) {\n  //     return false;\n  //   }\n  //   return true;\n  // };\n\n  const check = async () => {\n    if (username.length < 2) {\n      setNameError('username minimum 2 letters');\n      setNameOk('');\n      return;\n    } else {\n      setNameError('');\n      setNameOk('checking...');\n      var person = await getPersonByUserName(username);\n      if (person.length > 0) {\n        setNameError('Username taken');\n        setNameOk('');\n        setIsUnique(false);\n        return;\n      }\n      setNameError('');\n      setNameOk('username available');\n      setIsUnique(true);\n    }\n  };\n\n  const reserve = () => {\n    if (username.length < 2) {\n      setNameError('username minimum 2 letters');\n      setNameOk('');\n      return;\n    } else {\n      setNameError('');\n\n      if (isUnique) {\n        setIsReserved(true);\n        setNameOk('reserved');\n\n        var pubkey = user.get('ethAddress');\n        var did = HELPER.DidFromPubkey(pubkey);\n\n        // Insert into Db\n        var person = {};\n        person.did = did;\n        person.pubkey = pubkey.toLowerCase();\n        person.contract = STATIC.CONTRACT_ADDRESS_FUJI;\n        person.username = username;\n        person.jobtitle = '';\n        person.teaser = '';\n        person.img =\n          'https://youfoundme.s3.eu-central-1.amazonaws.com/user/default.png';\n        person.avatar = '';\n        person.tags = '';\n        person.ref0 = '';\n        person.ref1 = '';\n        person.ref2 = '';\n        person.metaverse = '';\n        person.location = '';\n        person.status = '';\n        person.email = '';\n        person.mobile = '';\n        person.gname = '';\n        person.sname = '';\n        person.metafile = '';\n        person.flags = '0';\n        person.created = new Date().toString();\n        person.pin = '';\n        person.magic = '';\n        GLOBAL.updateMePerson(person);\n        navigate('/editor');\n      }\n    }\n  };\n\n  // const sendcode = () => {\n  //   if (!isEmailValid(email)) {\n  //     setCodeError('not a valid email');\n  //     setCodeOk('');\n  //   } else {\n  //     setCodeError('');\n  //     setCodeOk('Please check your email');\n  //     const code = (Math.floor(Math.random() * 10000) + 10000)\n  //       .toString()\n  //       .substring(1);\n  //     setCodeexpected(code);\n  //     API.sendVerifyEmail(email.toLocaleLowerCase(), code);\n  //   }\n  // };\n\n  // const verifyCode = () => {\n  //   if (code != codeexpected) {\n  //     setCodeError('code not valid');\n  //     setCodeOk('');\n  //   } else {\n  //     setCodeError('');\n  //     setCodeOk('verified');\n  //     SetVerified(true);\n  //   }\n  // };\n\n  // const moveon = () => {\n  //   if (!verified) {\n  //     return;\n  //   }\n\n  //   setCreation('Creating user...');\n\n  //   // TODO Db insert\n\n  //   // Navigate\n  // };\n\n  if (user == null) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Me Editor</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamaski.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  return (\n    <Container>\n      <Heading>Register</Heading>\n      <Table\n        variant=\"unstyled\"\n        style={{ padding: '0px', margin: '0px' }}\n        className=\"table-tiny\"\n        size=\"sm\"\n        width=\"100%\"\n        cellPadding=\"0\">\n        <Tr>\n          <Td>username</Td>\n          <Td width=\"400px\">\n            <Input\n              width=\"300px\"\n              placeholder=\"username (no spaces!)\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              isDisabled={isReserved}\n            />\n          </Td>\n          <Td width=\"100px\">\n            <HStack>\n              <Button isDisabled={isReserved} onClick={check}>\n                Check availability\n              </Button>\n              <Button isDisabled={!isUnique || isReserved} onClick={reserve}>\n                Reserve\n              </Button>\n            </HStack>\n          </Td>\n        </Tr>\n        <Tr>\n          <Td></Td>\n          <Td>\n            <Text color=\"red.500\">{nameError}</Text>\n            <Text color=\"green.500\">{nameOk}</Text>\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colSpan=\"3\">\n            <Text color=\"white.500\">Reserve your username today!</Text>\n            <br />\n            <Text color=\"gray.500\" t>\n              Your username will become permanent, when you create your NFT on\n              the next screen. It is not possible to change the username without\n              creating another NFT with a different wallet address, so choose\n              wisely.\n              <br />\n              <br />\n              Usernames are case sensitive, minimum 2 characters.\n            </Text>\n          </Td>\n        </Tr>\n      </Table>\n    </Container>\n  );\n}\n","/** @format */\nimport Frame, { FrameContextConsumer } from 'react-frame-component';\nimport axios from 'axios';\nimport useMessage from '@rottitime/react-hook-message-event';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Text,\n  Button,\n  HStack,\n  Input,\n  Heading,\n  Container,\n  AlertIcon,\n  Box,\n  Link as CHAKRALINK,\n  Image,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  CloseButton,\n  useAriaHidden,\n  Checkbox,\n  Td,\n  Tr,\n  Table,\n  Textarea,\n} from '@chakra-ui/react';\n\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport * as Global from '../model/global';\nimport * as IPFS from '../io/ipfs_api';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\n\n// Avatar https://youfoundme.s3.eu-central-1.amazonaws.com/matd.glb\nexport default function Avatar() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [pageLink, setPageLink] = useState('');\n  const [avataruri, setAvataruri] = useState('');\n\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const script = document.createElement('script');\n\n  script.src = 'https://use.typekit.net/foobar.js';\n  script.async = true;\n\n  document.body.appendChild(script);\n\n  useEffect(() => {});\n\n  const saveAvatar = async () => {\n    var privKey = await user.get('ethAddress');\n    var uri = document.getElementById('avatarUrl').value;\n    var person = Object.assign({}, Global.getMe());\n    person.avatar = uri;\n    Global.updateMePerson(person);\n    navigate('/editor');\n  };\n\n  return (\n    <center>\n      <Container>\n        <HStack>\n          <Input\n            hidden\n            id=\"avatarUrl\"\n            value={avataruri}\n            onChange={(e) => setAvataruri(e.target.value)}></Input>\n          <Button hidden id=\"btnuse\" onClick={saveAvatar}>\n            Use avatar\n          </Button>\n        </HStack>\n      </Container>\n      <iframe\n        id=\"iframe\"\n        height=\"800\"\n        width=\"1200\"\n        class=\"content\"\n        allow=\"camera *; microphone *\"\n        src=\"https://youfoundme.readyplayer.me/\"></iframe>\n    </center>\n  );\n}\n","/** @format */\nimport React, { useEffect, useState } from 'react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Heading,\n  Textarea,\n  Text,\n  Button,\n  Container,\n  Image,\n  Link,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Input,\n  Table,\n  HStack,\n  VStack,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getPersonByUserName } from '../io/api';\nimport { _toEscapedUtf8String } from 'ethers/lib/utils';\n\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\nimport * as GLOBAL from '../model/global';\n\nexport default function Connect() {\n  const [message, setMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [img, setImage] = useState('');\n  const [email, setEmail] = useState('');\n  const [errormsg, setErrormsg] = useState('');\n  const [okmsg, setOkmsg] = useState('');\n\n  const [isSendDiabled, setIsSendDisabled] = useState(false);\n\n  var { did } = useParams();\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const send = () => {\n    if (message.length < 2) {\n      setErrormsg('Please add a message');\n      setOkmsg('');\n      return;\n    }\n\n    API.connect(\n      GLOBAL.getMe().pubkey,\n      HELPER.PubkeyFromDid(did),\n      GLOBAL.getMe().username,\n      message\n    );\n    setErrormsg('');\n    setOkmsg('Your message has been sent');\n    setIsSendDisabled(true);\n  };\n\n  useEffect(() => {\n    var pubkey = HELPER.PubkeyFromDid(did);\n    var person = GLOBAL.getYou();\n    setUsername(person.username);\n    setImage(person.img);\n    setEmail(person.email);\n    setJobtitle(person.jobtitle);\n  });\n\n  if (user == null) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Conntact</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamaski.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  var placeholder = 'Hi ' + username + ',\\n\\nwould you be interested in.... ';\n  return (\n    <Container>\n      <Heading>{username}</Heading>\n\n      <Image boxSize=\"150\" objectFit=\"cover\" alt={username} src={img}></Image>\n      <Box w=\"10px\" />\n      <Text>{jobtitle}</Text>\n\n      <Box h=\"10px\"></Box>\n      <Textarea\n        h=\"400px\"\n        placeholder={placeholder}\n        onChange={(e) => setMessage(e.target.value)}>\n        {message}\n      </Textarea>\n      <Box h=\"10px\"></Box>\n      <Button onClick={send} disabled={isSendDiabled}>\n        Send message\n      </Button>\n      <Text color=\"red.500\" fontSize=\"xs\">\n        {errormsg}\n      </Text>\n      <Text color=\"green.500\" fontSize=\"xs\">\n        {okmsg}\n      </Text>\n      <Box h=\"10px\" />\n      <Text fontSize=\"xs\" color=\"teal.500\">\n        Get in touch with {username}, we will pass your details on to {username}{' '}\n        and email you back with contact details.\n      </Text>\n    </Container>\n  );\n}\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link,\n  HStack,\n  Box,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport * as GLOBAL from '../model/global';\n\nexport default function Message() {\n  const [connectionUser, setConnectionUser] = useState('Matd');\n  const [connectionDid, setConnectionDid] = useState(\n    'did:yfm:0x345879B60BF5ccDDd06BC91E49A6eBc4e93CfDAa'\n  );\n  const [isConnected, setIsConnected] = useState(false);\n\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const closeNow = () => {\n    window.close();\n  };\n\n  const visit = () => {\n    navigate('/show/' + connectionDid);\n  };\n\n  useEffect(() => {\n    if (user) {\n      setIsConnected(true);\n      if (GLOBAL.getAppState().token == '') {\n      }\n    }\n  });\n\n  return (\n    <Container>\n      <Heading>Message</Heading>\n      <br />\n      <Text>Thank you, {connectionUser} is a new connection.</Text>\n      <br />\n      <br />\n      <Button onClick={visit}>View Matd</Button>\n\n      {!isConnected && (\n        <Text fontSize=\"xs\" color=\"blue.500\">\n          To access your new contact please login first.\n        </Text>\n      )}\n    </Container>\n  );\n}\n","/** @format */\n\nimport React from 'react';\nimport App from './App';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport { MoralisProvider } from 'react-moralis';\nimport { render, ReactDOM } from 'react-dom';\nimport { HashRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Show from './routes/show';\nimport Editor from './routes/editor';\nimport Search from './routes/search';\nimport Home from './routes/home';\nimport Register from './routes/register';\nimport Avatar from './routes/avatar';\nimport Connect from './routes/connect';\nimport Message from './routes/message';\nimport * as GLOBAL from './model/global';\nimport * as STATIC from './model/static';\nimport '@fontsource/noto-sans/700.css';\n\nconst theme = extendTheme({\n  fonts: {\n    heading: 'Noto Sans',\n    body: 'Noto Sans',\n  },\n  config: {\n    initialColorMode: 'dark',\n  },\n});\n\n// Moralis const TODO chain change?\nconst serverUrl = 'https://xhuajeqb4esg.usemoralis.com:2053/server';\nconst appId = 'EKKcMCLp0U2o6l5xCNbuvZmmjCKkyRThrBqzEj9Z';\nconst rootElement = document.getElementById('root');\n\n// ==================================================================================\nrender(\n  <ChakraProvider theme={theme}>\n    <HashRouter basename={''}>\n      <MoralisProvider appId={appId} serverUrl={serverUrl}>\n        <Routes>\n          <Route path=\"/\" element={<App />} key={GLOBAL.getAppState().routeky}>\n            <Route\n              path=\"home\"\n              element={<Home />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              index\n              element={<Home />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"show/:did\"\n              element={<Show />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"editor\"\n              element={<Editor />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"search\"\n              element={<Search />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"register\"\n              element={<Register />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"avatar\"\n              element={<Avatar />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"connect/:did\"\n              element={<Connect />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"message/:msg\"\n              element={<Message />}\n              key={GLOBAL.getAppState().routeky}\n            />\n          </Route>\n        </Routes>\n      </MoralisProvider>\n    </HashRouter>\n  </ChakraProvider>,\n  rootElement\n);\n"],"sourceRoot":""}