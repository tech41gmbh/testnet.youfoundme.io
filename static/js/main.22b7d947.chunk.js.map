{"version":3,"sources":["model/static.js","io/api.js","model/global.js","model/helper.js","App.js","io/abis.js","io/web3_api.js","routes/show.jsx","routes/editor.jsx","routes/search.jsx","routes/home.jsx","routes/register.jsx","routes/avatar.jsx","routes/connect.jsx","routes/message.jsx","index.js"],"names":["CONTRACT_ADDRESS_FUJI","VERSION","VERSION_YEAR","FLA_STUDENT","FLA_MINTED","FLA_INVESTOR","APIURL","me","you","a","token","GLOBAL","axios","get","headers","Authorization","res","data","permissions","status","sendEmail","email","code","getPerson","pubkey","url","getPersonByUserName","username","searchPerson","term","SignVoucher","voucher","SIGNERURL","post","postPerson","person","POSTPERSONURL","then","response","console","log","catch","error","sendSMS","mobile","from","to","usernameFrom","msg","encodeURIComponent","Person","types","model","did","contract","jobtitle","teaser","img","avatar","tags","ref0","ref1","ref2","metaverse","location","gname","sname","metafile","flags","created","pin","magic","actions","self","set","p","length","AppState","searchfield","isLoaded","searchResult","chainId","chainTitle","routeky","connected","key","val","alert","create","appState","store","map","getMe","getSnapshot","getYou","getAppState","API","loadMeByPubKey","setAppstate","updateMePerson","onSnapshot","snapshot","dir","TokenIdFromPubkey","pukey","Web3","utils","hexToNumberString","soliditySha3","CreateMetafile","tokenid","image","attr","meta","JSON","stringify","PubkeyFromDid","substr","toLowerCase","DidFromPubkey","MapChainId","chaindId","kmpSearch","text","pattern","lsp","i","j","charAt","push","App","isDesktop","useMediaQuery","query","useState","setChainId","setChainTitle","addr","setAddr","useClipboard","hasCopied","onCopy","setWeb3","navigate","useNavigate","search","useLocation","newTerm","URLSearchParams","isConnected","setIsConnected","isDone","setIsDone","goSearch","Global","searchlink","useMoralis","Moralis","isAuthenticating","isAuthenticated","authenticate","authError","logout","login","user","onConnect","accounts","runLogin","onDisconnect","onAccountsChanged","Helper","onChainChanged","chain","window","ethereum","parseInt","useEffect","currentUser","User","current","address","enableWeb3","_web3","sessionStorage","setItem","params","session","Cloud","run","LogonMetaMask","logonWalletConnect","provider","mobileLinks","enable","web3","err","logoutAll","blokexplorerAccount","linkSelected","viewSelected","linkShowLInk","style","padding","margin","width","top","position","size","variant","borderSpacing","m","fontSize","borderBottom","paddingBottom","onClick","align","isLoading","color","href","isExternal","marginBottom","marginLeft","colspan","STATIC","ABI_YOUFOUNDME","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","components","require","redeem","moralis","redeemer","eth","Contract","f","methods","send","value","Units","ETH","setTokenURI","tokenId","uri","ownerOf","call","Show","lastDid","setLastDid","setTokenid","setPerson","showConnect","setShowConnect","showUnlink","setShowUnlink","enableConnect","setEnableShowConnect","useParams","setIsLoaded","PERSON","HELPER","undefined","Object","keys","t","permission","showConnectButton","avatarlink","downloadVcf","element","document","createElement","content","Date","toISOString","file","Blob","URL","createObjectURL","download","body","appendChild","click","connect","link","showlink","startsWith","substring","boxSize","src","objectFit","alt","disabled","marginTop","wdith","level","title","fgColor","bgColor","Editor","setDid","setPubkey","setContract","setUsername","setJobtitle","setTeaser","setImg","setAvatar","setTags","setRef0","setRef1","setRef2","setLocation","setMetaverse","setStatus","setEmail","setMobile","setGname","setSname","setMetafile","setFlags","setCreated","setMagic","setPin","setCode","codeExpected","setCodeExpected","codeEmail","setCodeEmail","codeEmailExpected","setCodeEmailExpected","statusMessage","setStatusMessage","errorMessage","setErrorMessage","changeImage","setChangeImage","changeAvatar","setChangeAvatar","React","isOpen","setIsOpen","mobilevalerror","setMobilevalerror","mobilevalidate","setMobilevalidate","emailvalidate","setEmailvalidate","mobileok","setMobileok","emailok","setEmailok","emailvalerror","setEmailvalerror","showValidateboxEmail","setShowValidateboxEmail","showValidatebox","setShowValidatebox","useSearchParams","onClose","cancelRef","useRef","validateEmail","old","newFlage","toString","validateMobile","codeexpected","setCheckbox","checked","perm","saveNFT","File","base64","btoa","saveIPFS","hash","linkMeta","ipfs","WEB3","owner","rep","handleSave","e","minPrice","signedVoucher","now","personNew","personOld","onChange","event","target","files","paddingLeft","paddingRight","placeholder","isChecked","colorScheme","leastDestructiveRef","fontWeight","ref","ml","Search","setSearchResult","setSearchfield","parse","handleChange","startSearch","searchterm","trim","indexOf","people","border","k","d","fl","height","Home","Register","isUnique","setIsUnique","isReserved","setIsReserved","nameError","setNameError","nameOk","setNameOk","check","className","cellPadding","isDisabled","Avatar","avataruri","setAvataruri","script","async","saveAvatar","getElementById","assign","hidden","id","class","allow","Connect","message","setMessage","setImage","errormsg","setErrormsg","okmsg","setOkmsg","isSendDiabled","setIsSendDisabled","w","h","Message","connectionUser","connectionDid","theme","extendTheme","config","initialColorMode","rootElement","render","basename","appId","serverUrl","path","index"],"mappings":"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","file":"static/js/main.22b7d947.chunk.js","sourcesContent":["/** @format */\n\nexport const ENV = 'DEV';\n\n//export const CONTRACT_ADDRESS_FUJI_nousername = '0x1bF0e88467C48047FB24186DC9C724Ea4bA44aBd';\n\n// https://testnet.snowtrace.io/address/0xEe171c6302B01fE2b98D255e2D8A6C68282AfF0b\nexport const CONTRACT_ADDRESS_FUJI =\n  '0xEe171c6302B01fE2b98D255e2D8A6C68282AfF0b';\n\nexport const AVALANCHE_EXPLORER_FUJI = 'https://testnet.snowtrace.io/';\n\nexport const AVALANCHE_FUJI_CHAIN_ID = 43113;\nexport const AVALANCHE_MAIN_CHAIN_ID = 43114;\n\nexport const MORALIS_IPFS = 'https://ipfs.moralis.io:2053/';\nexport const PINATA_IPFS = 'https://gateway.pinata.cloud/ipfs/';\n\nconst NanoAvax = 1;\nconst MicroAvax = 1000 * NanoAvax;\nconst Schmeckle = 49 * MicroAvax + 463 * NanoAvax;\nconst MilliAvax = 1000 * MicroAvax;\nconst Avax = 1000 * MilliAvax;\nconst KiloAvax = 1000 * Avax;\nconst MegaAvax = 1000 * KiloAvax;\n\nexport const DID_PRICE_AVAX = 0.05 * MegaAvax;\n\nfunction convertAvax(amount) {\n  return parseInt(amount * 10 ** 18);\n}\n\nexport const VERSION = '0.0.1' + ' ' + ENV;\nexport const VERSION_YEAR = '2022';\n\n/*NanoAvax uint64 = 1\nMicroAvax uint64 = 1000 * NanoAvax\nSchmeckle uint64 = 49*MicroAvax + 463*NanoAvax\nMilliAvax uint64 = 1000 * MicroAvax\nAvax uint64 = 1000 * MilliAvax\nKiloAvax uint64 = 1000 * Avax\nMegaAvax uint64 = 1000 * KiloAvax\n*/\n\nexport const FLA_EMAILCONFIRMED = 1; // not NFT Meta\nexport const FLA_SMSCONFIRMED = 2; // not NFT Meta\nexport const FLA_FULLTIME = 4; // not NFT Meta\nexport const FLA_PARTTIME = 8; // not NFT Meta\nexport const FLA_CONTRACTS = 16; // not NFT Meta\nexport const FLA_PROJECTS = 32; // not NFT Meta\nexport const FLA_SCHOOL = 64; // Not NFT\nexport const FLA_STUDENT = 128; // Not NFT\nexport const FLA_LOCATION = 256; // Not NFT\nexport const FLA_REFERENCES = 512; // Hide References (Not NFT Meta)\nexport const FLA_CONTACT = 1024; // Disallow request of contact details (Not NFT)\nexport const FLA_ANONYMOUS = 2048; // Anonymous\nexport const FLA_MINTED = 4096; // User has an NFT\nexport const FLA_INVESTOR = 8192; // Investor\n\nexport const FLA_SPARE0 = 16384;\nexport const FLA_SPARE1 = 32768;\nexport const FLA_SPARE2 = 65536;\nexport const FLA_SPARE3 = 131072;\nexport const FLA_SPARE4 = 262144;\n","/** @format */\n\nimport axios from 'axios';\nimport * as GLOBAL from '../model/global';\nimport * as STATIC from '../model/static';\n\nvar APIURL = 'https://api.youfoundme.io/v0/';\nif (STATIC.ENV == 'DEV') {\n  APIURL = 'https://api-dev.youfoundme.io/v0/';\n}\n\n// https://api.tech41.de/yfm/v0/person/get/0x345879B60BF5ccDDd06BC91E49A6eBc4e93CfDAa\n\nexport async function getPermissions(me, you) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'perm2/get/' + me + '/' + you, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.permissions;\n}\n\nexport async function deletePermissions(me, you) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'perm2/del/' + me + '/' + you, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.status;\n}\n\nexport async function setPermissions(me, you) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'perm2/set/' + me + '/' + you, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.status;\n}\n\nexport async function sendEmail(email) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'email/verifyemail/' + email, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.code;\n}\n\nexport async function getPerson(pubkey) {\n  const GETPERSONURL = APIURL + 'person/get/';\n  const url = GETPERSONURL + pubkey;\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data;\n}\n\nexport async function getPersonByUserName(username) {\n  const GETPERSONURL = APIURL + 'person/getuser/';\n  const url = GETPERSONURL + username;\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data;\n}\n\nexport async function searchPerson(term) {\n  const GETPERSONURL = APIURL + 'person/search/';\n  const url = GETPERSONURL + term;\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(url, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data;\n}\n\nexport async function SignVoucher(voucher) {\n  const SIGNERURL = APIURL + 'signer';\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.post(\n    SIGNERURL,\n    {\n      voucher: voucher,\n    },\n    {\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n    }\n  );\n  return res.data;\n}\n\nexport async function postPerson(person) {\n  const POSTPERSONURL = APIURL + 'person/post/';\n  const token = GLOBAL.getAppState().token;\n  axios\n    .post(\n      POSTPERSONURL,\n      {\n        person: person,\n      },\n      {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      }\n    )\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport async function sendSMS(mobile) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(APIURL + 'sms/sendsms/' + mobile, {\n    headers: {\n      Authorization: 'Bearer ' + token,\n    },\n  });\n  return res.data.code;\n}\n\n// Not securees by JWT\nexport async function getJWT(username, did, session) {\n  let res = await axios.get(\n    APIURL + 'token/get/' + username + '/' + did + '/' + session\n  );\n  return res.data.token;\n}\n\nexport async function verifyJWT(token) {\n  let res = await axios.get(APIURL + 'token/validate/' + token);\n  return res.data.verified;\n}\n\nexport async function connect(from, to, usernameFrom, msg) {\n  const token = GLOBAL.getAppState().token;\n  let res = await axios.get(\n    APIURL +\n      'connect/' +\n      from +\n      '/' +\n      to +\n      '/' +\n      usernameFrom +\n      '/' +\n      encodeURIComponent(msg),\n    {\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n    }\n  );\n  return res.data;\n}\n","/** @format */\n\nimport { types, getSnapshot, onSnapshot } from 'mobx-state-tree';\nimport * as API from '../io/api.js';\n\nconst Person = types\n  .model({\n    did: '',\n    pubkey: '',\n    contract: '',\n    username: '',\n    jobtitle: '',\n    teaser: '',\n    img: '',\n    avatar: '',\n    tags: '',\n    ref0: '',\n    ref1: '',\n    ref2: '',\n    metaverse: '',\n    location: '',\n    status: '',\n    email: '',\n    mobile: '',\n    gname: '',\n    sname: '',\n    metafile: '',\n    flags: '',\n    created: '',\n    pin: '',\n    magic: '',\n  })\n  .actions((self) => ({\n    set(p) {\n      if (p == null || p.length < 10) {\n        return;\n      }\n      self.did = p.did;\n      self.pubkey = p.pubkey;\n      self.contract = p.contract;\n      self.username = p.username;\n      self.jobtitle = p.jobtitle;\n      self.avatar = p.avatar;\n      self.teaser = p.teaser;\n      self.img = p.img;\n      self.tags = p.tags;\n      self.ref0 = p.ref0;\n      self.ref1 = p.ref1;\n      self.ref2 = p.ref2;\n      self.metaverse = p.metaverse;\n      self.location = p.location;\n      self.status = p.status;\n      self.email = p.email;\n      self.mobile = p.mobile;\n      self.gname = p.gname;\n      self.sname = p.sname;\n      self.metafile = p.metafile;\n      self.flags = p.flags;\n      self.created = p.created;\n      self.magic = p.magic;\n      self.pin = p.pin;\n    },\n  }));\n\nconst AppState = types\n  .model({\n    searchfield: '',\n    did: '',\n    isLoaded: false,\n    searchResult: '',\n    chainId: 0,\n    chainTitle: 'unknown',\n    routeky: 0,\n    token: '',\n    connected: false,\n  })\n  .actions((self) => ({\n    set(key, val) {\n      switch (key) {\n        case 'routeky':\n          self.routeky = val;\n          break;\n\n        case 'did':\n          self.did = val;\n          break;\n\n        case 'searchfield':\n          self.searchfield = val;\n          break;\n\n        case 'isLoaded':\n          self.isLoaded = val;\n          break;\n\n        case 'searchResult':\n          self.searchResult = val;\n          break;\n\n        case 'chainId':\n          self.chainId = val;\n          break;\n\n        case 'chainTitle':\n          self.chainTitle = val;\n          break;\n\n        case 'token':\n          self.token = val;\n          break;\n\n        case 'connected':\n          self.connected = val;\n          break;\n\n        default:\n          alert('unknown key in appstate action ');\n          break;\n      }\n    },\n  }));\n\nconst me = Person.create();\nconst you = Person.create();\nconst appState = AppState.create();\n\nconst RootStore = types.model({\n  me: types.map(Person),\n  you: types.map(Person),\n  appState: types.map(AppState),\n});\n\n// create an instance from a snapshot\nconst store = RootStore.create({});\n\n// listen to new snapshots\nonSnapshot(store, (snapshot) => {\n  console.dir(snapshot);\n});\n\nexport function getMe() {\n  return getSnapshot(me);\n}\n\nexport function getYou() {\n  return getSnapshot(you);\n}\n\nexport function getAppState() {\n  return getSnapshot(appState);\n}\n\nexport async function loadYouByPubKey(pubkey) {\n  var p = await API.getPerson(pubkey);\n  you.set(p.person);\n  return p.person;\n}\n\nexport async function loadMeByPubKey(pubkey) {\n  var p = await API.getPerson(pubkey);\n  me.set(p.person);\n  return p.person;\n}\n\nexport async function setAppstate(key, val) {\n  appState.set(key, val);\n  return appState;\n}\n\nexport async function updateMePerson(person) {\n  me.set(person);\n  API.postPerson(person);\n  return me;\n}\n\nexport async function UpdateMePersonNoDbSave(person) {\n  me.set(person);\n  return me;\n}\n","/** @format */\nimport Web3 from 'web3';\nimport { getHasher, OutputType, HashType } from 'bigint-hash';\n\n//10196219370672644541601216188660491276260478785220810163497529090616   SHA3_224\n//96932911298637702523298034616076952241110591865517956290731622492456824546905\n// 82751696802861446618287329271326379553441206173434891033707984521910594309783\n// export function TokenIdFromDid(did) {\n//   return (\n//     '' +\n//     getHasher(HashType.SHA3_256)\n//       .update(Buffer.from(did.substr(8)))\n//       .digest(OutputType.BigInt)\n//   );\n// }\n\nexport function TokenIdFromPubkey(pukey) {\n  return Web3.utils.hexToNumberString(Web3.utils.soliditySha3(pukey));\n}\n\nexport function CreateMetafile(\n  did,\n  tokenid,\n  image,\n  avatar,\n  username,\n  jobtitle,\n  teaser\n) {\n  var attr = {};\n  attr['did'] = did;\n  attr['tokenid'] = tokenid;\n  attr['username'] = username;\n  attr['avatar'] = avatar;\n  attr['jobtitle'] = jobtitle;\n  attr['teaser'] = teaser;\n\n  var meta = {};\n  meta['name'] = did;\n  meta['description'] = 'Youfoundme DID, see https://youfoundme.io';\n  meta['image'] = image;\n  meta['external_url'] = 'https://youfoundme.io';\n  meta['attributes'] = attr;\n  return JSON.stringify(meta);\n}\n\nexport function createTextFileDownload(meta, name) {\n  const TextFile = (meta) => {\n    const element = document.createElement('a');\n    const file = new Blob([meta], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = name;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n}\n\nexport function PubkeyFromDid(did) {\n  return did.substr(8).toLowerCase();\n}\n\nexport function DidFromPubkey(pubkey) {\n  return 'did:yfm:' + pubkey.toLowerCase();\n}\n\nexport function MapChainId(chaindId) {\n  switch (chaindId) {\n    case 1:\n      return 'Ethereum Mainnet';\n\n    case 43113:\n      return 'Avalance Fuji';\n\n    case 43114:\n      return 'Avalance Main';\n\n    default:\n      return '';\n  }\n}\n\nexport function kmpSearch(text, pattern) {\n  if (pattern.length == 0) return 0; // Immediate match\n\n  // Compute longest suffix-prefix table\n  var lsp = [0]; // Base case\n  for (var i = 1; i < pattern.length; i++) {\n    var j = lsp[i - 1]; // Start by assuming we're extending the previous LSP\n    while (j > 0 && pattern.charAt(i) != pattern.charAt(j)) j = lsp[j - 1];\n    if (pattern.charAt(i) == pattern.charAt(j)) j++;\n    lsp.push(j);\n  }\n\n  // Walk through text string\n  var j = 0; // Number of chars matched in pattern\n  for (var i = 0; i < text.length; i++) {\n    while (j > 0 && text.charAt(i) != pattern.charAt(j)) j = lsp[j - 1]; // Fall back in the pattern\n    if (text.charAt(i) == pattern.charAt(j)) {\n      j++; // Next char matched, increment position\n      if (j == pattern.length) return i - (j - 1);\n    }\n  }\n  return -1; // Not found\n}\n","/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useMoralis } from 'react-moralis';\nimport {\n  Link as LINKCH,\n  HStack,\n  VStack,\n  Button,\n  Text,\n  Heading,\n  useClipboard,\n  Table,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useMediaQuery } from 'react-responsive';\nimport { CopyIcon, ExternalLinkIcon } from '@chakra-ui/icons';\nimport * as Global from './model/global';\nimport * as Helper from './model/helper';\nimport * as STATIC from './model/static';\nimport * as API from './io/api';\n//==========================================================================================\nexport default function App() {\n  const isDesktop = useMediaQuery({ query: '(min-width: 1537px)' });\n  const [chainId, setChainId] = useState(0);\n  const [chainTitle, setChainTitle] = useState('');\n  const [addr, setAddr] = useState('');\n  const [did, setDid] = useState('');\n  const { hasCopied, onCopy } = useClipboard(addr);\n  const [web3, setWeb3] = useState({});\n\n  const navigate = useNavigate();\n  const search = useLocation().search;\n  const newTerm = new URLSearchParams(search).get('term');\n\n  const [isConnected, setIsConnected] = useState(false);\n\n  const [isDone, setIsDone] = useState(false);\n\n  const goSearch = async () => {\n    var appState = Global.getAppState();\n    if (newTerm != null && newTerm.length > 0) {\n      Global.setAppstate('searchfield', newTerm);\n    }\n    var searchlink = '/search?term=' + appState.searchfield;\n    navigate(searchlink);\n  };\n\n  const location = useLocation();\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  // Moralis Events =================================================================\n  Moralis.onConnect(async (accounts) => {\n    runLogin();\n  });\n\n  Moralis.onDisconnect(async (accounts) => {\n    Global.setAppstate('connected', false);\n    setIsConnected(false);\n  });\n\n  Moralis.onAccountsChanged(async (accounts) => {\n    if (accounts[0] == null) {\n      return;\n    }\n    Global.loadMeByPubKey(accounts[0]);\n    Global.setAppstate('did', Helper.DidFromPubkey(accounts[0]));\n  });\n\n  Moralis.onChainChanged(async (chain) => {\n    if (window.ethereum) {\n      var chainId = parseInt(window.ethereum.chainId, 16);\n      // TODO check allowd chains...\n      setChainTitle(Helper.MapChainId(chainId));\n      Global.setAppstate('chainId', chainId);\n    }\n  });\n  // End Moralis Events =================================================================\n\n  useEffect(() => {\n    // run only once\n    if (isDone) {\n      return;\n    }\n    setIsDone(true);\n    if (user && Global.getAppState().token == '') {\n      runLogin();\n    }\n  });\n\n  const runLogin = async () => {\n    const currentUser = Moralis.User.current();\n    if (!currentUser) {\n      return;\n    }\n    var address = currentUser.get('ethAddress');\n    setAddr(address);\n    var did = Helper.DidFromPubkey(address);\n    var address;\n    Moralis.enableWeb3().then((_web3) => {\n      setWeb3(_web3);\n      if (window.ethereum) {\n        var chainId = parseInt(window.ethereum.chainId, 16);\n        setChainId(chainId);\n        setChainTitle(Helper.MapChainId(chainId));\n        Global.setAppstate('routeky', Global.getAppState().routeky + 1);\n        window.sessionStorage.setItem('sessionKey', address);\n        const params = {\n          username: currentUser.get('username'),\n          did: did,\n          session: currentUser.get('sessionToken'),\n        };\n        // TODO check if JWT exists and is valid in time\n        Moralis.Cloud.run('createToken', params).then((token) => {\n          Global.setAppstate('token', token);\n          Global.loadMeByPubKey(address).then(() => {\n            setIsConnected(true);\n            Global.setAppstate('connected', true);\n            setIsDone(false);\n          });\n        });\n      }\n    });\n  };\n\n  const LogonMetaMask = async () => {\n    Moralis.authenticate().then(function (user) {\n      runLogin();\n    });\n  };\n\n  //https://docs.moralis.io/moralis-server/users/crypto-login\n  const logonWalletConnect = async () => {\n    try {\n      authenticate({\n        provider: 'walletconnect',\n        mobileLinks: [\n          'rainbow',\n          'metamask',\n          'argent',\n          'trust',\n          'imtoken',\n          'pillar',\n        ],\n        chainId: 43113,\n      }).then(function (user) {\n        Moralis.Web3.enable({\n          provider: 'walletconntect',\n          chainId: 43113,\n        }).then(function (web3) {\n          runLogin();\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const logoutAll = async () => {\n    Global.setAppstate('token', '');\n    window.sessionStorage.setItem('sessionKey', '');\n    setIsConnected(false);\n    Global.setAppstate('connected', false);\n    logout();\n  };\n\n  var blokexplorerAccount = 'https://testnet.snowtrace.io/address/' + addr;\n\n  const linkSelected = () => {\n    var addr = user.get('ethAddress');\n    var did = Helper.DidFromPubkey(addr);\n    var viewlink = '/show/' + did;\n    navigate(viewlink);\n  };\n\n  const viewSelected = () => {\n    if (Global.getAppState().did) {\n      var linkShowLInk = '/show/' + Global.getAppState().did;\n      navigate(linkShowLInk);\n      return;\n    }\n    navigate('/search?term=' + Global.getAppState().searchfield);\n  };\n\n  if (!isDesktop) {\n    return (\n      <div\n        style={{\n          padding: '0',\n          margin: '0',\n          width: '100%',\n          top: '0px',\n          position: 'absolute',\n        }}>\n        <nav>\n          <center>\n            <Table\n              size=\"lg\"\n              variant=\"simple\"\n              style={{\n                borderSpacing: '0px',\n                p: '0',\n                m: '0',\n                width: '100%',\n              }}>\n              <Tr>\n                <Td width=\"100%\">\n                  <center>\n                    <Heading fontSize=\"3xl\">youfoundme.io</Heading>\n                  </center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td width=\"100%\">\n                  <center>\n                    {!isConnected && (\n                      <VStack>\n                        <HStack>\n                          <Button\n                            isLoading={isAuthenticating}\n                            onClick={() => logonWalletConnect()}>\n                            Wallet Connect\n                          </Button>\n                          &nbsp;&nbsp;\n                          <Button\n                            isLoading={isAuthenticating}\n                            onClick={() => LogonMetaMask()}>\n                            Metamask\n                          </Button>\n                        </HStack>\n                      </VStack>\n                    )}\n\n                    {isConnected && (\n                      <VStack>\n                        <HStack>\n                          <Button onClick={() => logoutAll()}>disconnet</Button>\n                          <LINKCH\n                            color=\"blue.500\"\n                            href=\"https://testnet.snowtrace.io/block/0x3b9197c2e27818ab344d1c567917e8c569850b5901926f1e777c0e505547a84e\"\n                            isExternal>\n                            <HStack align=\"flex-end\">\n                              <Text fontSize=\"xs\">\n                                {chainTitle} {chainId}\n                              </Text>\n                            </HStack>\n                          </LINKCH>\n                        </HStack>\n\n                        <HStack>\n                          <LINKCH onClick={() => linkSelected()}>\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              me\n                            </Text>\n                          </LINKCH>\n                          <LINKCH href={blokexplorerAccount} isExternal>\n                            <HStack>\n                              <Text fontSize=\"xs\">{addr}</Text>\n                              <ExternalLinkIcon\n                                fontSize=\"xs\"\n                                style={{\n                                  marginBottom: '4px',\n                                  marginLeft: '2px',\n                                }}\n                              />\n                            </HStack>\n                          </LINKCH>\n                        </HStack>\n                      </VStack>\n                    )}\n                  </center>\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td width=\"100%\">\n                  <center>\n                    <Button onClick={goSearch}>Find</Button>\n                    &nbsp;&nbsp;\n                    <Button onClick={() => viewSelected()}>View</Button>\n                    &nbsp;&nbsp;\n                    <Link to=\"/editor\">\n                      <Button>Me</Button>\n                    </Link>\n                  </center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Outlet />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <center>\n                    <Text color=\"green.500\" fontSize=\"xs\">\n                      ©{STATIC.VERSION_YEAR} TECH41 GmbH Berlin - Privacy Policy\n                      - Terms of Service\n                    </Text>\n                    <Text color=\"green.500\" fontSize=\"xs\">\n                      V: {STATIC.VERSION}\n                    </Text>\n                  </center>\n                </Td>\n              </Tr>\n            </Table>\n          </center>\n        </nav>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        padding: '0',\n        margin: '0',\n        width: '100%',\n        top: '0px',\n        position: 'absolute',\n      }}>\n      <nav>\n        <center>\n          <Table\n            size=\"lg\"\n            variant=\"simple\"\n            style={{\n              borderSpacing: '0px',\n              p: '0',\n              m: '0',\n              width: '100%',\n            }}>\n            <Tr>\n              <Td\n                style={{\n                  width: '20px',\n                }}>\n                <Heading fontSize=\"3xl\">youfoundme.io</Heading>\n              </Td>\n              <Td width=\"100%\">\n                <center>\n                  <nav\n                    style={{\n                      width: '100%',\n                      borderBottom: 'solid 0px',\n                      paddingBottom: '1rem',\n                    }}>\n                    <Button onClick={goSearch}>Find</Button>\n                    &nbsp;&nbsp;\n                    <Button onClick={() => viewSelected()}>View</Button>\n                    &nbsp;&nbsp;\n                    <Link to=\"/editor\">\n                      <Button>Me</Button>\n                    </Link>\n                  </nav>\n                </center>\n              </Td>\n              <Td width=\"20px\" align=\"right\">\n                <VStack align=\"flex-end\">\n                  {!isConnected && (\n                    <HStack align=\"flex-end\">\n                      <Button\n                        isLoading={isAuthenticating}\n                        onClick={() => logonWalletConnect()}>\n                        Wallet Connect\n                      </Button>\n                      <Button\n                        isLoading={isAuthenticating}\n                        onClick={() => LogonMetaMask()}>\n                        Metamask\n                      </Button>\n                    </HStack>\n                  )}\n                  {isConnected && (\n                    <VStack align=\"flex-end\">\n                      <HStack align=\"flex-end\">\n                        <LINKCH\n                          color=\"blue.500\"\n                          href=\"https://testnet.snowtrace.io/block/0x3b9197c2e27818ab344d1c567917e8c569850b5901926f1e777c0e505547a84e\"\n                          isExternal>\n                          <HStack align=\"flex-end\">\n                            <Text fontSize=\"xs\">\n                              {chainTitle} {chainId}\n                            </Text>\n                          </HStack>\n                        </LINKCH>\n                        <Button onClick={() => logoutAll()}>disconnet</Button>\n                      </HStack>\n\n                      <HStack align=\"flex-end\">\n                        <LINKCH onClick={() => linkSelected()}>\n                          <Text color=\"blue.500\" fontSize=\"xs\">\n                            me\n                          </Text>\n                        </LINKCH>\n                        <LINKCH href={blokexplorerAccount} isExternal>\n                          <HStack align=\"flex-end\">\n                            <Text fontSize=\"xs\">{addr}</Text>\n                            <ExternalLinkIcon\n                              fontSize=\"xs\"\n                              style={{ marginBottom: '4px', marginLeft: '2px' }}\n                            />\n                          </HStack>\n                        </LINKCH>\n                      </HStack>\n                    </VStack>\n                  )}\n                  ,\n                </VStack>\n              </Td>\n            </Tr>\n            <Tr>\n              <Td colspan=\"3\">\n                <Outlet />\n              </Td>\n            </Tr>\n            <Tr>\n              <Td colspan=\"3\">\n                <center>\n                  <Text color=\"green.500\" fontSize=\"xs\">\n                    ©{STATIC.VERSION_YEAR} TECH41 GmbH Berlin - Privacy Policy -\n                    Terms of Service - V: {STATIC.VERSION}\n                  </Text>\n                </center>\n              </Td>\n            </Tr>\n          </Table>\n        </center>\n      </nav>\n    </div>\n  );\n}\n","/** @format */\nexport const ABI_YOUFOUNDME = [\n  {\n    inputs: [\n      {\n        internalType: 'address payable',\n        name: 'minter',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'approved',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'previousAdminRole',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'newAdminRole',\n        type: 'bytes32',\n      },\n    ],\n    name: 'RoleAdminChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'RoleGranted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'RoleRevoked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'DEFAULT_ADMIN_ROLE',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MINTER_ROLE',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'availableToWithdraw',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getApproved',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getChainID',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n    ],\n    name: 'getRoleAdmin',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'username',\n        type: 'string',\n      },\n    ],\n    name: 'getTokenByUsername',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getUsername',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'grantRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'hasRole',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'ownerOf',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'redeemer',\n        type: 'address',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'tokenId',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'minPrice',\n            type: 'uint256',\n          },\n          {\n            internalType: 'string',\n            name: 'uri',\n            type: 'string',\n          },\n          {\n            internalType: 'string',\n            name: 'username',\n            type: 'string',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct YoufoundmeNFT.NFTVoucher',\n        name: 'voucher',\n        type: 'tuple',\n      },\n    ],\n    name: 'redeem',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'renounceRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'revokeRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '_data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'string',\n        name: 'uri',\n        type: 'string',\n      },\n    ],\n    name: 'setTokenURI',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'tokenURI',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","/** @format */\n\nimport { useMoralis } from 'react-moralis';\n\nimport { ABI_YOUFOUNDME } from './abis';\nimport * as STATIC from '../model/static';\n\nconst ethers = require('ethers');\n\n// '0xdE9C2EBbb5d42F094271e21A9F911A9A2F9E0a67'\nexport async function redeem(moralis, redeemer, voucher) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.redeem(redeemer, voucher);\n  return f.send({ from: redeemer, value: moralis.Units.ETH('0.05') });\n}\n\nexport async function setTokenURI(moralis, redeemer, tokenId, uri) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.setTokenURI(tokenId, uri);\n  return f.send({ from: redeemer, value: moralis.Units.ETH('0.0') });\n}\n\nexport async function tokenURI(moralis, tokenId) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.tokenURI(tokenId);\n  return f.call();\n}\n\nexport async function ownerOf(moralis, tokenId) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.ownerOf(tokenId);\n  return f.call();\n}\n\nexport async function getTokenByUsername(moralis, username) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.getTokenByUsername(username);\n  return f.call();\n}\n","/** @format */\n\nimport React, { useEffect, useState, updateState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport QRCode from 'react-qr-code';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n  SunIcon,\n  InfoIcon,\n} from '@chakra-ui/icons';\nimport {\n  HStack,\n  useClipboard,\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Text,\n  Image,\n  Heading,\n  Container,\n  Link,\n  Button,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  useLatestRef,\n  VStack,\n} from '@chakra-ui/react';\n\nimport { useMoralis } from 'react-moralis';\n\nimport * as PERSON from '../model/global';\nimport * as GLOBAL from '../model/global';\nimport * as HELPER from '../model/helper';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport { Global } from '@emotion/react';\n\n//******************************************************** */\nexport default function Show() {\n  const [lastDid, setLastDid] = useState('');\n  const [tokenid, setTokenid] = useState('');\n  const [person, setPerson] = useState({});\n\n  const [showConnect, setShowConnect] = useState(false);\n  const [showUnlink, setShowUnlink] = useState(false);\n  const [enableConnect, setEnableShowConnect] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  var { did } = useParams();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n  //0x345879b60bf5ccddd06bc91e49a6ebc4e93cfdaa   Matd\n  //0x58d22f24cd7fda155f9f7eefe9b32add46388ab9   Turtle\n  //0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc   Cryptophine\n\n  const navigate = useNavigate();\n  const appState = GLOBAL.getAppState();\n\n  // TODO multiple requests\n  useEffect(() => {\n    setIsLoaded(true);\n    if (lastDid == null || did !== lastDid) {\n      var pkey = HELPER.PubkeyFromDid(did);\n      PERSON.loadYouByPubKey(pkey).then((person) => {\n        if (person === undefined || Object.keys(person).length === 0) {\n          return;\n        }\n        setLastDid(did);\n        setPerson(person);\n        if (person.did === undefined) {\n          return;\n        }\n\n        if (person.did.length > 10) {\n          var t = HELPER.TokenIdFromPubkey(person.pubkey);\n          setTokenid(t);\n        }\n\n        if (GLOBAL.getMe().pubkey == '') {\n          return;\n        }\n        // Load Permissions\n        API.getPermissions(GLOBAL.getMe().pubkey, person.pubkey).then(\n          (permission) => {\n            setIsConnected(permission == 'CONTACT');\n          }\n        );\n      });\n    }\n\n    // enable the connect button\n    setEnableShowConnect(isAuthenticated);\n\n    // show the connect button\n    var showConnectButton = isAuthenticated;\n    if (PERSON.getYou().pubkey == PERSON.getMe().pubkey || isConnected) {\n      showConnectButton = false;\n      setShowUnlink(true);\n    }\n    setShowConnect(showConnectButton);\n  });\n\n  var avatarlink = '/avatar.html?url=' + person.avatar;\n\n  const downloadVcf = () => {\n    const element = document.createElement('a');\n\n    // https://en.wikipedia.org/wiki/VCard\n    var content = 'BEGIN:VCARD' + '\\r\\n';\n    content += 'VERSION:2.1' + '\\r\\n';\n    content += 'N:' + person.sname + ';' + person.gname + '\\r\\n';\n    content += 'TITLE:' + person.username + '\\r\\n';\n    content += 'PHOTO;PNG:' + person.img + '\\r\\n';\n    content += 'TEL;WORK;VOICE:' + person.mobile + '\\r\\n';\n    content += 'EMAIL:' + person.email + '\\r\\n';\n    content += 'ROLE:' + person.jobtitle + '\\r\\n';\n    content +=\n      'Note:' +\n      'https://app.youfoundme.io/#/show/' +\n      HELPER.DidFromPubkey(person.pubkey) +\n      '\\r\\n';\n    content += 'GEO:' + person.location + '\\r\\n';\n    content += 'UID:' + HELPER.DidFromPubkey(person.pubkey) + '\\r\\n';\n    content +=\n      'URI:' +\n      'https://app.youfoundme.io/#/show/' +\n      HELPER.DidFromPubkey(person.pubkey) +\n      '\\r\\n';\n    content +=\n      'SOURCE:' +\n      'https://app.youfoundme.io/#/show/' +\n      HELPER.DidFromPubkey(person.pubkey) +\n      '\\r\\n';\n    content += 'REV:' + new Date().toISOString() + '\\r\\n';\n    content += 'END:VCARD' + '\\r\\n';\n\n    const file = new Blob([content], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = person.username + '.vcf';\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  const connect = (link) => {\n    navigate('/connect/' + did);\n  };\n\n  const unlink = (link) => {\n    API.deletePermissions(GLOBAL.getMe().pubkey, GLOBAL.getYou().pubkey);\n    setShowUnlink(false);\n    setIsConnected(false);\n    setShowConnect(true);\n  };\n\n  const showlink = (link) => {\n    if (link.startsWith('https')) {\n      link = link.substring(8);\n    }\n    if (link.startsWith('http')) {\n      link = link.substring(7);\n    }\n    if (link.length > 50) {\n      link = link.substring(0, 50) + '...';\n    }\n    return link;\n  };\n\n  const { hasCopied, onCopy } = useClipboard(did);\n\n  if (person === undefined || Object.keys(person).length === 0) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container width=\"100%\"></Container>\n          <h1>loading...</h1>\n        </center>\n      </main>\n    );\n  }\n\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container width=\"100%\">\n        <Link onClick={onCopy}>\n          <HStack>\n            <Text color=\"gray.500\" fontSize=\"sm\">\n              {person.did}\n            </Text>\n            <CopyIcon color=\"gray.500\" />\n          </HStack>\n        </Link>\n        <HStack>\n          {person.metafile.length > 0 && (\n            <Link href={person.metaverse} isExternal>\n              <Text color=\"gray.500\" fontSize=\"sm\">\n                Metafile: {showlink(person.metafile)}\n              </Text>\n            </Link>\n          )}\n          {person.metafile.length === 0 && (\n            <Text color=\"gray.500\" fontSize=\"sm\">\n              Metafile: NFT not minted\n            </Text>\n          )}\n        </HStack>\n        <br />\n        <Heading>{person.username}</Heading>\n        <br />\n        <HStack>\n          {person.img.length > 0 && (\n            <Image\n              boxSize=\"200px\"\n              src={person.img}\n              objectFit=\"cover\"\n              alt={person.username}\n            />\n          )}\n\n          {showConnect && (\n            <VStack>\n              <Box boxSize=\"150px\"></Box>\n              <Button onClick={connect} disabled={!enableConnect}>\n                Connect\n              </Button>\n            </VStack>\n          )}\n        </HStack>\n\n        {person.avatar.length > 0 && (\n          <HStack style={{ marginTop: '5px' }}>\n            <Link color=\"teal.500\" href={avatarlink} isExternal>\n              Show Avatar\n            </Link>\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />{' '}\n          </HStack>\n        )}\n        <br />\n        <Heading>{person.jobtitle}</Heading>\n        <Text fontSize=\"1xl\">{person.teaser}</Text>\n        <br />\n        <Table variant=\"simple\" width=\"100%\">\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b> References</b>\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.ref0.length > 0 && (\n                <Link href={person.ref0} isExternal>\n                  <ExternalLinkIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.ref0.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td wdith=\"100%\">\n              {person.ref0.length > 0 && (\n                <Link href={person.ref0} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.ref0)}\n                  </Text>\n                </Link>\n              )}\n              {person.ref0.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  1. Reference not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.ref1.length > 0 && (\n                <Link href={person.ref1} isExternal>\n                  <ExternalLinkIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.ref1.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td>\n              {person.ref1.length > 0 && (\n                <Link href={person.ref0} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.ref1)}\n                  </Text>\n                </Link>\n              )}\n              {person.ref1.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  2. Reference not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.ref2.length > 0 && (\n                <Link href={person.ref2} isExternal>\n                  <ExternalLinkIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.ref2.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td>\n              {person.ref2.length > 0 && (\n                <Link href={person.ref2} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.ref2)}\n                  </Text>\n                </Link>\n              )}\n              {person.ref2.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  3. Reference not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b> Locations</b>\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {person.location.length > 0 && (\n                <Link href={person.location} isExternal>\n                  <SunIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.location.length === 0 && (\n                <ExternalLinkIcon color=\"blue.500\" />\n              )}\n            </Td>\n            <Td>\n              {person.location.length > 0 && (\n                <Link href={person.location} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.location)}\n                  </Text>\n                </Link>\n              )}\n              {person.location.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Location not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              {person.metaverse.length > 0 && (\n                <Link href={person.metaverse} isExternal>\n                  <ViewIcon color=\"blue.500\" />\n                </Link>\n              )}\n              {person.metaverse.length === 0 && <ViewIcon color=\"blue.500\" />}\n            </Td>\n            <Td>\n              {person.metaverse.length > 0 && (\n                <Link href={person.metaverse} isExternal>\n                  <Text fontSize=\"1xl\" color=\"white.500\">\n                    {showlink(person.metaverse)}\n                  </Text>\n                </Link>\n              )}\n              {person.metaverse.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Metaverse not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b> Contact</b>\n\n                {person.gname.length === 0 &&\n                  person.sname.length === 0 &&\n                  person.email.length === 0 &&\n                  person.mobile.length === 0 && (\n                    <Text fontSize=\"xs\" color=\"gray.500\">\n                      only visible to linked contacts,{' '}\n                      <Link onClick={connect} disabled={!isAuthenticated}>\n                        please connect\n                      </Link>\n                    </Text>\n                  )}\n              </Text>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <InfoOutlineIcon color=\"green.500\" />\n            </Td>\n            <Td>\n              {(person.gname.length > 0 || person.sname.length > 0) && (\n                <Text fontSize=\"1xl\" color=\"teal.500\">\n                  {person.gname} {person.sname}\n                </Text>\n              )}\n              {person.gname.length === 0 && person.sname.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Name not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <EmailIcon color=\"green.500\" />\n            </Td>\n            <Td>\n              {person.email.length > 0 && (\n                <Text fontSize=\"1xl\" color=\"teal.500\">\n                  {person.email}\n                </Text>\n              )}\n              {person.email.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Email not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <PhoneIcon color=\"green.500\" />\n            </Td>\n            <Td>\n              {person.mobile.length > 0 && (\n                <Text fontSize=\"1xl\" color=\"teal.500\">\n                  {person.mobile}\n                </Text>\n              )}\n              {person.mobile.length === 0 && (\n                <Text fontSize=\"1xl\" color=\"gray.600\">\n                  Mobile not shown\n                </Text>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              {(person.gname.length > 0 ||\n                person.sname.length > 0 ||\n                person.email.length > 0 ||\n                person.mobile.length > 0) && (\n                <Link onClick={downloadVcf}>\n                  <DownloadIcon color=\"green.500\" />\n                </Link>\n              )}\n              {person.gname.length === 0 &&\n                person.sname.length === 0 &&\n                person.email.length === 0 &&\n                person.mobile.length === 0 && (\n                  <DownloadIcon color=\"green.500\" />\n                )}\n            </Td>\n            <Td color=\"white.500\">\n              {(person.gname.length > 0 ||\n                person.sname.length > 0 ||\n                person.email.length > 0 ||\n                person.mobile.length > 0) && (\n                <Link onClick={downloadVcf}>VCF card</Link>\n              )}\n              {person.gname.length === 0 &&\n                person.sname.length === 0 &&\n                person.email.length === 0 &&\n                person.mobile.length === 0 && (\n                  <Text fontSize=\"1xl\" color=\"gray.600\">\n                    VCF card hidden\n                  </Text>\n                )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"1xl\">\n                <b>Tags</b>\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <StarIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text color=\"white.500\" fontSize=\"1xl\">\n                {person.tags}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\">\n              <InfoIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <HStack>\n                {person.flags & STATIC.FLA_FULLTIME && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    full time |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_PARTTIME && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    part time |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_CONTRACTS && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    contract |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_PROJECTS && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    projects |\n                  </Text>\n                )}\n\n                {person.flags & STATIC.FLA_INVESTOR && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    investor |\n                  </Text>\n                )}\n                {person.flags & STATIC.FLA_STUDENT && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    student |\n                  </Text>\n                )}\n                {person.flags & STATIC.FLA_SCHOOL && (\n                  <Text color=\"blue.500\" fontSize=\"xs\">\n                    school |\n                  </Text>\n                )}\n              </HStack>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text color=\"blue.500\" fontSize=\"sm\">\n                <b> QR Link</b>\n              </Text>\n            </Td>\n            <Td>\n              <QRCode\n                level=\"H\"\n                size=\"165\"\n                title=\"Youfoundme DID\"\n                fgColor=\"#FFFFFF\"\n                bgColor=\"#000000\"\n                value={'https://app.youfoundme.io/#/show/' + did}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td width=\"10px\"></Td>\n            <Td>\n              {showUnlink && (\n                <Button onClick={unlink} disabled={!enableConnect}>\n                  Unlink\n                </Button>\n              )}\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\n\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Text,\n  Button,\n  HStack,\n  Input,\n  Heading,\n  Container,\n  AlertIcon,\n  Box,\n  Link as CHAKRALINK,\n  Image,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  CloseButton,\n  useAriaHidden,\n  Checkbox,\n  Td,\n  Tr,\n  Table,\n  Textarea,\n} from '@chakra-ui/react';\nimport { createSerializableStateInvariantMiddleware } from '@reduxjs/toolkit';\n\nimport * as Global from '../model/global';\nimport * as IPFS from '../io/ipfs_api';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\n\nexport default function Editor() {\n  // Authentication =============================\n\n  const [userLoaded, setUserLoaded] = useState(false);\n  const [did, setDid] = useState('');\n  const [pubkey, setPubkey] = useState('');\n  const [contract, setContract] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [teaser, setTeaser] = useState('');\n  const [img, setImg] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [tags, setTags] = useState('');\n  const [ref0, setRef0] = useState('');\n  const [ref1, setRef1] = useState('');\n  const [ref2, setRef2] = useState('');\n  const [location, setLocation] = useState('');\n  const [metaverse, setMetaverse] = useState('');\n  const [status, setStatus] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [gname, setGname] = useState('');\n  const [sname, setSname] = useState('');\n  const [tokenURI, setTokenURI] = useState('');\n  const [metafile, setMetafile] = useState('');\n  const [flags, setFlags] = useState(0);\n  const [created, setCreated] = useState('');\n  const [magic, setMagic] = useState('');\n  const [pin, setPin] = useState('');\n  const [code, setCode] = useState('');\n  const [codeExpected, setCodeExpected] = useState('');\n  const [codeEmail, setCodeEmail] = useState('');\n  const [codeEmailExpected, setCodeEmailExpected] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [changeImage, setChangeImage] = useState(false);\n  const [changeAvatar, setChangeAvatar] = useState(false);\n  const [tokenid, setTokenid] = useState('');\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [mobilevalerror, setMobilevalerror] = React.useState('');\n  const [mobilevalidate, setMobilevalidate] = React.useState('Please validate');\n  const [emailvalidate, setEmailvalidate] = React.useState('Please validate');\n  const [mobileok, setMobileok] = React.useState('');\n  const [emailok, setEmailok] = React.useState('');\n  const [emailvalerror, setEmailvalerror] = React.useState('');\n  const [showValidateboxEmail, setShowValidateboxEmail] = useState(false);\n  const [showValidatebox, setShowValidatebox] = useState(false);\n\n  // Search\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n\n  const onDelete = () => {\n    setIsOpen(false);\n  };\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const validateEmail = async () => {\n    if (codeEmail != codeEmailExpected) {\n      setEmailvalerror('code not valid');\n      setEmailok('');\n      return;\n    }\n\n    setEmailok('');\n    setEmailvalerror('');\n    setShowValidateboxEmail(false);\n\n    var old = parseInt(flags);\n    var newFlage = old | STATIC.FLA_EMAILCONFIRMED;\n    var person = getPerson();\n    person.flags = newFlage.toString();\n\n    // Write to Db\n    Global.updateMePerson(person); // TODO Why can't we use handle, wehat resets flag?\n    setFlags(newFlage);\n  };\n\n  const validateMobile = async () => {\n    if (code != codeExpected) {\n      setMobilevalerror('code not valid');\n      setMobileok('');\n      return;\n    }\n\n    setMobileok('');\n\n    setMobilevalerror('');\n    setShowValidatebox(false);\n\n    var old = parseInt(flags);\n    var newFlage = old | STATIC.FLA_SMSCONFIRMED;\n    var person = getPerson();\n    person.flags = newFlage.toString();\n\n    // Write to Db\n    Global.updateMePerson(person); // TODO Why can't we use handle, wehat resets flag?\n    setFlags(newFlage);\n  };\n\n  const sendSMS = async () => {\n    setShowValidatebox(true);\n    API.sendSMS(mobile).then((codeexpected) => {\n      setCodeExpected(codeexpected);\n      setMobileok('Please check your mobile');\n      setMobilevalidate('');\n    });\n  };\n\n  const sendEmail = async () => {\n    setShowValidateboxEmail(true);\n\n    API.sendEmail(email).then((codeexpected) => {\n      setCodeEmailExpected(codeexpected);\n      setEmailok('Please check your email');\n      setEmailvalidate('');\n    });\n  };\n\n  const setCheckbox = (checked, perm) => {\n    if (checked) {\n      setFlags(flags | perm);\n    } else {\n      setFlags(flags ^ perm);\n    }\n  };\n\n  const flip = () => {\n    setChangeImage(!changeImage);\n  };\n\n  const flip2 = () => {\n    setChangeAvatar(!changeAvatar);\n  };\n\n  const createAvatar = () => {\n    handleSave();\n    navigate('/avatar');\n  };\n\n  const getPerson = () => {\n    var person = {};\n    person.did = did;\n    person.pubkey = pubkey.toLowerCase();\n    person.contract = contract.toLowerCase();\n    person.username = username;\n    person.jobtitle = jobtitle;\n    person.teaser = teaser;\n    person.img = img;\n    person.avatar = avatar;\n    person.tags = tags;\n    person.ref0 = ref0;\n    person.ref1 = ref1;\n    person.ref2 = ref2;\n    person.metaverse = metaverse;\n    person.location = location;\n    person.status = status;\n    person.email = email;\n    person.mobile = mobile;\n    person.gname = gname;\n    person.sname = sname;\n    person.metafile = metafile;\n    person.flags = flags.toString();\n    person.created = created;\n    person.magic = magic;\n    person.pin = pin;\n    return person;\n  };\n\n  const setPerson = (person) => {\n    setDid(person.did);\n    setPubkey(person.pubkey);\n    setContract(person.contract);\n    setUsername(person.username);\n    setJobtitle(person.jobtitle);\n    setTeaser(person.teaser);\n    setImg(person.img);\n    setAvatar(person.avatar);\n    setTags(person.tags);\n    setRef0(person.ref0);\n    setRef1(person.ref1);\n    setRef2(person.ref2);\n    setMetaverse(person.metaverse);\n    setLocation(person.location);\n    setStatus(person.status);\n    setEmail(person.email);\n    setMobile(person.mobile);\n    setGname(person.gname);\n    setSname(person.sname);\n    setMetafile(person.metafile);\n    setFlags(parseInt(person.flags));\n    setCreated(person.created);\n    setMagic(person.magic);\n    setPin(person.pin);\n  };\n\n  const saveNFT = async () => {\n    var tokenId = HELPER.TokenIdFromPubkey(pubkey);\n    console.log(did);\n    console.log(tokenId);\n    // Create new Metada\n    const meta = HELPER.CreateMetafile(\n      did,\n      tokenId,\n      img,\n      avatar,\n      username,\n      jobtitle,\n      teaser\n    );\n    console.log(meta);\n    var file = new Moralis.File('meta.json', { base64: btoa(meta) });\n    await file.saveIPFS();\n\n    var hash = file.hash();\n    console.log(hash);\n\n    //var linkMeta = STATIC.PINATA_IPFS + hash;\n    var linkMeta = file.ipfs();\n    setMetafile(linkMeta);\n    console.log(linkMeta);\n\n    // the meta file has not changed, no need to update\n    if (tokenURI == linkMeta) {\n      //return; // TODO back in !!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    }\n    setTokenURI(linkMeta);\n\n    // Does the NFT exist\n    var tokenId = HELPER.TokenIdFromPubkey(pubkey);\n\n    setStatusMessage('metafile saved ' + tokenId);\n    setErrorMessage('');\n\n    WEB3.ownerOf(Moralis, tokenId)\n      .then((owner) => {\n        if (owner.toLowerCase() == pubkey.toLowerCase()) {\n          //  update NFT\n          WEB3.setTokenURI(Moralis, pubkey, tokenId, linkMeta)\n            .then((rep) => {\n              handleSave();\n\n              // Report\n              setStatusMessage('NFT updated');\n              setErrorMessage('');\n            })\n            .catch((e) => {\n              console.log(e);\n              setStatusMessage('');\n              setErrorMessage('NFT update failed');\n              // TODO inform user of failure\n            });\n        } else {\n          setStatusMessage('');\n          setErrorMessage('NFT belongs to a different user');\n          return;\n        }\n      })\n      .catch((e) => {\n        if (HELPER.kmpSearch('' + e, 'nonexistent') > 0) {\n          // NFT does nont exist\n          var voucher = {\n            tokenId: tokenId,\n            minPrice: STATIC.DID_PRICE_AVAX,\n            uri: linkMeta,\n            username: username,\n            key: 'KEY_PRIV_DEV0',\n            contract: STATIC.CONTRACT_ADDRESS_FUJI,\n          };\n          API.SignVoucher(voucher)\n            .then((signedVoucher) => {\n              WEB3.redeem(Moralis, user.get('ethAddress'), signedVoucher)\n                .then((rep) => {\n                  console.log(rep);\n\n                  // TODO inform user of success\n                  // Update Db\n                  setCreated(Date.now().toString());\n                  setFlags(flags | STATIC.FLA_MINTED);\n                  handleSave();\n                  setStatusMessage('NFT minted');\n                  setErrorMessage('');\n                })\n                .catch((e) => {\n                  console.log(e);\n                  // TODO inform user of failure\n                  setStatusMessage('');\n                  setErrorMessage('NFT minting failed');\n                });\n            })\n            .catch((e) => {\n              console.log(e);\n              setStatusMessage('');\n              setErrorMessage('NFT minting failed, voucher not signed');\n            });\n        }\n      });\n  };\n\n  const handleSave = async (e) => {\n    // check if email or SMS changed\n    var personNew = getPerson();\n    var personOld = Global.getMe();\n    if (personNew.mobile != personOld.mobile) {\n      personNew.flags = (\n        parseInt(personNew.old) ^ STATIC.FLA_SMSCONFIRMED\n      ).toString();\n      setFlags(flags ^ STATIC.FLA_SMSCONFIRMED);\n    }\n    if (personNew.email != personOld.email) {\n      personNew.flags = (\n        parseInt(personNew.old) ^ STATIC.FLA_EMAILCONFIRMED\n      ).toString();\n      setFlags(flags ^ STATIC.FLA_EMAILCONFIRMED);\n    }\n    Global.updateMePerson(personNew);\n  };\n\n  const onImageDrop = (event) => {\n    var data = event.target.files[0];\n    var file = new Moralis.File(data.name, data);\n    file\n      .saveIPFS()\n      .then(() => {\n        var linkMeta = file.ipfs();\n        setImg(linkMeta);\n        setChangeImage(false);\n        setStatusMessage('Image Uploaded');\n        setErrorMessage('');\n      })\n      .catch((e) => {\n        setStatusMessage('');\n        setErrorMessage('Image upload failed');\n      });\n  };\n\n  const onAvatarDrop = (event) => {\n    var data = event.target.files[0];\n    var file = new Moralis.File(data.name, data);\n    file\n      .saveIPFS()\n      .then(() => {\n        var linkMeta = file.ipfs();\n        setImg(linkMeta);\n        setChangeAvatar(false);\n        setStatusMessage('Image Uploaded');\n        setErrorMessage('');\n      })\n      .catch((e) => {\n        setStatusMessage('');\n        setErrorMessage('Image upload failed');\n      });\n  };\n\n  // http://localhost:3000/editor?did=did:yfm:0x345879b60bf5ccddd06bc91e49a6ebc4e93cfdaa&url=https://d1a370nemizbjq.cloudfront.net/9a03fcc1-e9e3-435e-9b91-daca8f135597.glb\n  useEffect(() => {\n    if (did != Global.getMe().did) {\n      setPerson(Global.getMe());\n    }\n  });\n\n  // not sogned in =======================================================================================\n  if (!Global.getAppState().connected) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Me Editor</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamaski.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  // Check user exists\n\n  // signed in =======================================================================================\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container>\n        <Heading>Me Editor</Heading>\n        <br />\n        <HStack>\n          <Text fontSize=\"xs\">DID: </Text>\n          <Text fontSize=\"xs\">{did}</Text>\n        </HStack>\n        <HStack>\n          <Text fontSize=\"xs\">Public key: </Text>\n          <Text fontSize=\"xs\">{pubkey} </Text>\n        </HStack>\n        <HStack>\n          <Text fontSize=\"xs\">Contract: </Text>\n          <Text fontSize=\"xs\">{contract} - Avalanche FUJI</Text>\n        </HStack>\n        <CHAKRALINK href={metafile} isExternal>\n          <HStack>\n            <Text fontSize=\"xs\">Metafile:</Text>\n            <Text fontSize=\"xs\">{metafile}</Text>\n            <ExternalLinkIcon fontSize=\"xs\" color=\"blue.500\" />\n          </HStack>\n        </CHAKRALINK>\n        <HStack>\n          <HStack>\n            <Text fontSize=\"xs\">Token:</Text>\n            <Text fontSize=\"xs\">{tokenid}</Text>\n          </HStack>\n        </HStack>\n        <br />\n        <HStack>\n          {!(flags & STATIC.FLA_MINTED) && (\n            <Button onClick={saveNFT}>Create NFT</Button>\n          )}\n          {flags & STATIC.FLA_MINTED && (\n            <Button onClick={saveNFT}>Update NFT</Button>\n          )}\n          <Text fontSize=\"xs\">\n            Costs: NFT creation: 0.25 AVAX, updates are free\n            <br />+ transaction costs. Writes data to the Blockchain\n          </Text>\n        </HStack>\n        <br />\n        <HStack>\n          <Button onClick={handleSave}>Save</Button>\n          <Text fontSize=\"xs\">\n            Saving to youfoundme Db is free, but does not update on-chain data.\n          </Text>\n        </HStack>\n        <HStack>\n          <Text color=\"green.500\" fontSize=\"xs\">\n            {statusMessage}\n          </Text>\n        </HStack>\n        <HStack>\n          <Text color=\"red.500\" fontSize=\"xs\">\n            {errorMessage}\n          </Text>\n        </HStack>\n        <br />\n        <Heading>{username}</Heading>\n        {img.length > 0 && (\n          <Image boxSize=\"140\" src={img} objectFit=\"cover\" alt={username} />\n        )}\n        <CHAKRALINK color=\"teal.500\" onClick={flip}>\n          Change Image\n        </CHAKRALINK>\n        {changeImage && (\n          <Input type=\"file\" name=\"file\" onChange={onImageDrop} />\n        )}\n        <HStack>\n          <CHAKRALINK href={img} isExternal>\n            <HStack>\n              <Text fontSize=\"xs\">{img}</Text>\n              <ExternalLinkIcon />\n            </HStack>\n          </CHAKRALINK>\n        </HStack>\n        <br />\n        <CHAKRALINK color=\"teal.500\" onClick={flip2}>\n          Upload existing avatar (.glb)\n        </CHAKRALINK>\n        &nbsp;or &nbsp;\n        <CHAKRALINK color=\"teal.500\" onClick={() => createAvatar()}>\n          create new avatar with readyplayer.me\n        </CHAKRALINK>\n        {changeAvatar && (\n          <Input type=\"file\" name=\"file\" onChange={onAvatarDrop} />\n        )}\n        <HStack>\n          <CHAKRALINK href={avatar} isExternal>\n            <HStack>\n              <Text fontSize=\"xs\">{avatar}</Text>\n              <ExternalLinkIcon />\n            </HStack>\n          </CHAKRALINK>\n        </HStack>\n        <br />\n        <Heading>Professional Section</Heading>\n        <Table style={{ paddingLeft: '0px', paddingRight: '0px' }}>\n          <Tr>\n            <Td width=\"20px\">\n              <Text>jobtitle: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"jobtitle\"\n                fontSize=\"1xl\"\n                value={jobtitle}\n                onChange={(e) => setJobtitle(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>teaser: </Text>\n            </Td>\n            <Td>\n              <Textarea\n                placeholder=\"teaser\"\n                fontSize=\"1xl\"\n                value={teaser}\n                onChange={(e) => setTeaser(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>tags: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"tags\"\n                fontSize=\"1xl\"\n                value={tags}\n                onChange={(e) => setTags(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>ref0: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Your company\"\n                fontSize=\"1xl\"\n                value={ref0}\n                onChange={(e) => setRef0(e.target.value)}\n              />\n              <CHAKRALINK color=\"teal.500\" href={ref0} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>ref1: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Linkedin\"\n                fontSize=\"1xl\"\n                value={ref1}\n                onChange={(e) => setRef1(e.target.value)}\n              />\n              <CHAKRALINK color=\"teal.500\" href={ref1} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>ref2: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Github\"\n                fontSize=\"1xl\"\n                value={ref2}\n                onChange={(e) => setRef2(e.target.value)}\n              />\n              <CHAKRALINK color=\"teal.500\" href={ref2} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n\n          {/* Location Section */}\n          <Tr>\n            <Td colspan=\"2\">\n              <Heading>Location Status</Heading>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text>Location: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"location\"\n                fontSize=\"1xl\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n              <CHAKRALINK\n                color=\"teal.500\"\n                href={location}\n                fontSize=\"xs\"\n                isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Metaverse: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"metaverse\"\n                fontSize=\"1xl\"\n                value={metaverse}\n                onChange={(e) => setMetaverse(e.target.value)}\n              />\n              <CHAKRALINK\n                color=\"teal.500\"\n                href={metaverse}\n                fontSize=\"xs\"\n                isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td colspan=\"2\">\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_LOCATION) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_LOCATION)\n                  }\n                />\n                <Text>Hide my location</Text>\n              </HStack>\n            </Td>\n          </Tr>\n\n          {/* Contact Section */}\n          <Tr>\n            <Td colspan=\"2\">\n              <Heading>Contact</Heading>\n              <Text fontSize=\"xs\" color=\"teal.500\">\n                Contact details are not shown in search results. We will contact\n                you by email, if a user likes to connect with you. You decide if\n                you like to share your contact details.\n              </Text>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text>Email: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"email\"\n                fontSize=\"1xl\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {!(flags & STATIC.FLA_EMAILCONFIRMED) && (\n                <CHAKRALINK\n                  color=\"red.500\"\n                  onClick={sendEmail}\n                  fontSize=\"xs\"\n                  isExternal>\n                  {emailvalidate}\n                </CHAKRALINK>\n              )}\n              <Text fontSize=\"xs\" color=\"green.500\">\n                {emailok}\n              </Text>\n              {showValidateboxEmail && (\n                <HStack>\n                  <Input\n                    placeholder=\"6 digit code\"\n                    fontSize=\"1xl\"\n                    value={codeEmail}\n                    onChange={(e) => setCodeEmail(e.target.value)}\n                  />\n                  <Button onClick={validateEmail}>validate</Button>\n                </HStack>\n              )}\n              <Text fontSize=\"xs\" color=\"red.500\">\n                {emailvalerror}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Mobile: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"+  mobile\"\n                fontSize=\"1xl\"\n                value={mobile}\n                onChange={(e) => setMobile(e.target.value)}\n              />\n              {!(flags & STATIC.FLA_SMSCONFIRMED) && (\n                <HStack>\n                  <CHAKRALINK\n                    color=\"red.500\"\n                    onClick={sendSMS}\n                    fontSize=\"xs\"\n                    isExternal>\n                    {mobilevalidate}\n                  </CHAKRALINK>\n                  <Text fontSize=\"xs\" color=\"green.500\">\n                    {mobileok}\n                  </Text>\n                </HStack>\n              )}\n              {showValidatebox && (\n                <HStack>\n                  <Input\n                    placeholder=\"6 digit code\"\n                    fontSize=\"1xl\"\n                    value={code}\n                    onChange={(e) => setCode(e.target.value)}\n                  />\n                  <Button onClick={validateMobile}>validate</Button>\n                </HStack>\n              )}\n              <Text fontSize=\"xs\" color=\"red.500\">\n                {mobilevalerror}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Name: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"first name\"\n                fontSize=\"1xl\"\n                value={gname}\n                onChange={(e) => setGname(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Surname: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"last name\"\n                fontSize=\"1xl\"\n                value={sname}\n                onChange={(e) => setSname(e.target.value)}\n              />\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td colspan=\"2\">\n              {/* Privacy Flags ===================================================================================*/}\n              <Heading>Privacy</Heading>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_FULLTIME) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_FULLTIME)\n                  }\n                />\n                <Text>I am looking for full time employment</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_PARTTIME) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_PARTTIME)\n                  }\n                />\n                <Text>I am looking for part time jobs</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_CONTRACTS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_CONTRACTS)\n                  }\n                />\n                <Text>I am available for contract work</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_PROJECTS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_PROJECTS)\n                  }\n                />\n                <Text>I am open to projects and collaborations</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_INVESTOR) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_INVESTOR)\n                  }\n                />\n                <Text>I am an investor or recruiter</Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_SCHOOL) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_SCHOOL)\n                  }\n                />\n                <Text>I am going to school</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_STUDENT) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_STUDENT)\n                  }\n                />\n                <Text>I am a student</Text>\n              </HStack>\n              <br />\n\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_REFERENCES) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_REFERENCES)\n                  }\n                />\n                <Text>Do not show my references</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_CONTACT) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_CONTACT)\n                  }\n                />\n                <Text>Do not request my contact details</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_ANONYMOUS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_ANONYMOUS)\n                  }\n                />\n                <Text>\n                  Do not show my profile at all, i prefer to be anonymous\n                </Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Button onClick={handleSave}>Save</Button>\n                <Text fontSize=\"xs\"></Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Button colorScheme=\"red\" onClick={() => setIsOpen(true)}>\n                  Delete Account\n                </Button>\n\n                <AlertDialog\n                  isOpen={isOpen}\n                  leastDestructiveRef={cancelRef}\n                  onClose={onClose}>\n                  <AlertDialogOverlay>\n                    <AlertDialogContent>\n                      <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                        Delete my NFT\n                      </AlertDialogHeader>\n\n                      <AlertDialogBody>\n                        Are you sure? You can't undo this action afterwards.\n                      </AlertDialogBody>\n\n                      <AlertDialogFooter>\n                        <Button ref={cancelRef} onClick={onClose}>\n                          Cancel\n                        </Button>\n                        <Button colorScheme=\"red\" onClick={onDelete} ml={3}>\n                          Delete\n                        </Button>\n                      </AlertDialogFooter>\n                    </AlertDialogContent>\n                  </AlertDialogOverlay>\n                </AlertDialog>\n                <Text color=\"red.500\" fontSize=\"xs\">\n                  This cannot be undone, your NFT will be inaccessible.\n                  <br />\n                  Use a different wallet account if you like to re-register.\n                </Text>\n              </HStack>\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\n\nimport {\n  Heading,\n  Image,\n  Input,\n  Container,\n  Text,\n  Button,\n  HStack,\n  Link,\n  Table,\n  Tr,\n  Td,\n  Img,\n  Header,\n  VStack,\n} from '@chakra-ui/react';\n\nimport { getAppState, loadPersonByPubKey, setAppstate } from '../model/global';\nimport { searchPerson, getPerson } from '../io/api';\nimport * as Global from '../model/global';\nimport * as Helper from '../model/helper';\nimport * as STATIC from '../model/static';\n\nconst Search = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n  const [flags, setFlags] = useState(0);\n  const search = useLocation().search;\n  const newTerm = new URLSearchParams(search).get('term');\n\n  useEffect(() => {\n    var appState = Global.getAppState();\n    if (appState.searchfield != '') {\n      setSearchfield(appState.searchfield);\n    }\n\n    if (searchResult.length == '' && appState.searchResult.length > 0) {\n      setSearchResult(JSON.parse(appState.searchResult));\n    }\n  });\n\n  const handleChange = (e) => {\n    var search = e.target.value;\n    setSearchfield(search);\n    Global.setAppstate('searchfield', search);\n  };\n\n  const navigate = useNavigate();\n\n  //=============================================\n\n  let appState = getAppState();\n\n  const startSearch = async () => {\n    var searchterm = searchfield.trim();\n    if (searchfield.length == 0) {\n      setSearchfield('all');\n      searchterm = 'all';\n    }\n\n    if (searchfield.startsWith('did:yfm:')) {\n      var pubkey = Helper.PubkeyFromDid(searchfield);\n      var person = await getPerson(pubkey);\n      if (JSON.stringify(person).indexOf('error') > 0) {\n        setSearchResult([]);\n        Global.setAppstate('searchResult', JSON.stringify([]));\n      } else {\n        navigate('/show/' + searchfield);\n      }\n      return;\n    }\n\n    Global.setAppstate('searchfield', searchterm);\n    var people = await searchPerson(searchterm);\n    setSearchResult(people);\n    Global.setAppstate('searchResult', JSON.stringify(people));\n    navigate('/search?term=' + searchterm);\n  };\n\n  const linkSelected = (did) => {\n    var linkShowLInk = '/show/' + did;\n    Global.setAppstate('did', did);\n    navigate(linkShowLInk);\n  };\n\n  if (searchResult == null || searchResult.length == 0) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <Container>\n          <Heading>Search</Heading>\n\n          <HStack>\n            <Input\n              placeholder=\"Keywords, Username, DID or Tags, blank shows new members\"\n              onChange={handleChange}\n              value={searchfield}\n            />\n            <Button onClick={startSearch}>go</Button>\n          </HStack>\n          <br />\n          <Text color=\"teal.500\" fontSize=\"xs\">\n            No records found\n          </Text>\n        </Container>\n      </main>\n    );\n  }\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container>\n        <Heading>Search</Heading>\n        <HStack>\n          <Input\n            placeholder=\"Keywords, Username, DID or Tags, blank shows new members\"\n            onChange={handleChange}\n            value={searchfield}\n          />\n          <Button onClick={startSearch}>go</Button>\n        </HStack>\n        <br />\n        <Text color=\"teal.500\" fontSize=\"xs\">\n          found: {searchResult.length}\n        </Text>\n        <Table variant=\"simple\" width=\"100%\" border=\"1\" padding=\"0\" margin=\"0\">\n          {Object.keys(searchResult).map((k, i) => {\n            let d = searchResult[k];\n            let fl = parseInt(d.flags);\n            return (\n              <Tr key={i}>\n                <Td wdith=\"300px\">\n                  <Link onClick={() => linkSelected(d.did)}>\n                    <Image\n                      width=\"300px\"\n                      height=\"300px\"\n                      boxSize=\"150px\"\n                      objectFit=\"cover\"\n                      src={d.img}\n                      alt={d.username}\n                    />\n                  </Link>\n                </Td>\n                <Td width=\"50%\">\n                  <Table border=\"0\" padding=\"0\" margin=\"0\">\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          <Heading>{d.username}</Heading>\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          {d.jobtitle}\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          {d.teaser}\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td colspan=\"2\">\n                        <HStack>\n                          {fl & STATIC.FLA_FULLTIME && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              full time |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_PARTTIME && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              part time |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_CONTRACTS && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              contract |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_PROJECTS && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              projects |\n                            </Text>\n                          )}\n\n                          {fl & STATIC.FLA_INVESTOR && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              investor |\n                            </Text>\n                          )}\n                          {fl & STATIC.FLA_STUDENT && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              student |\n                            </Text>\n                          )}\n                          {fl & STATIC.FLA_SCHOOL && (\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              school |\n                            </Text>\n                          )}\n                        </HStack>\n                      </Td>\n                    </Tr>\n                  </Table>\n                </Td>\n              </Tr>\n            );\n          })}\n        </Table>\n      </Container>\n    </main>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Home() {\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n  if (isAuthenticated) {\n    navigate('/search?term=');\n  }\n  return (\n    <Container>\n      <Heading>Welcome to youfoundme</Heading>\n      Please connect your{' '}\n      <Link href=\"https://metamask.io/\" isExternal>\n        Metamask\n      </Link>{' '}\n      wallet\n    </Container>\n  );\n}\n","/** @format */\nimport React, { useEffect, useState } from 'react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Heading,\n  Text,\n  Button,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Input,\n  Table,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport { getPersonByUserName } from '../io/api';\nimport { _toEscapedUtf8String } from 'ethers/lib/utils';\n\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\nimport * as GLOBAL from '../model/global';\n\nexport default function Register() {\n  const [username, setUsername] = useState('');\n\n  const [isUnique, setIsUnique] = useState(false);\n  const [isReserved, setIsReserved] = useState(false);\n\n  const [verified, SetVerified] = useState(false);\n  const navigate = useNavigate();\n\n  const [creation, setCreation] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [nameOk, setNameOk] = useState('');\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  // const isEmailValid = (val) => {\n  //   let regEmail =\n  //     /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  //   if (!regEmail.test(val)) {\n  //     return false;\n  //   }\n  //   return true;\n  // };\n\n  const check = async () => {\n    if (username.length < 2) {\n      setNameError('username minimum 2 letters');\n      setNameOk('');\n      return;\n    } else {\n      setNameError('');\n      setNameOk('checking...');\n      var person = await getPersonByUserName(username);\n      if (person.length > 0) {\n        setNameError('Username taken');\n        setNameOk('');\n        setIsUnique(false);\n        return;\n      }\n      setNameError('');\n      setNameOk('username available');\n      setIsUnique(true);\n    }\n  };\n\n  const reserve = () => {\n    if (username.length < 2) {\n      setNameError('username minimum 2 letters');\n      setNameOk('');\n      return;\n    } else {\n      setNameError('');\n\n      if (isUnique) {\n        setIsReserved(true);\n        setNameOk('reserved');\n\n        var pubkey = user.get('ethAddress');\n        var did = HELPER.DidFromPubkey(pubkey);\n\n        // Insert into Db\n        var person = {};\n        person.did = did;\n        person.pubkey = pubkey.toLowerCase();\n        person.contract = STATIC.CONTRACT_ADDRESS_FUJI;\n        person.username = username;\n        person.jobtitle = '';\n        person.teaser = '';\n        person.img =\n          'https://youfoundme.s3.eu-central-1.amazonaws.com/user/default.png';\n        person.avatar = '';\n        person.tags = '';\n        person.ref0 = '';\n        person.ref1 = '';\n        person.ref2 = '';\n        person.metaverse = '';\n        person.location = '';\n        person.status = '';\n        person.email = '';\n        person.mobile = '';\n        person.gname = '';\n        person.sname = '';\n        person.metafile = '';\n        person.flags = '0';\n        person.created = new Date().toString();\n        person.pin = '';\n        person.magic = '';\n        GLOBAL.updateMePerson(person);\n        navigate('/editor');\n      }\n    }\n  };\n\n  // const sendcode = () => {\n  //   if (!isEmailValid(email)) {\n  //     setCodeError('not a valid email');\n  //     setCodeOk('');\n  //   } else {\n  //     setCodeError('');\n  //     setCodeOk('Please check your email');\n  //     const code = (Math.floor(Math.random() * 10000) + 10000)\n  //       .toString()\n  //       .substring(1);\n  //     setCodeexpected(code);\n  //     API.sendVerifyEmail(email.toLocaleLowerCase(), code);\n  //   }\n  // };\n\n  // const verifyCode = () => {\n  //   if (code != codeexpected) {\n  //     setCodeError('code not valid');\n  //     setCodeOk('');\n  //   } else {\n  //     setCodeError('');\n  //     setCodeOk('verified');\n  //     SetVerified(true);\n  //   }\n  // };\n\n  // const moveon = () => {\n  //   if (!verified) {\n  //     return;\n  //   }\n\n  //   setCreation('Creating user...');\n\n  //   // TODO Db insert\n\n  //   // Navigate\n  // };\n\n  if (user == null) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Me Editor</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamaski.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  return (\n    <Container>\n      <Heading>Register</Heading>\n      <Table\n        variant=\"unstyled\"\n        style={{ padding: '0px', margin: '0px' }}\n        className=\"table-tiny\"\n        size=\"sm\"\n        width=\"100%\"\n        cellPadding=\"0\">\n        <Tr>\n          <Td>username</Td>\n          <Td width=\"400px\">\n            <Input\n              width=\"300px\"\n              placeholder=\"username (no spaces!)\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              isDisabled={isReserved}\n            />\n          </Td>\n          <Td width=\"100px\">\n            <HStack>\n              <Button isDisabled={isReserved} onClick={check}>\n                Check availability\n              </Button>\n              <Button isDisabled={!isUnique || isReserved} onClick={reserve}>\n                Reserve\n              </Button>\n            </HStack>\n          </Td>\n        </Tr>\n        <Tr>\n          <Td></Td>\n          <Td>\n            <Text color=\"red.500\">{nameError}</Text>\n            <Text color=\"green.500\">{nameOk}</Text>\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colspan=\"3\">\n            <Text color=\"white.500\">Reserve your username today!</Text>\n            <br />\n            <Text color=\"gray.500\" t>\n              Your username will become permanent, when you create your NFT on\n              the next screen. It is not possible to change the username without\n              creating another NFT with a different wallet address, so choose\n              wisely.\n              <br />\n              <br />\n              Usernames are case sensitive, minimum 2 characters.\n            </Text>\n          </Td>\n        </Tr>\n      </Table>\n    </Container>\n  );\n}\n","/** @format */\nimport Frame, { FrameContextConsumer } from 'react-frame-component';\nimport axios from 'axios';\nimport useMessage from '@rottitime/react-hook-message-event';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Text,\n  Button,\n  HStack,\n  Input,\n  Heading,\n  Container,\n  AlertIcon,\n  Box,\n  Link as CHAKRALINK,\n  Image,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  CloseButton,\n  useAriaHidden,\n  Checkbox,\n  Td,\n  Tr,\n  Table,\n  Textarea,\n} from '@chakra-ui/react';\n\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport * as Global from '../model/global';\nimport * as IPFS from '../io/ipfs_api';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\n\n// Avatar https://youfoundme.s3.eu-central-1.amazonaws.com/matd.glb\nexport default function Avatar() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [pageLink, setPageLink] = useState('');\n  const [avataruri, setAvataruri] = useState('');\n\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const script = document.createElement('script');\n\n  script.src = 'https://use.typekit.net/foobar.js';\n  script.async = true;\n\n  document.body.appendChild(script);\n\n  useEffect(() => {});\n\n  const saveAvatar = async () => {\n    var privKey = await user.get('ethAddress');\n    var uri = document.getElementById('avatarUrl').value;\n    var person = Object.assign({}, Global.getMe());\n    person.avatar = uri;\n    Global.updateMePerson(person);\n    navigate('/editor');\n  };\n\n  return (\n    <center>\n      <Container>\n        <HStack>\n          <Input\n            hidden\n            id=\"avatarUrl\"\n            value={avataruri}\n            onChange={(e) => setAvataruri(e.target.value)}></Input>\n          <Button hidden id=\"btnuse\" onClick={saveAvatar}>\n            Use avatar\n          </Button>\n        </HStack>\n      </Container>\n      <iframe\n        id=\"iframe\"\n        height=\"800\"\n        width=\"1200\"\n        class=\"content\"\n        allow=\"camera *; microphone *\"\n        src=\"https://youfoundme.readyplayer.me/\"></iframe>\n    </center>\n  );\n}\n","/** @format */\nimport React, { useEffect, useState } from 'react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Heading,\n  Textarea,\n  Text,\n  Button,\n  Container,\n  Image,\n  Link,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Input,\n  Table,\n  HStack,\n  VStack,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getPersonByUserName } from '../io/api';\nimport { _toEscapedUtf8String } from 'ethers/lib/utils';\n\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\nimport * as GLOBAL from '../model/global';\n\nexport default function Connect() {\n  const [message, setMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [img, setImage] = useState('');\n  const [email, setEmail] = useState('');\n  const [errormsg, setErrormsg] = useState('');\n  const [okmsg, setOkmsg] = useState('');\n\n  const [isSendDiabled, setIsSendDisabled] = useState(false);\n\n  var { did } = useParams();\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const send = () => {\n    if (message.length < 2) {\n      setErrormsg('Please add a message');\n      setOkmsg('');\n      return;\n    }\n\n    API.connect(\n      GLOBAL.getMe().pubkey,\n      HELPER.PubkeyFromDid(did),\n      GLOBAL.getMe().username,\n      message\n    );\n    setErrormsg('');\n    setOkmsg('Your message has been sent');\n    setIsSendDisabled(true);\n  };\n\n  useEffect(() => {\n    var pubkey = HELPER.PubkeyFromDid(did);\n    var person = GLOBAL.getYou();\n    setUsername(person.username);\n    setImage(person.img);\n    setEmail(person.email);\n    setJobtitle(person.jobtitle);\n  });\n\n  if (user == null) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Conntact</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamaski.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  var placeholder = 'Hi ' + username + ',\\n\\nwould you be interested in.... ';\n  return (\n    <Container>\n      <Heading>{username}</Heading>\n\n      <Image boxSize=\"150\" objectFit=\"cover\" alt={username} src={img}></Image>\n      <Box w=\"10px\" />\n      <Text>{jobtitle}</Text>\n\n      <Box h=\"10px\"></Box>\n      <Textarea\n        h=\"400px\"\n        placeholder={placeholder}\n        onChange={(e) => setMessage(e.target.value)}>\n        {message}\n      </Textarea>\n      <Box h=\"10px\"></Box>\n      <Button onClick={send} disabled={isSendDiabled}>\n        Send message\n      </Button>\n      <Text color=\"red.500\" fontSize=\"xs\">\n        {errormsg}\n      </Text>\n      <Text color=\"green.500\" fontSize=\"xs\">\n        {okmsg}\n      </Text>\n      <Box h=\"10px\" />\n      <Text fontSize=\"xs\" color=\"teal.500\">\n        Get in touch with {username}, we will pass your details on to {username}{' '}\n        and email you back with contact details.\n      </Text>\n    </Container>\n  );\n}\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link,\n  HStack,\n  Box,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport * as GLOBAL from '../model/global';\n\nexport default function Message() {\n  const [connectionUser, setConnectionUser] = useState('Matd');\n  const [connectionDid, setConnectionDid] = useState(\n    'did:yfm:0x345879B60BF5ccDDd06BC91E49A6eBc4e93CfDAa'\n  );\n  const [isConnected, setIsConnected] = useState(false);\n\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const closeNow = () => {\n    window.close();\n  };\n\n  const visit = () => {\n    navigate('/show/' + connectionDid);\n  };\n\n  useEffect(() => {\n    if (user) {\n      setIsConnected(true);\n      if (GLOBAL.getAppState().token == '') {\n      }\n    }\n  });\n\n  return (\n    <Container>\n      <Heading>Message</Heading>\n      <br />\n      <Text>Thank you, {connectionUser} is a new connection.</Text>\n      <br />\n      <br />\n      <Button onClick={visit}>View Matd</Button>\n\n      {!isConnected && (\n        <Text fontSize=\"xs\" color=\"blue.500\">\n          To access your new contact please login first.\n        </Text>\n      )}\n    </Container>\n  );\n}\n","/** @format */\n\nimport React from 'react';\nimport App from './App';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport { MoralisProvider } from 'react-moralis';\nimport { render, ReactDOM } from 'react-dom';\nimport { HashRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Show from './routes/show';\nimport Editor from './routes/editor';\nimport Search from './routes/search';\nimport Home from './routes/home';\nimport Register from './routes/register';\nimport Avatar from './routes/avatar';\nimport Connect from './routes/connect';\nimport Message from './routes/message';\nimport * as GLOBAL from './model/global';\nimport * as STATIC from './model/static';\n\nconst theme = extendTheme({\n  config: {\n    initialColorMode: 'dark',\n  },\n});\n\n// Moralis const TODO chain change?\nconst serverUrl = 'https://xhuajeqb4esg.usemoralis.com:2053/server';\nconst appId = 'EKKcMCLp0U2o6l5xCNbuvZmmjCKkyRThrBqzEj9Z';\nconst rootElement = document.getElementById('root');\n\n// ==================================================================================\nrender(\n  <ChakraProvider theme={theme}>\n    <HashRouter basename={''}>\n      <MoralisProvider appId={appId} serverUrl={serverUrl}>\n        <Routes>\n          <Route path=\"/\" element={<App />} key={GLOBAL.getAppState().routeky}>\n            <Route\n              path=\"home\"\n              element={<Home />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              index\n              element={<Home />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"show/:did\"\n              element={<Show />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"editor\"\n              element={<Editor />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"search\"\n              element={<Search />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"register\"\n              element={<Register />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"avatar\"\n              element={<Avatar />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"connect/:did\"\n              element={<Connect />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"message/:msg\"\n              element={<Message />}\n              key={GLOBAL.getAppState().routeky}\n            />\n          </Route>\n        </Routes>\n      </MoralisProvider>\n    </HashRouter>\n  </ChakraProvider>,\n  rootElement\n);\n\n//reportWebVitals();\n"],"sourceRoot":""}